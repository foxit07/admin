(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["/js/vendor"],{

/***/ "./node_modules/bootstrap-table-mobile/bootstrap-table-mobile.js":
/*!***********************************************************************!*\
  !*** ./node_modules/bootstrap-table-mobile/bootstrap-table-mobile.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\r\n * @author: Dennis HernÃ¡ndez\r\n * @webSite: http://djhvscf.github.io/Blog\r\n * @version: v1.1.0\r\n */\r\n\r\n!function ($) {\r\n\r\n    'use strict';\r\n\r\n    var showHideColumns = function (that, checked) {\r\n        if (that.options.columnsHidden.length > 0 ) {\r\n            $.each(that.columns, function (i, column) {\r\n                if (that.options.columnsHidden.indexOf(column.field) !== -1) {\r\n                    if (column.visible !== checked) {\r\n                        that.toggleColumn($.fn.bootstrapTable.utils.getFieldIndex(that.columns, column.field), checked, true);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    var resetView = function (that) {\r\n        if (that.options.height || that.options.showFooter) {\r\n            setTimeout(function(){\r\n                that.resetView.call(that);\r\n            }, 1);\r\n        }\r\n    };\r\n\r\n    var changeView = function (that, width, height) {\r\n        if (that.options.minHeight) {\r\n            if ((width <= that.options.minWidth) && (height <= that.options.minHeight)) {\r\n                conditionCardView(that);\r\n            } else if ((width > that.options.minWidth) && (height > that.options.minHeight)) {\r\n                conditionFullView(that);\r\n            }\r\n        } else {\r\n            if (width <= that.options.minWidth) {\r\n                conditionCardView(that);\r\n            } else if (width > that.options.minWidth) {\r\n                conditionFullView(that);\r\n            }\r\n        }\r\n\r\n        resetView(that);\r\n    };\r\n\r\n    var conditionCardView = function (that) {\r\n        changeTableView(that, false);\r\n        showHideColumns(that, false);\r\n    };\r\n\r\n    var conditionFullView = function (that) {\r\n        changeTableView(that, true);\r\n        showHideColumns(that, true);\r\n    };\r\n\r\n    var changeTableView = function (that, cardViewState) {\r\n        that.options.cardView = cardViewState;\r\n        that.toggleView();\r\n    };\r\n\r\n    var debounce = function(func,wait) {\r\n        var timeout;\r\n        return function() {\r\n            var context = this,\r\n                args = arguments;\r\n            var later = function() {\r\n                timeout = null;\r\n                func.apply(context,args);\r\n            };\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    };\r\n\r\n    $.extend($.fn.bootstrapTable.defaults, {\r\n        mobileResponsive: false,\r\n        minWidth: 562,\r\n        minHeight: undefined,\r\n        heightThreshold: 100, // just slightly larger than mobile chrome's auto-hiding toolbar\r\n        checkOnInit: true,\r\n        columnsHidden: []\r\n    });\r\n\r\n    var BootstrapTable = $.fn.bootstrapTable.Constructor,\r\n        _init = BootstrapTable.prototype.init;\r\n\r\n    BootstrapTable.prototype.init = function () {\r\n        _init.apply(this, Array.prototype.slice.apply(arguments));\r\n\r\n        if (!this.options.mobileResponsive) {\r\n            return;\r\n        }\r\n\r\n        if (!this.options.minWidth) {\r\n            return;\r\n        }\r\n\r\n        if (this.options.minWidth < 100 && this.options.resizable) {\r\n            console.log(\"The minWidth when the resizable extension is active should be greater or equal than 100\");\r\n            this.options.minWidth = 100;\r\n        }\r\n\r\n        var that = this,\r\n            old = {\r\n                width: $(window).width(),\r\n                height: $(window).height()\r\n            };\r\n\r\n        $(window).on('resize orientationchange',debounce(function (evt) {\r\n            // reset view if height has only changed by at least the threshold.\r\n            var height = $(this).height(),\r\n                width = $(this).width();\r\n\r\n            if (Math.abs(old.height - height) > that.options.heightThreshold || old.width != width) {\r\n                changeView(that, width, height);\r\n                old = {\r\n                    width: width,\r\n                    height: height\r\n                };\r\n            }\r\n        },200));\r\n\r\n        if (this.options.checkOnInit) {\r\n            var height = $(window).height(),\r\n                width = $(window).width();\r\n            changeView(this, width, height);\r\n            old = {\r\n                width: width,\r\n                height: height\r\n            };\r\n        }\r\n    };\r\n}(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwLXRhYmxlLW1vYmlsZS9ib290c3RyYXAtdGFibGUtbW9iaWxlLmpzP2I5MTIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9ib290c3RyYXAtdGFibGUtbW9iaWxlL2Jvb3RzdHJhcC10YWJsZS1tb2JpbGUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGF1dGhvcjogRGVubmlzIEhlcm7DoW5kZXpcclxuICogQHdlYlNpdGU6IGh0dHA6Ly9kamh2c2NmLmdpdGh1Yi5pby9CbG9nXHJcbiAqIEB2ZXJzaW9uOiB2MS4xLjBcclxuICovXHJcblxyXG4hZnVuY3Rpb24gKCQpIHtcclxuXHJcbiAgICAndXNlIHN0cmljdCc7XHJcblxyXG4gICAgdmFyIHNob3dIaWRlQ29sdW1ucyA9IGZ1bmN0aW9uICh0aGF0LCBjaGVja2VkKSB7XHJcbiAgICAgICAgaWYgKHRoYXQub3B0aW9ucy5jb2x1bW5zSGlkZGVuLmxlbmd0aCA+IDAgKSB7XHJcbiAgICAgICAgICAgICQuZWFjaCh0aGF0LmNvbHVtbnMsIGZ1bmN0aW9uIChpLCBjb2x1bW4pIHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGF0Lm9wdGlvbnMuY29sdW1uc0hpZGRlbi5pbmRleE9mKGNvbHVtbi5maWVsZCkgIT09IC0xKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNvbHVtbi52aXNpYmxlICE9PSBjaGVja2VkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoYXQudG9nZ2xlQ29sdW1uKCQuZm4uYm9vdHN0cmFwVGFibGUudXRpbHMuZ2V0RmllbGRJbmRleCh0aGF0LmNvbHVtbnMsIGNvbHVtbi5maWVsZCksIGNoZWNrZWQsIHRydWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgcmVzZXRWaWV3ID0gZnVuY3Rpb24gKHRoYXQpIHtcclxuICAgICAgICBpZiAodGhhdC5vcHRpb25zLmhlaWdodCB8fCB0aGF0Lm9wdGlvbnMuc2hvd0Zvb3Rlcikge1xyXG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICB0aGF0LnJlc2V0Vmlldy5jYWxsKHRoYXQpO1xyXG4gICAgICAgICAgICB9LCAxKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBjaGFuZ2VWaWV3ID0gZnVuY3Rpb24gKHRoYXQsIHdpZHRoLCBoZWlnaHQpIHtcclxuICAgICAgICBpZiAodGhhdC5vcHRpb25zLm1pbkhlaWdodCkge1xyXG4gICAgICAgICAgICBpZiAoKHdpZHRoIDw9IHRoYXQub3B0aW9ucy5taW5XaWR0aCkgJiYgKGhlaWdodCA8PSB0aGF0Lm9wdGlvbnMubWluSGVpZ2h0KSkge1xyXG4gICAgICAgICAgICAgICAgY29uZGl0aW9uQ2FyZFZpZXcodGhhdCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoKHdpZHRoID4gdGhhdC5vcHRpb25zLm1pbldpZHRoKSAmJiAoaGVpZ2h0ID4gdGhhdC5vcHRpb25zLm1pbkhlaWdodCkpIHtcclxuICAgICAgICAgICAgICAgIGNvbmRpdGlvbkZ1bGxWaWV3KHRoYXQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgaWYgKHdpZHRoIDw9IHRoYXQub3B0aW9ucy5taW5XaWR0aCkge1xyXG4gICAgICAgICAgICAgICAgY29uZGl0aW9uQ2FyZFZpZXcodGhhdCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAod2lkdGggPiB0aGF0Lm9wdGlvbnMubWluV2lkdGgpIHtcclxuICAgICAgICAgICAgICAgIGNvbmRpdGlvbkZ1bGxWaWV3KHRoYXQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXNldFZpZXcodGhhdCk7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBjb25kaXRpb25DYXJkVmlldyA9IGZ1bmN0aW9uICh0aGF0KSB7XHJcbiAgICAgICAgY2hhbmdlVGFibGVWaWV3KHRoYXQsIGZhbHNlKTtcclxuICAgICAgICBzaG93SGlkZUNvbHVtbnModGhhdCwgZmFsc2UpO1xyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgY29uZGl0aW9uRnVsbFZpZXcgPSBmdW5jdGlvbiAodGhhdCkge1xyXG4gICAgICAgIGNoYW5nZVRhYmxlVmlldyh0aGF0LCB0cnVlKTtcclxuICAgICAgICBzaG93SGlkZUNvbHVtbnModGhhdCwgdHJ1ZSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBjaGFuZ2VUYWJsZVZpZXcgPSBmdW5jdGlvbiAodGhhdCwgY2FyZFZpZXdTdGF0ZSkge1xyXG4gICAgICAgIHRoYXQub3B0aW9ucy5jYXJkVmlldyA9IGNhcmRWaWV3U3RhdGU7XHJcbiAgICAgICAgdGhhdC50b2dnbGVWaWV3KCk7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBkZWJvdW5jZSA9IGZ1bmN0aW9uKGZ1bmMsd2FpdCkge1xyXG4gICAgICAgIHZhciB0aW1lb3V0O1xyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgdmFyIGNvbnRleHQgPSB0aGlzLFxyXG4gICAgICAgICAgICAgICAgYXJncyA9IGFyZ3VtZW50cztcclxuICAgICAgICAgICAgdmFyIGxhdGVyID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICB0aW1lb3V0ID0gbnVsbDtcclxuICAgICAgICAgICAgICAgIGZ1bmMuYXBwbHkoY29udGV4dCxhcmdzKTtcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xyXG4gICAgICAgICAgICB0aW1lb3V0ID0gc2V0VGltZW91dChsYXRlciwgd2FpdCk7XHJcbiAgICAgICAgfTtcclxuICAgIH07XHJcblxyXG4gICAgJC5leHRlbmQoJC5mbi5ib290c3RyYXBUYWJsZS5kZWZhdWx0cywge1xyXG4gICAgICAgIG1vYmlsZVJlc3BvbnNpdmU6IGZhbHNlLFxyXG4gICAgICAgIG1pbldpZHRoOiA1NjIsXHJcbiAgICAgICAgbWluSGVpZ2h0OiB1bmRlZmluZWQsXHJcbiAgICAgICAgaGVpZ2h0VGhyZXNob2xkOiAxMDAsIC8vIGp1c3Qgc2xpZ2h0bHkgbGFyZ2VyIHRoYW4gbW9iaWxlIGNocm9tZSdzIGF1dG8taGlkaW5nIHRvb2xiYXJcclxuICAgICAgICBjaGVja09uSW5pdDogdHJ1ZSxcclxuICAgICAgICBjb2x1bW5zSGlkZGVuOiBbXVxyXG4gICAgfSk7XHJcblxyXG4gICAgdmFyIEJvb3RzdHJhcFRhYmxlID0gJC5mbi5ib290c3RyYXBUYWJsZS5Db25zdHJ1Y3RvcixcclxuICAgICAgICBfaW5pdCA9IEJvb3RzdHJhcFRhYmxlLnByb3RvdHlwZS5pbml0O1xyXG5cclxuICAgIEJvb3RzdHJhcFRhYmxlLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIF9pbml0LmFwcGx5KHRoaXMsIEFycmF5LnByb3RvdHlwZS5zbGljZS5hcHBseShhcmd1bWVudHMpKTtcclxuXHJcbiAgICAgICAgaWYgKCF0aGlzLm9wdGlvbnMubW9iaWxlUmVzcG9uc2l2ZSkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoIXRoaXMub3B0aW9ucy5taW5XaWR0aCkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodGhpcy5vcHRpb25zLm1pbldpZHRoIDwgMTAwICYmIHRoaXMub3B0aW9ucy5yZXNpemFibGUpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJUaGUgbWluV2lkdGggd2hlbiB0aGUgcmVzaXphYmxlIGV4dGVuc2lvbiBpcyBhY3RpdmUgc2hvdWxkIGJlIGdyZWF0ZXIgb3IgZXF1YWwgdGhhbiAxMDBcIik7XHJcbiAgICAgICAgICAgIHRoaXMub3B0aW9ucy5taW5XaWR0aCA9IDEwMDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHZhciB0aGF0ID0gdGhpcyxcclxuICAgICAgICAgICAgb2xkID0ge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6ICQod2luZG93KS53aWR0aCgpLFxyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAkKHdpbmRvdykuaGVpZ2h0KClcclxuICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgJCh3aW5kb3cpLm9uKCdyZXNpemUgb3JpZW50YXRpb25jaGFuZ2UnLGRlYm91bmNlKGZ1bmN0aW9uIChldnQpIHtcclxuICAgICAgICAgICAgLy8gcmVzZXQgdmlldyBpZiBoZWlnaHQgaGFzIG9ubHkgY2hhbmdlZCBieSBhdCBsZWFzdCB0aGUgdGhyZXNob2xkLlxyXG4gICAgICAgICAgICB2YXIgaGVpZ2h0ID0gJCh0aGlzKS5oZWlnaHQoKSxcclxuICAgICAgICAgICAgICAgIHdpZHRoID0gJCh0aGlzKS53aWR0aCgpO1xyXG5cclxuICAgICAgICAgICAgaWYgKE1hdGguYWJzKG9sZC5oZWlnaHQgLSBoZWlnaHQpID4gdGhhdC5vcHRpb25zLmhlaWdodFRocmVzaG9sZCB8fCBvbGQud2lkdGggIT0gd2lkdGgpIHtcclxuICAgICAgICAgICAgICAgIGNoYW5nZVZpZXcodGhhdCwgd2lkdGgsIGhlaWdodCk7XHJcbiAgICAgICAgICAgICAgICBvbGQgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IHdpZHRoLFxyXG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogaGVpZ2h0XHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSwyMDApKTtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5jaGVja09uSW5pdCkge1xyXG4gICAgICAgICAgICB2YXIgaGVpZ2h0ID0gJCh3aW5kb3cpLmhlaWdodCgpLFxyXG4gICAgICAgICAgICAgICAgd2lkdGggPSAkKHdpbmRvdykud2lkdGgoKTtcclxuICAgICAgICAgICAgY2hhbmdlVmlldyh0aGlzLCB3aWR0aCwgaGVpZ2h0KTtcclxuICAgICAgICAgICAgb2xkID0ge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IHdpZHRoLFxyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiBoZWlnaHRcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG59KGpRdWVyeSk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/bootstrap-table-mobile/bootstrap-table-mobile.js\n");

/***/ }),

/***/ "./node_modules/bootstrap-table/src/bootstrap-table.js":
/*!*************************************************************!*\
  !*** ./node_modules/bootstrap-table/src/bootstrap-table.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _constants_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants/index.js */ \"./node_modules/bootstrap-table/src/constants/index.js\");\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/index.js */ \"./node_modules/bootstrap-table/src/utils/index.js\");\n/* harmony import */ var _virtual_scroll_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./virtual-scroll/index.js */ \"./node_modules/bootstrap-table/src/virtual-scroll/index.js\");\n/**\n * @author zhixin wen <wenzhixin2010@gmail.com>\n * version: 1.15.4\n * https://github.com/wenzhixin/bootstrap-table/\n */\n\n\n\n\n\nclass BootstrapTable {\n  constructor (el, options) {\n    this.options = options\n    this.$el = $(el)\n    this.$el_ = this.$el.clone()\n    this.timeoutId_ = 0\n    this.timeoutFooter_ = 0\n\n    this.init()\n  }\n\n  init () {\n    this.initConstants()\n    this.initLocale()\n    this.initContainer()\n    this.initTable()\n    this.initHeader()\n    this.initData()\n    this.initHiddenRows()\n    this.initToolbar()\n    this.initPagination()\n    this.initBody()\n    this.initSearchText()\n    this.initServer()\n  }\n\n  initConstants () {\n    const o = this.options\n    this.constants = _constants_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].CONSTANTS\n    this.constants.theme = $.fn.bootstrapTable.theme\n\n    const buttonsPrefix = o.buttonsPrefix ? `${o.buttonsPrefix}-` : ''\n    this.constants.buttonsClass = [\n      o.buttonsPrefix,\n      buttonsPrefix + o.buttonsClass,\n      _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(`${buttonsPrefix}%s`, o.iconSize)\n    ].join(' ').trim()\n  }\n\n  initLocale () {\n    if (this.options.locale) {\n      const locales = $.fn.bootstrapTable.locales\n      const parts = this.options.locale.split(/-|_/)\n\n      parts[0] = parts[0].toLowerCase()\n      if (parts[1]) {\n        parts[1] = parts[1].toUpperCase()\n      }\n\n      if (locales[this.options.locale]) {\n        $.extend(this.options, locales[this.options.locale])\n      } else if (locales[parts.join('-')]) {\n        $.extend(this.options, locales[parts.join('-')])\n      } else if (locales[parts[0]]) {\n        $.extend(this.options, locales[parts[0]])\n      }\n    }\n  }\n\n  initContainer () {\n    const topPagination = ['top', 'both'].includes(this.options.paginationVAlign)\n      ? '<div class=\"fixed-table-pagination clearfix\"></div>' : ''\n    const bottomPagination = ['bottom', 'both'].includes(this.options.paginationVAlign)\n      ? '<div class=\"fixed-table-pagination\"></div>' : ''\n\n    this.$container = $(`\n      <div class=\"bootstrap-table ${this.constants.theme}\">\n      <div class=\"fixed-table-toolbar\"></div>\n      ${topPagination}\n      <div class=\"fixed-table-container\">\n      <div class=\"fixed-table-header\"><table></table></div>\n      <div class=\"fixed-table-body\">\n      <div class=\"fixed-table-loading\">\n      <span class=\"loading-wrap\">\n      <span class=\"loading-text\">${this.options.formatLoadingMessage()}</span>\n      <span class=\"animation-wrap\"><span class=\"animation-dot\"></span></span>\n      </span>\n      </div>\n      </div>\n      <div class=\"fixed-table-footer\"><table><thead><tr></tr></thead></table></div>\n      </div>\n      ${bottomPagination}\n      </div>\n    `)\n\n    this.$container.insertAfter(this.$el)\n    this.$tableContainer = this.$container.find('.fixed-table-container')\n    this.$tableHeader = this.$container.find('.fixed-table-header')\n    this.$tableBody = this.$container.find('.fixed-table-body')\n    this.$tableLoading = this.$container.find('.fixed-table-loading')\n    this.$tableFooter = this.$el.find('tfoot')\n    // checking if custom table-toolbar exists or not\n    if (this.options.buttonsToolbar) {\n      this.$toolbar = $('body').find(this.options.buttonsToolbar)\n    } else {\n      this.$toolbar = this.$container.find('.fixed-table-toolbar')\n    }\n    this.$pagination = this.$container.find('.fixed-table-pagination')\n\n    this.$tableBody.append(this.$el)\n    this.$container.after('<div class=\"clearfix\"></div>')\n\n    this.$el.addClass(this.options.classes)\n    this.$tableLoading.addClass(this.options.classes)\n\n    if (this.options.height) {\n      this.$tableContainer.addClass('fixed-height')\n\n      if (this.options.showFooter) {\n        this.$tableContainer.addClass('has-footer')\n      }\n\n      if (this.options.classes.split(' ').includes('table-bordered')) {\n        this.$tableBody.append('<div class=\"fixed-table-border\"></div>')\n        this.$tableBorder = this.$tableBody.find('.fixed-table-border')\n        this.$tableLoading.addClass('fixed-table-border')\n      }\n\n      this.$tableFooter = this.$container.find('.fixed-table-footer')\n    } else {\n      if (!this.$tableFooter.length) {\n        this.$el.append('<tfoot><tr></tr></tfoot>')\n        this.$tableFooter = this.$el.find('tfoot')\n      }\n    }\n  }\n\n  initTable () {\n    const columns = []\n    const data = []\n\n    this.$header = this.$el.find('>thead')\n    if (!this.$header.length) {\n      this.$header = $(`<thead class=\"${this.options.theadClasses}\"></thead>`).appendTo(this.$el)\n    } else if (this.options.theadClasses) {\n      this.$header.addClass(this.options.theadClasses)\n    }\n    this.$header.find('tr').each((i, el) => {\n      const column = []\n\n      $(el).find('th').each((i, el) => {\n        // #2014: getFieldIndex and elsewhere assume this is string, causes issues if not\n        if (typeof $(el).data('field') !== 'undefined') {\n          $(el).data('field', `${$(el).data('field')}`)\n        }\n        column.push($.extend({}, {\n          title: $(el).html(),\n          'class': $(el).attr('class'),\n          titleTooltip: $(el).attr('title'),\n          rowspan: $(el).attr('rowspan') ? +$(el).attr('rowspan') : undefined,\n          colspan: $(el).attr('colspan') ? +$(el).attr('colspan') : undefined\n        }, $(el).data()))\n      })\n      columns.push(column)\n    })\n\n    if (!Array.isArray(this.options.columns[0])) {\n      this.options.columns = [this.options.columns]\n    }\n\n    this.options.columns = $.extend(true, [], columns, this.options.columns)\n    this.columns = []\n    this.fieldsColumnsIndex = []\n\n    _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setFieldIndex(this.options.columns)\n\n    this.options.columns.forEach((columns, i) => {\n      columns.forEach((_column, j) => {\n        const column = $.extend({}, BootstrapTable.COLUMN_DEFAULTS, _column)\n\n        if (typeof column.fieldIndex !== 'undefined') {\n          this.columns[column.fieldIndex] = column\n          this.fieldsColumnsIndex[column.field] = column.fieldIndex\n        }\n\n        this.options.columns[i][j] = column\n      })\n    })\n\n    // if options.data is setting, do not process tbody and tfoot data\n    if (!this.options.data.length) {\n      this.options.data = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].trToData(this.columns, this.$el.find('>tbody>tr'))\n      if (data.length) {\n        this.fromHtml = true\n      }\n    }\n\n    this.footerData = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].trToData(this.columns, this.$el.find('>tfoot>tr'))\n    if (this.footerData) {\n      this.$el.find('tfoot').html('<tr></tr>')\n    }\n\n    if (!this.options.showFooter || this.options.cardView) {\n      this.$tableFooter.hide()\n    } else {\n      this.$tableFooter.show()\n    }\n  }\n\n  initHeader () {\n    const visibleColumns = {}\n    const html = []\n\n    this.header = {\n      fields: [],\n      styles: [],\n      classes: [],\n      formatters: [],\n      detailFormatters: [],\n      events: [],\n      sorters: [],\n      sortNames: [],\n      cellStyles: [],\n      searchables: []\n    }\n\n    _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].updateFieldGroup(this.options.columns)\n\n    this.options.columns.forEach((columns, i) => {\n      html.push('<tr>')\n\n      if (i === 0 && !this.options.cardView && this.options.detailView && this.options.detailViewIcon) {\n        html.push(`<th class=\"detail\" rowspan=\"${this.options.columns.length}\">\n          <div class=\"fht-cell\"></div>\n          </th>\n        `)\n      }\n\n      columns.forEach((column, j) => {\n        const class_ = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(' class=\"%s\"', column['class'])\n        const unitWidth = column.widthUnit\n        const width = parseFloat(column.width)\n\n        const halign = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf('text-align: %s; ', column.halign ? column.halign : column.align)\n        const align = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf('text-align: %s; ', column.align)\n        let style = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf('vertical-align: %s; ', column.valign)\n        style += _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf('width: %s; ', (column.checkbox || column.radio) && !width\n          ? (!column.showSelectTitle ? '36px' : undefined)\n          : (width ? width + unitWidth : undefined))\n\n        if (typeof column.fieldIndex === 'undefined' && !column.visible) {\n          return\n        }\n\n        if (typeof column.fieldIndex !== 'undefined') {\n          this.header.fields[column.fieldIndex] = column.field\n          this.header.styles[column.fieldIndex] = align + style\n          this.header.classes[column.fieldIndex] = class_\n          this.header.formatters[column.fieldIndex] = column.formatter\n          this.header.detailFormatters[column.fieldIndex] = column.detailFormatter\n          this.header.events[column.fieldIndex] = column.events\n          this.header.sorters[column.fieldIndex] = column.sorter\n          this.header.sortNames[column.fieldIndex] = column.sortName\n          this.header.cellStyles[column.fieldIndex] = column.cellStyle\n          this.header.searchables[column.fieldIndex] = column.searchable\n\n          if (!column.visible) {\n            return\n          }\n\n          if (this.options.cardView && (!column.cardVisible)) {\n            return\n          }\n\n          visibleColumns[column.field] = column\n        }\n\n        html.push(`<th${_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(' title=\"%s\"', column.titleTooltip)}`,\n          column.checkbox || column.radio\n            ? _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(' class=\"bs-checkbox %s\"', column['class'] || '')\n            : class_,\n          _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(' style=\"%s\"', halign + style),\n          _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(' rowspan=\"%s\"', column.rowspan),\n          _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(' colspan=\"%s\"', column.colspan),\n          _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(' data-field=\"%s\"', column.field),\n          // If `column` is not the first element of `this.options.columns[0]`, then className 'data-not-first-th' should be added.\n          j === 0 && i > 0 ? ' data-not-first-th' : '',\n          '>')\n\n        html.push(_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf('<div class=\"th-inner %s\">', this.options.sortable && column.sortable\n          ? 'sortable both' : ''))\n\n        let text = this.options.escape ? _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].escapeHTML(column.title) : column.title\n\n        const title = text\n        if (column.checkbox) {\n          text = ''\n          if (!this.options.singleSelect && this.options.checkboxHeader) {\n            text = '<label><input name=\"btSelectAll\" type=\"checkbox\" /><span></span></label>'\n          }\n          this.header.stateField = column.field\n        }\n        if (column.radio) {\n          text = ''\n          this.header.stateField = column.field\n          this.options.singleSelect = true\n        }\n        if (!text && column.showSelectTitle) {\n          text += title\n        }\n\n        html.push(text)\n        html.push('</div>')\n        html.push('<div class=\"fht-cell\"></div>')\n        html.push('</div>')\n        html.push('</th>')\n      })\n      html.push('</tr>')\n    })\n\n    this.$header.html(html.join(''))\n    this.$header.find('th[data-field]').each((i, el) => {\n      $(el).data(visibleColumns[$(el).data('field')])\n    })\n    this.$container.off('click', '.th-inner').on('click', '.th-inner', e => {\n      const $this = $(e.currentTarget)\n\n      if (this.options.detailView && !$this.parent().hasClass('bs-checkbox')) {\n        if ($this.closest('.bootstrap-table')[0] !== this.$container[0]) {\n          return false\n        }\n      }\n\n      if (this.options.sortable && $this.parent().data().sortable) {\n        this.onSort(e)\n      }\n    })\n\n    this.$header.children().children().off('keypress').on('keypress', e => {\n      if (this.options.sortable && $(e.currentTarget).data().sortable) {\n        const code = e.keyCode || e.which\n        if (code === 13) { // Enter keycode\n          this.onSort(e)\n        }\n      }\n    })\n\n    const resizeEvent = `resize.bootstrap-table${this.$el.attr('id') || ''}`\n    $(window).off(resizeEvent)\n    if (!this.options.showHeader || this.options.cardView) {\n      this.$header.hide()\n      this.$tableHeader.hide()\n      this.$tableLoading.css('top', 0)\n    } else {\n      this.$header.show()\n      this.$tableHeader.show()\n      this.$tableLoading.css('top', this.$header.outerHeight() + 1)\n      // Assign the correct sortable arrow\n      this.getCaret()\n      $(window).on(resizeEvent, e => this.resetWidth(e))\n    }\n\n    this.$selectAll = this.$header.find('[name=\"btSelectAll\"]')\n    this.$selectAll.off('click').on('click', ({currentTarget}) => {\n      const checked = $(currentTarget).prop('checked')\n      this[checked ? 'checkAll' : 'uncheckAll']()\n      this.updateSelected()\n    })\n  }\n\n  initData (data, type) {\n    if (type === 'append') {\n      this.options.data = this.options.data.concat(data)\n    } else if (type === 'prepend') {\n      this.options.data = [].concat(data).concat(this.options.data)\n    } else {\n      this.options.data = data || this.options.data\n    }\n\n    this.data = this.options.data\n\n    if (this.options.sidePagination === 'server') {\n      return\n    }\n    this.initSort()\n  }\n\n  initSort () {\n    let name = this.options.sortName\n    const order = this.options.sortOrder === 'desc' ? -1 : 1\n    const index = this.header.fields.indexOf(this.options.sortName)\n    let timeoutId = 0\n\n    if (index !== -1) {\n      if (this.options.sortStable) {\n        this.data.forEach((row, i) => {\n          if (!row.hasOwnProperty('_position')) {\n            row._position = i\n          }\n        })\n      }\n\n      if (this.options.customSort) {\n        _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].calculateObjectValue(this.options, this.options.customSort, [\n          this.options.sortName,\n          this.options.sortOrder,\n          this.data\n        ])\n      } else {\n        this.data.sort((a, b) => {\n          if (this.header.sortNames[index]) {\n            name = this.header.sortNames[index]\n          }\n          const aa = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getItemField(a, name, this.options.escape)\n          const bb = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getItemField(b, name, this.options.escape)\n          const value = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].calculateObjectValue(this.header, this.header.sorters[index], [aa, bb, a, b])\n\n          if (value !== undefined) {\n            if (this.options.sortStable && value === 0) {\n              return order * (a._position - b._position)\n            }\n            return order * value\n          }\n\n          return _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sort(aa, bb, order, this.options.sortStable)\n        })\n      }\n\n      if (this.options.sortClass !== undefined) {\n        clearTimeout(timeoutId)\n        timeoutId = setTimeout(() => {\n          this.$el.removeClass(this.options.sortClass)\n          const index = this.$header.find(`[data-field=\"${this.options.sortName}\"]`).index()\n          this.$el.find(`tr td:nth-child(${index + 1})`).addClass(this.options.sortClass)\n        }, 250)\n      }\n    }\n  }\n\n  onSort ({type, currentTarget}) {\n    const $this = type === 'keypress' ? $(currentTarget) : $(currentTarget).parent()\n    const $this_ = this.$header.find('th').eq($this.index())\n\n    this.$header.add(this.$header_).find('span.order').remove()\n\n    if (this.options.sortName === $this.data('field')) {\n      this.options.sortOrder = this.options.sortOrder === 'asc' ? 'desc' : 'asc'\n    } else {\n      this.options.sortName = $this.data('field')\n      if (this.options.rememberOrder) {\n        this.options.sortOrder = $this.data('order') === 'asc' ? 'desc' : 'asc'\n      } else {\n        this.options.sortOrder = this.columns[this.fieldsColumnsIndex[$this.data('field')]].sortOrder ||\n          this.columns[this.fieldsColumnsIndex[$this.data('field')]].order\n      }\n    }\n    this.trigger('sort', this.options.sortName, this.options.sortOrder)\n\n    $this.add($this_).data('order', this.options.sortOrder)\n\n    // Assign the correct sortable arrow\n    this.getCaret()\n\n    if (this.options.sidePagination === 'server') {\n      this.options.pageNumber = 1\n      this.initServer(this.options.silentSort)\n      return\n    }\n\n    this.initSort()\n    this.initBody()\n  }\n\n  initToolbar () {\n    const o = this.options\n    let html = []\n    let timeoutId = 0\n    let $keepOpen\n    let $search\n    let switchableCount = 0\n\n    if (this.$toolbar.find('.bs-bars').children().length) {\n      $('body').append($(o.toolbar))\n    }\n    this.$toolbar.html('')\n\n    if (typeof o.toolbar === 'string' || typeof o.toolbar === 'object') {\n      $(_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf('<div class=\"bs-bars %s-%s\"></div>', this.constants.classes.pull, o.toolbarAlign))\n        .appendTo(this.$toolbar)\n        .append($(o.toolbar))\n    }\n\n    // showColumns, showToggle, showRefresh\n    html = [`<div class=\"${[\n      'columns',\n      `columns-${o.buttonsAlign}`,\n      this.constants.classes.buttonsGroup,\n      `${this.constants.classes.pull}-${o.buttonsAlign}`\n    ].join(' ')}\">`]\n\n    if (typeof o.icons === 'string') {\n      o.icons = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].calculateObjectValue(null, o.icons)\n    }\n\n    if (o.showPaginationSwitch) {\n      html.push(`<button class=\"${this.constants.buttonsClass}\" type=\"button\" name=\"paginationSwitch\"\n        aria-label=\"Pagination Switch\" title=\"${o.formatPaginationSwitch()}\">\n        ${o.showButtonIcons ? _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(this.constants.html.icon, o.iconsPrefix, o.icons.paginationSwitchDown) : ''}\n        ${o.showButtonText ? o.formatPaginationSwitchUp() : ''}\n        </button>`)\n    }\n\n    if (o.showRefresh) {\n      html.push(`<button class=\"${this.constants.buttonsClass}\" type=\"button\" name=\"refresh\"\n        aria-label=\"Refresh\" title=\"${o.formatRefresh()}\">\n        ${o.showButtonIcons ? _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(this.constants.html.icon, o.iconsPrefix, o.icons.refresh) : ''}\n        ${o.showButtonText ? o.formatRefresh() : ''}\n        </button>`)\n    }\n\n    if (o.showToggle) {\n      html.push(`<button class=\"${this.constants.buttonsClass}\" type=\"button\" name=\"toggle\"\n        aria-label=\"Toggle\" title=\"${o.formatToggle()}\">\n        ${o.showButtonIcons ? _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(this.constants.html.icon, o.iconsPrefix, o.icons.toggleOff) : '' }\n        ${o.showButtonText ? o.formatToggleOn() : ''}\n        </button>`)\n    }\n\n    if (o.showFullscreen) {\n      html.push(`<button class=\"${this.constants.buttonsClass}\" type=\"button\" name=\"fullscreen\"\n        aria-label=\"Fullscreen\" title=\"${o.formatFullscreen()}\">\n        ${o.showButtonIcons ? _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(this.constants.html.icon, o.iconsPrefix, o.icons.fullscreen) : '' }\n        ${o.showButtonText ? o.formatFullscreen() : ''}\n        </button>`)\n    }\n\n    if (o.showColumns) {\n      html.push(`<div class=\"keep-open ${this.constants.classes.buttonsDropdown}\" title=\"${o.formatColumns()}\">\n        <button class=\"${this.constants.buttonsClass} dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\n        aria-label=\"Columns\" title=\"${o.formatColumns()}\">\n        ${o.showButtonIcons ? _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(this.constants.html.icon, o.iconsPrefix, o.icons.columns) : '' }\n        ${o.showButtonText ? o.formatColumns() : ''}\n        ${this.constants.html.dropdownCaret}\n        </button>\n        ${this.constants.html.toolbarDropdown[0]}`)\n\n      if (o.showColumnsToggleAll) {\n        const allFieldsVisible = this.getVisibleColumns().length === this.columns.length\n        html.push(\n          _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(this.constants.html.toolbarDropdownItem,\n            _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf('<input type=\"checkbox\" class=\"toggle-all\" %s> <span>%s</span>', allFieldsVisible ? 'checked=\"checked\"' : '', o.formatColumnsToggleAll())\n          )\n        )\n\n        html.push(this.constants.html.toolbarDropdownSeperator)\n      }\n\n      this.columns.forEach((column, i) => {\n        if (column.radio || column.checkbox) {\n          return\n        }\n\n        if (o.cardView && !column.cardVisible) {\n          return\n        }\n\n        const checked = column.visible ? ' checked=\"checked\"' : ''\n\n        if (column.switchable) {\n          html.push(_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(this.constants.html.toolbarDropdownItem,\n            _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf('<input type=\"checkbox\" data-field=\"%s\" value=\"%s\"%s> <span>%s</span>',\n              column.field, i, checked, column.title)))\n          switchableCount++\n        }\n      })\n      html.push(this.constants.html.toolbarDropdown[1], '</div>')\n    }\n\n    html.push('</div>')\n\n    // Fix #188: this.showToolbar is for extensions\n    if (this.showToolbar || html.length > 2) {\n      this.$toolbar.append(html.join(''))\n    }\n\n    if (o.showPaginationSwitch) {\n      this.$toolbar.find('button[name=\"paginationSwitch\"]')\n        .off('click').on('click', () => this.togglePagination())\n    }\n\n    if (o.showFullscreen) {\n      this.$toolbar.find('button[name=\"fullscreen\"]')\n        .off('click').on('click', () => this.toggleFullscreen())\n    }\n\n    if (o.showRefresh) {\n      this.$toolbar.find('button[name=\"refresh\"]')\n        .off('click').on('click', () => this.refresh())\n    }\n\n    if (o.showToggle) {\n      this.$toolbar.find('button[name=\"toggle\"]')\n        .off('click').on('click', () => {\n          this.toggleView()\n        })\n    }\n\n    if (o.showColumns) {\n      $keepOpen = this.$toolbar.find('.keep-open')\n      const $checkboxes = $keepOpen.find('input:not(\".toggle-all\")')\n      const $toggleAll = $keepOpen.find('input.toggle-all')\n\n      if (switchableCount <= o.minimumCountColumns) {\n        $keepOpen.find('input').prop('disabled', true)\n      }\n\n      $keepOpen.find('li, label').off('click').on('click', e => {\n        e.stopImmediatePropagation()\n      })\n\n      $checkboxes.off('click').on('click', ({currentTarget}) => {\n        const $this = $(currentTarget)\n\n        this._toggleColumn($this.val(), $this.prop('checked'), false)\n        this.trigger('column-switch', $this.data('field'), $this.prop('checked'))\n        $toggleAll.prop('checked', $checkboxes.filter(':checked').length === this.columns.length)\n      })\n\n      $toggleAll.off('click').on('click', ({currentTarget}) => {\n        this._toggleAllColumns($(currentTarget).prop('checked'))\n      })\n    }\n\n    // Fix #4516: this.showSearchClearButton is for extensions\n    if (o.search || this.showSearchClearButton) {\n      html = []\n      const showSearchButton = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(this.constants.html.searchButton,\n        this.constants.buttonsClass,\n        o.formatSearch(),\n        o.showButtonIcons ? _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(this.constants.html.icon, o.iconsPrefix, o.icons.search) : '',\n        o.showButtonText ? o.formatSearch() : ''\n      )\n      const showSearchClearButton = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(this.constants.html.searchClearButton,\n        this.constants.buttonsClass,\n        o.formatClearSearch(),\n        o.showButtonIcons ? _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(this.constants.html.icon, o.iconsPrefix, o.icons.clearSearch) : '',\n        o.showButtonText ? o.formatClearSearch() : ''\n      )\n      const searchInputHtml = `<input class=\"${this.constants.classes.input}${_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(' input-%s', o.iconSize)} search-input\" type=\"text\" placeholder=\"${o.formatSearch()}\">`\n      let searchInputFinalHtml = searchInputHtml\n\n      if (o.showSearchButton || o.showSearchClearButton) {\n        const buttonsHtml = (o.showSearchButton ? showSearchButton : '') +\n          (o.showSearchClearButton ? showSearchClearButton : '')\n\n        searchInputFinalHtml = o.search ? _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(this.constants.html.inputGroup,\n          searchInputHtml, buttonsHtml) : buttonsHtml\n      }\n\n      html.push(_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(`\n        <div class=\"${this.constants.classes.pull}-${o.searchAlign} search ${this.constants.classes.inputGroup}\">\n          %s\n        </div>\n      `, searchInputFinalHtml))\n\n      this.$toolbar.append(html.join(''))\n      const $searchInput = this.$toolbar.find('.search input')\n      $search = o.showSearchButton ? this.$toolbar.find('.search button[name=search]') : $searchInput\n\n      const eventTriggers = o.showSearchButton ? 'click' :\n        (_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isIEBrowser() ? 'mouseup' : 'keyup drop blur')\n\n      $search.off(eventTriggers).on(eventTriggers, event => {\n        if (o.searchOnEnterKey && event.keyCode !== 13) {\n          return\n        }\n\n        if ([37, 38, 39, 40].includes(event.keyCode)) {\n          return\n        }\n\n        clearTimeout(timeoutId) // doesn't matter if it's 0\n        timeoutId = setTimeout(() => {\n          this.onSearch(o.showSearchButton ? {currentTarget: $searchInput} : event)\n        }, o.searchTimeOut)\n      })\n\n      if (o.showSearchClearButton) {\n        this.$toolbar.find('.search button[name=clearSearch]').click(() => {\n          this.resetSearch()\n        })\n      }\n    }\n  }\n\n  onSearch ({currentTarget, firedByInitSearchText} = {}, overwriteSearchText = true) {\n    if (currentTarget !== undefined && $(currentTarget).length && overwriteSearchText) {\n      const text = $(currentTarget).val().trim()\n\n      if (this.options.trimOnSearch && $(currentTarget).val() !== text) {\n        $(currentTarget).val(text)\n      }\n\n      if (this.searchText === text) {\n        return\n      }\n\n      if ($(currentTarget).hasClass('search-input')) {\n        this.searchText = text\n        this.options.searchText = text\n      }\n    }\n\n    if (!firedByInitSearchText) {\n      this.options.pageNumber = 1\n    }\n    this.initSearch()\n    if (firedByInitSearchText) {\n      if (this.options.sidePagination === 'client') {\n        this.updatePagination()\n      }\n    } else {\n      this.updatePagination()\n    }\n    this.trigger('search', this.searchText)\n  }\n\n  initSearch () {\n    this.filterOptions = this.filterOptions || this.options.filterOptions\n    if (this.options.sidePagination !== 'server') {\n      if (this.options.customSearch) {\n        this.data = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].calculateObjectValue(this.options, this.options.customSearch,\n          [this.options.data, this.searchText, this.filterColumns])\n        return\n      }\n\n      const s = this.searchText && (this.options.escape\n        ? _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].escapeHTML(this.searchText) : this.searchText).toLowerCase()\n      const f = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isEmptyObject(this.filterColumns) ? null : this.filterColumns\n\n      // Check filter\n      if (typeof this.filterOptions.filterAlgorithm === 'function') {\n        this.data = this.options.data.filter((item, i) => this.filterOptions.filterAlgorithm.apply(null, [item, f]))\n      } else if (typeof this.filterOptions.filterAlgorithm === 'string') {\n        this.data = f ? this.options.data.filter((item, i) => {\n          const filterAlgorithm = this.filterOptions.filterAlgorithm\n          if (filterAlgorithm === 'and') {\n            for (const key in f) {\n              if (\n                (Array.isArray(f[key]) &&\n                  !f[key].includes(item[key])) ||\n                (!Array.isArray(f[key]) &&\n                  item[key] !== f[key])\n              ) {\n                return false\n              }\n            }\n          } else if (filterAlgorithm === 'or') {\n            let match = false\n            for (const key in f) {\n              if (\n                (Array.isArray(f[key]) &&\n                  f[key].includes(item[key])) ||\n                (!Array.isArray(f[key]) &&\n                  item[key] === f[key])\n              ) {\n                match = true\n              }\n            }\n\n            return match\n          }\n\n          return true\n        }) : this.options.data\n      }\n\n      const visibleFields = this.getVisibleFields()\n      this.data = s ? this.data.filter((item, i) => {\n        for (let j = 0; j < this.header.fields.length; j++) {\n          if (!this.header.searchables[j] || (this.options.visibleSearch && visibleFields.indexOf(this.header.fields[j]) === -1)) {\n            continue\n          }\n\n          const key = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isNumeric(this.header.fields[j]) ? parseInt(this.header.fields[j], 10) : this.header.fields[j]\n          const column = this.columns[this.fieldsColumnsIndex[key]]\n          let value\n\n          if (typeof key === 'string') {\n            value = item\n            const props = key.split('.')\n            for (let i = 0; i < props.length; i++) {\n              if (value[props[i]] !== null) {\n                value = value[props[i]]\n              }\n            }\n          } else {\n            value = item[key]\n          }\n\n          // Fix #142: respect searchFormatter boolean\n          if (column && column.searchFormatter) {\n            value = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].calculateObjectValue(column,\n              this.header.formatters[j], [value, item, i, column.field], value)\n          }\n\n          if (typeof value === 'string' || typeof value === 'number') {\n            if (this.options.strictSearch) {\n              if ((`${value}`).toLowerCase() === s) {\n                return true\n              }\n            } else {\n              const largerSmallerEqualsRegex = /(?:(<=|=>|=<|>=|>|<)(?:\\s+)?(\\d+)?|(\\d+)?(\\s+)?(<=|=>|=<|>=|>|<))/gm\n              const matches = largerSmallerEqualsRegex.exec(s)\n              let comparisonCheck = false\n\n              if (matches) {\n                const operator = matches[1] || `${matches[5]}l`\n                const comparisonValue = matches[2] || matches[3]\n                const int = parseInt(value, 10)\n                const comparisonInt = parseInt(comparisonValue, 10)\n\n                switch (operator) {\n                  case '>':\n                  case '<l':\n                    comparisonCheck = int > comparisonInt\n                    break\n                  case '<':\n                  case '>l':\n                    comparisonCheck = int < comparisonInt\n                    break\n                  case '<=':\n                  case '=<':\n                  case '>=l':\n                  case '=>l':\n                    comparisonCheck = int <= comparisonInt\n                    break\n                  case '>=':\n                  case '=>':\n                  case '<=l':\n                  case '=<l':\n                    comparisonCheck = int >= comparisonInt\n                    break\n                  default:\n                    break\n                }\n              }\n\n              if (comparisonCheck || (`${value}`).toLowerCase().includes(s)) {\n                return true\n              }\n            }\n          }\n        }\n        return false\n      }) : this.data\n    }\n  }\n\n  initPagination () {\n    const o = this.options\n    if (!o.pagination) {\n      this.$pagination.hide()\n      return\n    }\n    this.$pagination.show()\n\n    const html = []\n    let $allSelected = false\n    let i\n    let from\n    let to\n    let $pageList\n    let $pre\n    let $next\n    let $number\n    const data = this.getData({includeHiddenRows: false})\n    let pageList = o.pageList\n\n    if (o.sidePagination !== 'server') {\n      o.totalRows = data.length\n    }\n\n    this.totalPages = 0\n    if (o.totalRows) {\n      if (o.pageSize === o.formatAllRows()) {\n        o.pageSize = o.totalRows\n        $allSelected = true\n      } else if (o.pageSize === o.totalRows) {\n        // Fix #667 Table with pagination,\n        // multiple pages and a search this matches to one page throws exception\n        const pageLst = typeof o.pageList === 'string'\n          ? o.pageList.replace('[', '').replace(']', '')\n            .replace(/ /g, '').toLowerCase().split(',') : o.pageList\n        if (pageLst.includes(o.formatAllRows().toLowerCase())) {\n          $allSelected = true\n        }\n      }\n\n      this.totalPages = ~~((o.totalRows - 1) / o.pageSize) + 1\n\n      o.totalPages = this.totalPages\n    }\n    if (this.totalPages > 0 && o.pageNumber > this.totalPages) {\n      o.pageNumber = this.totalPages\n    }\n\n    this.pageFrom = (o.pageNumber - 1) * o.pageSize + 1\n    this.pageTo = o.pageNumber * o.pageSize\n    if (this.pageTo > o.totalRows) {\n      this.pageTo = o.totalRows\n    }\n\n    if (this.options.pagination && this.options.sidePagination !== 'server') {\n      this.options.totalNotFiltered = this.options.data.length\n    }\n\n    if (!this.options.showExtendedPagination) {\n      this.options.totalNotFiltered = undefined\n    }\n\n    const paginationInfo = o.onlyInfoPagination ?\n      o.formatDetailPagination(o.totalRows) :\n      o.formatShowingRows(this.pageFrom, this.pageTo, o.totalRows, o.totalNotFiltered)\n\n    html.push(`<div class=\"${this.constants.classes.pull}-${o.paginationDetailHAlign} pagination-detail\">\n      <span class=\"pagination-info\">\n      ${paginationInfo}\n      </span>`)\n\n    if (!o.onlyInfoPagination) {\n      html.push('<span class=\"page-list\">')\n\n      const pageNumber = [\n        `<span class=\"${this.constants.classes.paginationDropdown}\">\n        <button class=\"${this.constants.buttonsClass} dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\">\n        <span class=\"page-size\">\n        ${$allSelected ? o.formatAllRows() : o.pageSize}\n        </span>\n        ${this.constants.html.dropdownCaret}\n        </button>\n        ${this.constants.html.pageDropdown[0]}`]\n\n      if (typeof o.pageList === 'string') {\n        const list = o.pageList.replace('[', '').replace(']', '')\n          .replace(/ /g, '').split(',')\n\n        pageList = []\n        for (const value of list) {\n          pageList.push(\n            (value.toLowerCase() === o.formatAllRows().toLowerCase() ||\n              ['all', 'unlimited'].includes(value.toLowerCase()))\n              ? o.formatAllRows() : +value)\n        }\n      }\n\n      pageList.forEach((page, i) => {\n        if (!o.smartDisplay || i === 0 || pageList[i - 1] < o.totalRows) {\n          let active\n          if ($allSelected) {\n            active = page === o.formatAllRows() ? this.constants.classes.dropdownActive : ''\n          } else {\n            active = page === o.pageSize ? this.constants.classes.dropdownActive : ''\n          }\n          pageNumber.push(_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(this.constants.html.pageDropdownItem, active, page))\n        }\n      })\n      pageNumber.push(`${this.constants.html.pageDropdown[1]}</span>`)\n\n      html.push(o.formatRecordsPerPage(pageNumber.join('')))\n      html.push('</span></div>')\n\n      html.push(`<div class=\"${this.constants.classes.pull}-${o.paginationHAlign} pagination\">`,\n        _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(this.constants.html.pagination[0], _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(' pagination-%s', o.iconSize)),\n        _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(this.constants.html.paginationItem, ' page-pre', o.formatSRPaginationPreText(), o.paginationPreText))\n\n      if (this.totalPages < o.paginationSuccessivelySize) {\n        from = 1\n        to = this.totalPages\n      } else {\n        from = o.pageNumber - o.paginationPagesBySide\n        to = from + (o.paginationPagesBySide * 2)\n      }\n\n      if (o.pageNumber < (o.paginationSuccessivelySize - 1)) {\n        to = o.paginationSuccessivelySize\n      }\n\n      if (o.paginationSuccessivelySize > this.totalPages - from) {\n        from = from - (o.paginationSuccessivelySize - (this.totalPages - from)) + 1\n      }\n\n      if (from < 1) {\n        from = 1\n      }\n\n      if (to > this.totalPages) {\n        to = this.totalPages\n      }\n\n      const middleSize = Math.round(o.paginationPagesBySide / 2)\n      const pageItem = (i, classes = '') => _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(this.constants.html.paginationItem,\n        classes + (i === o.pageNumber ? ` ${this.constants.classes.paginationActive}` : ''), o.formatSRPaginationPageText(i), i)\n\n      if (from > 1) {\n        let max = o.paginationPagesBySide\n        if (max >= from) max = from - 1\n        for (i = 1; i <= max; i++) {\n          html.push(pageItem(i))\n        }\n        if ((from - 1) === max + 1) {\n          i = from - 1\n          html.push(pageItem(i))\n        } else {\n          if ((from - 1) > max) {\n            if (\n              (from - o.paginationPagesBySide * 2) > o.paginationPagesBySide &&\n              o.paginationUseIntermediate\n            ) {\n              i = Math.round(((from - middleSize) / 2) + middleSize)\n              html.push(pageItem(i, ' page-intermediate'))\n            } else {\n              html.push(_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(this.constants.html.paginationItem,\n                ' page-first-separator disabled', '', '...'))\n            }\n          }\n        }\n      }\n\n      for (i = from; i <= to; i++) {\n        html.push(pageItem(i))\n      }\n\n      if (this.totalPages > to) {\n        let min = this.totalPages - (o.paginationPagesBySide - 1)\n        if (to >= min) min = to + 1\n        if ((to + 1) === min - 1) {\n          i = to + 1\n          html.push(pageItem(i))\n        } else {\n          if (min > (to + 1)) {\n            if (\n              (this.totalPages - to) > o.paginationPagesBySide * 2 &&\n              o.paginationUseIntermediate\n            ) {\n              i = Math.round(((this.totalPages - middleSize - to) / 2) + to)\n              html.push(pageItem(i, ' page-intermediate'))\n            } else {\n              html.push(_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(this.constants.html.paginationItem,\n                ' page-last-separator disabled', '', '...'))\n            }\n          }\n        }\n\n        for (i = min; i <= this.totalPages; i++) {\n          html.push(pageItem(i))\n        }\n      }\n\n      html.push(_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(this.constants.html.paginationItem, ' page-next', o.formatSRPaginationNextText(), o.paginationNextText))\n      html.push(this.constants.html.pagination[1], '</div>')\n    }\n    this.$pagination.html(html.join(''))\n\n    const dropupClass = ['bottom', 'both'].includes(o.paginationVAlign) ?\n      ` ${this.constants.classes.dropup}` : ''\n    this.$pagination.last().find('.page-list > span').addClass(dropupClass)\n\n    if (!o.onlyInfoPagination) {\n      $pageList = this.$pagination.find('.page-list a')\n      $pre = this.$pagination.find('.page-pre')\n      $next = this.$pagination.find('.page-next')\n      $number = this.$pagination.find('.page-item').not('.page-next, .page-pre, .page-last-separator, .page-first-separator')\n\n      if (this.totalPages <= 1) {\n        this.$pagination.find('div.pagination').hide()\n      }\n\n      if (o.smartDisplay) {\n        if (pageList.length < 2 || o.totalRows <= pageList[0]) {\n          this.$pagination.find('span.page-list').hide()\n        }\n      }\n\n      // when data is empty, hide the pagination\n      this.$pagination[this.getData().length ? 'show' : 'hide']()\n\n      if (!o.paginationLoop) {\n        if (o.pageNumber === 1) {\n          $pre.addClass('disabled')\n        }\n        if (o.pageNumber === this.totalPages) {\n          $next.addClass('disabled')\n        }\n      }\n\n      if ($allSelected) {\n        o.pageSize = o.formatAllRows()\n      }\n      // removed the events for last and first, onPageNumber executeds the same logic\n      $pageList.off('click').on('click', e => this.onPageListChange(e))\n      $pre.off('click').on('click', e => this.onPagePre(e))\n      $next.off('click').on('click', e => this.onPageNext(e))\n      $number.off('click').on('click', e => this.onPageNumber(e))\n    }\n  }\n\n  updatePagination (event) {\n    // Fix #171: IE disabled button can be clicked bug.\n    if (event && $(event.currentTarget).hasClass('disabled')) {\n      return\n    }\n\n    if (!this.options.maintainMetaData) {\n      this.resetRows()\n    }\n\n    this.initPagination()\n    if (this.options.sidePagination === 'server') {\n      this.initServer()\n    } else {\n      this.initBody()\n    }\n\n    this.trigger('page-change', this.options.pageNumber, this.options.pageSize)\n  }\n\n  onPageListChange (event) {\n    event.preventDefault()\n    const $this = $(event.currentTarget)\n\n    $this.parent().addClass(this.constants.classes.dropdownActive)\n      .siblings().removeClass(this.constants.classes.dropdownActive)\n    this.options.pageSize = $this.text().toUpperCase() === this.options.formatAllRows().toUpperCase()\n      ? this.options.formatAllRows() : +$this.text()\n    this.$toolbar.find('.page-size').text(this.options.pageSize)\n\n    this.updatePagination(event)\n    return false\n  }\n\n  onPagePre (event) {\n    event.preventDefault()\n    if ((this.options.pageNumber - 1) === 0) {\n      this.options.pageNumber = this.options.totalPages\n    } else {\n      this.options.pageNumber--\n    }\n    this.updatePagination(event)\n    return false\n  }\n\n  onPageNext (event) {\n    event.preventDefault()\n    if ((this.options.pageNumber + 1) > this.options.totalPages) {\n      this.options.pageNumber = 1\n    } else {\n      this.options.pageNumber++\n    }\n    this.updatePagination(event)\n    return false\n  }\n\n  onPageNumber (event) {\n    event.preventDefault()\n    if (this.options.pageNumber === +$(event.currentTarget).text()) {\n      return\n    }\n    this.options.pageNumber = +$(event.currentTarget).text()\n    this.updatePagination(event)\n    return false\n  }\n\n  initRow (item, i, data, trFragments) {\n    const html = []\n    let style = {}\n    const csses = []\n    let data_ = ''\n    let attributes = {}\n    const htmlAttributes = []\n\n    if (_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findIndex(this.hiddenRows, item) > -1) {\n      return\n    }\n\n    style = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].calculateObjectValue(this.options, this.options.rowStyle, [item, i], style)\n\n    if (style && style.css) {\n      for (const [key, value] of Object.entries(style.css)) {\n        csses.push(`${key}: ${value}`)\n      }\n    }\n\n    attributes = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].calculateObjectValue(this.options,\n      this.options.rowAttributes, [item, i], attributes)\n\n    if (attributes) {\n      for (const [key, value] of Object.entries(attributes)) {\n        htmlAttributes.push(`${key}=\"${_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].escapeHTML(value)}\"`)\n      }\n    }\n\n    if (item._data && !_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isEmptyObject(item._data)) {\n      for (const [k, v] of Object.entries(item._data)) {\n        // ignore data-index\n        if (k === 'index') {\n          return\n        }\n        data_ += ` data-${k}='${typeof v === 'object' ? JSON.stringify(v) : v}'`\n      }\n    }\n\n    html.push('<tr',\n      _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(' %s', htmlAttributes.length ? htmlAttributes.join(' ') : undefined),\n      _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(' id=\"%s\"', Array.isArray(item) ? undefined : item._id),\n      _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(' class=\"%s\"', style.classes || (Array.isArray(item) ? undefined : item._class)),\n      ` data-index=\"${i}\"`,\n      _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(' data-uniqueid=\"%s\"', _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getItemField(item, this.options.uniqueId, false)),\n      _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(' data-has-detail-view=\"%s\"', (!this.options.cardView && this.options.detailView && _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].calculateObjectValue(null, this.options.detailFilter, [i, item])) ? 'true' : undefined),\n      _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf('%s', data_),\n      '>'\n    )\n\n    if (this.options.cardView) {\n      html.push(`<td colspan=\"${this.header.fields.length}\"><div class=\"card-views\">`)\n    }\n\n    if (!this.options.cardView && this.options.detailView && this.options.detailViewIcon) {\n      html.push('<td>')\n\n      if (_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].calculateObjectValue(null, this.options.detailFilter, [i, item])) {\n        html.push(`\n          <a class=\"detail-icon\" href=\"#\">\n          ${_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(this.constants.html.icon, this.options.iconsPrefix, this.options.icons.detailOpen)}\n          </a>\n        `)\n      }\n\n      html.push('</td>')\n    }\n\n    this.header.fields.forEach((field, j) => {\n      let text = ''\n      let value_ = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getItemField(item, field, this.options.escape)\n      let value = ''\n      let type = ''\n      let cellStyle = {}\n      let id_ = ''\n      let class_ = this.header.classes[j]\n      let style_ = ''\n      let data_ = ''\n      let rowspan_ = ''\n      let colspan_ = ''\n      let title_ = ''\n      const column = this.columns[j]\n\n      if (this.fromHtml && typeof value_ === 'undefined') {\n        if ((!column.checkbox) && (!column.radio)) {\n          return\n        }\n      }\n\n      if (!column.visible) {\n        return\n      }\n\n      if (this.options.cardView && (!column.cardVisible)) {\n        return\n      }\n\n      if (column.escape) {\n        value_ = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].escapeHTML(value_)\n      }\n\n      if (csses.concat([this.header.styles[j]]).length) {\n        style_ = ` style=\"${csses.concat([this.header.styles[j]]).join('; ')}\"`\n      }\n      // handle td's id and class\n      if (item[`_${field}_id`]) {\n        id_ = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(' id=\"%s\"', item[`_${field}_id`])\n      }\n      if (item[`_${field}_class`]) {\n        class_ = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(' class=\"%s\"', item[`_${field}_class`])\n      }\n      if (item[`_${field}_rowspan`]) {\n        rowspan_ = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(' rowspan=\"%s\"', item[`_${field}_rowspan`])\n      }\n      if (item[`_${field}_colspan`]) {\n        colspan_ = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(' colspan=\"%s\"', item[`_${field}_colspan`])\n      }\n      if (item[`_${field}_title`]) {\n        title_ = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(' title=\"%s\"', item[`_${field}_title`])\n      }\n      cellStyle = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].calculateObjectValue(this.header,\n        this.header.cellStyles[j], [value_, item, i, field], cellStyle)\n      if (cellStyle.classes) {\n        class_ = ` class=\"${cellStyle.classes}\"`\n      }\n      if (cellStyle.css) {\n        const csses_ = []\n        for (const [key, value] of Object.entries(cellStyle.css)) {\n          csses_.push(`${key}: ${value}`)\n        }\n        style_ = ` style=\"${csses_.concat(this.header.styles[j]).join('; ')}\"`\n      }\n\n      value = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].calculateObjectValue(column,\n        this.header.formatters[j], [value_, item, i, field], value_)\n\n      if (item[`_${field}_data`] && !_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isEmptyObject(item[`_${field}_data`])) {\n        for (const [k, v] of Object.entries(item[`_${field}_data`])) {\n          // ignore data-index\n          if (k === 'index') {\n            return\n          }\n          data_ += ` data-${k}=\"${v}\"`\n        }\n      }\n\n      if (column.checkbox || column.radio) {\n        type = column.checkbox ? 'checkbox' : type\n        type = column.radio ? 'radio' : type\n\n        const c = column['class'] || ''\n        const isChecked = (value === true || value_ || (value && value.checked)) && value !== false\n        const isDisabled = !column.checkboxEnabled || (value && value.disabled)\n\n        text = [\n          this.options.cardView\n            ? `<div class=\"card-view ${c}\">`\n            : `<td class=\"bs-checkbox ${c}\"${class_}${style_}>`,\n          `<label>\n            <input\n            data-index=\"${i}\"\n            name=\"${this.options.selectItemName}\"\n            type=\"${type}\"\n            ${_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf('value=\"%s\"', item[this.options.idField])}\n            ${_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf('checked=\"%s\"', isChecked ? 'checked' : undefined)}\n            ${_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf('disabled=\"%s\"', isDisabled ? 'disabled' : undefined)} />\n            <span></span>\n            </label>`,\n          this.header.formatters[j] && typeof value === 'string' ? value : '',\n          this.options.cardView ? '</div>' : '</td>'\n        ].join('')\n\n        item[this.header.stateField] = value === true || (!!value_ || (value && value.checked))\n      } else {\n        value = typeof value === 'undefined' || value === null\n          ? this.options.undefinedText : value\n\n        if (this.options.cardView) {\n          const cardTitle = this.options.showHeader\n            ? `<span class=\"card-view-title\"${style_}>${_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getFieldTitle(this.columns, field)}</span>` : ''\n\n          text = `<div class=\"card-view\">${cardTitle}<span class=\"card-view-value\">${value}</span></div>`\n\n          if (this.options.smartDisplay && value === '') {\n            text = '<div class=\"card-view\"></div>'\n          }\n        } else {\n          text = `<td${id_}${class_}${style_}${data_}${rowspan_}${colspan_}${title_}>${value}</td>`\n        }\n      }\n\n      html.push(text)\n    })\n\n    if (this.options.cardView) {\n      html.push('</div></td>')\n    }\n    html.push('</tr>')\n\n    return html.join('')\n  }\n\n  initBody (fixedScroll) {\n    const data = this.getData()\n\n    this.trigger('pre-body', data)\n\n    this.$body = this.$el.find('>tbody')\n    if (!this.$body.length) {\n      this.$body = $('<tbody></tbody>').appendTo(this.$el)\n    }\n\n    // Fix #389 Bootstrap-table-flatJSON is not working\n    if (!this.options.pagination || this.options.sidePagination === 'server') {\n      this.pageFrom = 1\n      this.pageTo = data.length\n    }\n\n    const rows = []\n    const trFragments = $(document.createDocumentFragment())\n    let hasTr = false\n\n    for (let i = this.pageFrom - 1; i < this.pageTo; i++) {\n      const item = data[i]\n      const tr = this.initRow(item, i, data, trFragments)\n      hasTr = hasTr || !!tr\n      if (tr && typeof tr === 'string') {\n        if (!this.options.virtualScroll) {\n          trFragments.append(tr)\n        } else {\n          rows.push(tr)\n        }\n      }\n    }\n\n    // show no records\n    if (!hasTr) {\n      this.$body.html(`<tr class=\"no-records-found\">${_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf('<td colspan=\"%s\">%s</td>',\n        this.$header.find('th').length,\n        this.options.formatNoMatches())}</tr>`)\n    } else {\n      if (!this.options.virtualScroll) {\n        this.$body.html(trFragments)\n      } else {\n        if (this.virtualScroll) {\n          this.virtualScroll.destroy()\n        }\n        this.virtualScroll = new _virtual_scroll_index_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n          rows,\n          scrollEl: this.$tableBody[0],\n          contentEl: this.$body[0],\n          itemHeight: this.options.virtualScrollItemHeight,\n          callback: () => {\n            this.fitHeader()\n          }\n        })\n      }\n    }\n\n    if (!fixedScroll) {\n      this.scrollTo(0)\n    }\n\n    // click to select by column\n    this.$body.find('> tr[data-index] > td').off('click dblclick').on('click dblclick', e => {\n      const $td = $(e.currentTarget)\n      const $tr = $td.parent()\n      const $cardViewArr = $(e.target).parents('.card-views').children()\n      const $cardViewTarget = $(e.target).parents('.card-view')\n      const rowIndex = $tr.data('index')\n      const item = this.data[rowIndex]\n      const index = this.options.cardView ? $cardViewArr.index($cardViewTarget) : $td[0].cellIndex\n      const fields = this.getVisibleFields()\n      const field = fields[this.options.detailView && this.detailViewIcon && !this.options.cardView ? index - 1 : index]\n      const column = this.columns[this.fieldsColumnsIndex[field]]\n      const value = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getItemField(item, field, this.options.escape)\n\n      if ($td.find('.detail-icon').length) {\n        return\n      }\n\n      this.trigger(e.type === 'click' ? 'click-cell' : 'dbl-click-cell', field, value, item, $td)\n      this.trigger(e.type === 'click' ? 'click-row' : 'dbl-click-row', item, $tr, field)\n\n      // if click to select - then trigger the checkbox/radio click\n      if (\n        e.type === 'click' &&\n        this.options.clickToSelect &&\n        column.clickToSelect &&\n        !_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].calculateObjectValue(this.options, this.options.ignoreClickToSelectOn, [e.target])\n      ) {\n        const $selectItem = $tr.find(_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf('[name=\"%s\"]', this.options.selectItemName))\n        if ($selectItem.length) {\n          $selectItem[0].click()\n        }\n      }\n\n      if (e.type === 'click' && this.options.detailViewByClick) {\n        this.toggleDetailView(rowIndex, this.header.detailFormatters[this.fieldsColumnsIndex[field]])\n      }\n    }).off('mousedown').on('mousedown', e => {\n      // https://github.com/jquery/jquery/issues/1741\n      this.multipleSelectRowCtrlKey = e.ctrlKey || e.metaKey\n      this.multipleSelectRowShiftKey = e.shiftKey\n    })\n\n    this.$body.find('> tr[data-index] > td > .detail-icon').off('click').on('click', e => {\n      e.preventDefault()\n      this.toggleDetailView($(e.currentTarget).parent().parent().data('index'))\n      return false\n    })\n\n    this.$selectItem = this.$body.find(_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf('[name=\"%s\"]', this.options.selectItemName))\n    this.$selectItem.off('click').on('click', e => {\n      e.stopImmediatePropagation()\n\n      const $this = $(e.currentTarget)\n      this._toggleCheck($this.prop('checked'), $this.data('index'))\n    })\n\n    this.header.events.forEach((_events, i) => {\n      let events = _events\n      if (!events) {\n        return\n      }\n      // fix bug, if events is defined with namespace\n      if (typeof events === 'string') {\n        events = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].calculateObjectValue(null, events)\n      }\n\n      const field = this.header.fields[i]\n      let fieldIndex = this.getVisibleFields().indexOf(field)\n\n      if (fieldIndex === -1) {\n        return\n      }\n\n      if (this.options.detailView && !this.options.cardView) {\n        fieldIndex += 1\n      }\n\n      for (const key in events) {\n        if (!events.hasOwnProperty(key)) {\n          continue\n        }\n        const event = events[key]\n        this.$body.find('>tr:not(.no-records-found)').each((i, tr) => {\n          const $tr = $(tr)\n          const $td = $tr.find(this.options.cardView ? '.card-views>.card-view' : '>td').eq(fieldIndex)\n          const index = key.indexOf(' ')\n          const name = key.substring(0, index)\n          const el = key.substring(index + 1)\n\n          $td.find(el).off(name).on(name, e => {\n            const index = $tr.data('index')\n            const row = this.data[index]\n            const value = row[field]\n\n            event.apply(this, [e, value, row, index])\n          })\n        })\n      }\n    })\n\n    this.updateSelected()\n    this.initFooter()\n    this.resetView()\n\n    if (this.options.sidePagination !== 'server') {\n      this.options.totalRows = data.length\n    }\n\n    this.trigger('post-body', data)\n  }\n\n  initServer (silent, query, url) {\n    let data = {}\n    const index = this.header.fields.indexOf(this.options.sortName)\n\n    let params = {\n      searchText: this.searchText,\n      sortName: this.options.sortName,\n      sortOrder: this.options.sortOrder\n    }\n\n    if (this.header.sortNames[index]) {\n      params.sortName = this.header.sortNames[index]\n    }\n\n    if (this.options.pagination && this.options.sidePagination === 'server') {\n      params.pageSize = this.options.pageSize === this.options.formatAllRows()\n        ? this.options.totalRows : this.options.pageSize\n      params.pageNumber = this.options.pageNumber\n    }\n\n    if (!(url || this.options.url) && !this.options.ajax) {\n      return\n    }\n\n    if (this.options.queryParamsType === 'limit') {\n      params = {\n        search: params.searchText,\n        sort: params.sortName,\n        order: params.sortOrder\n      }\n\n      if (this.options.pagination && this.options.sidePagination === 'server') {\n        params.offset = this.options.pageSize === this.options.formatAllRows()\n          ? 0 : this.options.pageSize * (this.options.pageNumber - 1)\n        params.limit = this.options.pageSize === this.options.formatAllRows()\n          ? this.options.totalRows : this.options.pageSize\n        if (params.limit === 0) {\n          delete params.limit\n        }\n      }\n    }\n\n    if (!(_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isEmptyObject(this.filterColumnsPartial))) {\n      params.filter = JSON.stringify(this.filterColumnsPartial, null)\n    }\n\n    $.extend(params, query || {})\n\n    data = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].calculateObjectValue(this.options, this.options.queryParams, [params], data)\n\n    // false to stop request\n    if (data === false) {\n      return\n    }\n\n    if (!silent) {\n      this.showLoading()\n    }\n    const request = $.extend({}, _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].calculateObjectValue(null, this.options.ajaxOptions), {\n      type: this.options.method,\n      url: url || this.options.url,\n      data: this.options.contentType === 'application/json' && this.options.method === 'post'\n        ? JSON.stringify(data) : data,\n      cache: this.options.cache,\n      contentType: this.options.contentType,\n      dataType: this.options.dataType,\n      success: _res => {\n        const res = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].calculateObjectValue(this.options,\n          this.options.responseHandler, [_res], _res)\n\n        this.load(res)\n        this.trigger('load-success', res)\n        if (!silent) {\n          this.hideLoading()\n        }\n      },\n      error: jqXHR => {\n        let data = []\n        if (this.options.sidePagination === 'server') {\n          data = {}\n          data[this.options.totalField] = 0\n          data[this.options.dataField] = []\n        }\n        this.load(data)\n        this.trigger('load-error', jqXHR.status, jqXHR)\n        if (!silent) this.$tableLoading.hide()\n      }\n    })\n\n    if (this.options.ajax) {\n      _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].calculateObjectValue(this, this.options.ajax, [request], null)\n    } else {\n      if (this._xhr && this._xhr.readyState !== 4) {\n        this._xhr.abort()\n      }\n      this._xhr = $.ajax(request)\n    }\n\n    return data\n  }\n\n  initSearchText () {\n    if (this.options.search) {\n      this.searchText = ''\n      if (this.options.searchText !== '') {\n        const $search = this.$toolbar.find('.search input')\n        $search.val(this.options.searchText)\n        this.onSearch({currentTarget: $search, firedByInitSearchText: true})\n      }\n    }\n  }\n\n  getCaret () {\n    this.$header.find('th').each((i, th) => {\n      $(th).find('.sortable').removeClass('desc asc')\n        .addClass($(th).data('field') === this.options.sortName\n          ? this.options.sortOrder : 'both')\n    })\n  }\n\n  updateSelected () {\n    const checkAll = this.$selectItem.filter(':enabled').length &&\n      this.$selectItem.filter(':enabled').length ===\n      this.$selectItem.filter(':enabled').filter(':checked').length\n\n    this.$selectAll.add(this.$selectAll_).prop('checked', checkAll)\n\n    this.$selectItem.each((i, el) => {\n      $(el).closest('tr')[$(el).prop('checked') ? 'addClass' : 'removeClass']('selected')\n    })\n  }\n\n  updateRows () {\n    this.$selectItem.each((i, el) => {\n      this.data[$(el).data('index')][this.header.stateField] = $(el).prop('checked')\n    })\n  }\n\n  resetRows () {\n    for (const row of this.data) {\n      this.$selectAll.prop('checked', false)\n      this.$selectItem.prop('checked', false)\n      if (this.header.stateField) {\n        row[this.header.stateField] = false\n      }\n    }\n    this.initHiddenRows()\n  }\n\n  trigger (_name, ...args) {\n    const name = `${_name}.bs.table`\n    this.options[BootstrapTable.EVENTS[name]](...args)\n    this.$el.trigger($.Event(name), args)\n\n    this.options.onAll(name, args)\n    this.$el.trigger($.Event('all.bs.table'), [name, args])\n  }\n\n  resetHeader () {\n    // fix #61: the hidden table reset header bug.\n    // fix bug: get $el.css('width') error sometime (height = 500)\n    clearTimeout(this.timeoutId_)\n    this.timeoutId_ = setTimeout(() => this.fitHeader(), this.$el.is(':hidden') ? 100 : 0)\n  }\n\n  fitHeader () {\n    if (this.$el.is(':hidden')) {\n      this.timeoutId_ = setTimeout(() => this.fitHeader(), 100)\n      return\n    }\n\n    const fixedBody = this.$tableBody.get(0)\n    const scrollWidth = fixedBody.scrollWidth > fixedBody.clientWidth &&\n    fixedBody.scrollHeight > fixedBody.clientHeight + this.$header.outerHeight()\n      ? _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getScrollBarWidth() : 0\n\n    this.$el.css('margin-top', -this.$header.outerHeight())\n\n    const focused = $(':focus')\n    if (focused.length > 0) {\n      const $th = focused.parents('th')\n      if ($th.length > 0) {\n        const dataField = $th.attr('data-field')\n        if (dataField !== undefined) {\n          const $headerTh = this.$header.find(`[data-field='${dataField}']`)\n          if ($headerTh.length > 0) {\n            $headerTh.find(':input').addClass('focus-temp')\n          }\n        }\n      }\n    }\n\n    this.$header_ = this.$header.clone(true, true)\n    this.$selectAll_ = this.$header_.find('[name=\"btSelectAll\"]')\n    this.$tableHeader\n      .css('margin-right', scrollWidth)\n      .find('table').css('width', this.$el.outerWidth())\n      .html('').attr('class', this.$el.attr('class'))\n      .append(this.$header_)\n\n    this.$tableLoading.css('width', this.$el.outerWidth())\n\n    const focusedTemp = $('.focus-temp:visible:eq(0)')\n    if (focusedTemp.length > 0) {\n      focusedTemp.focus()\n      this.$header.find('.focus-temp').removeClass('focus-temp')\n    }\n\n    // fix bug: $.data() is not working as expected after $.append()\n    this.$header.find('th[data-field]').each((i, el) => {\n      this.$header_.find(_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf('th[data-field=\"%s\"]', $(el).data('field'))).data($(el).data())\n    })\n\n    const visibleFields = this.getVisibleFields()\n    const $ths = this.$header_.find('th')\n    let $tr = this.$body.find('>tr:not(.no-records-found,.virtual-scroll-top)').eq(0)\n\n    while ($tr.length && $tr.find('>td[colspan]:not([colspan=\"1\"])').length) {\n      $tr = $tr.next()\n    }\n\n    $tr.find('> *').each((i, el) => {\n      const $this = $(el)\n      let index = i\n\n      if (this.options.detailView && this.options.detailViewIcon && !this.options.cardView) {\n        if (i === 0) {\n          const $thDetail = $ths.filter('.detail')\n          const zoomWidth = $thDetail.innerWidth() - $thDetail.find('.fht-cell').width()\n          $thDetail.find('.fht-cell').width($this.innerWidth() - zoomWidth)\n        }\n        index = i - 1\n      }\n\n      if (index === -1) {\n        return\n      }\n\n      let $th = this.$header_.find(_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf('th[data-field=\"%s\"]', visibleFields[index]))\n      if ($th.length > 1) {\n        $th = $($ths[$this[0].cellIndex])\n      }\n\n      const zoomWidth = $th.innerWidth() - $th.find('.fht-cell').width()\n      $th.find('.fht-cell').width($this.innerWidth() - zoomWidth)\n    })\n\n    this.horizontalScroll()\n    this.trigger('post-header')\n  }\n\n  initFooter () {\n    if (!this.options.showFooter || this.options.cardView) { // do nothing\n      return\n    }\n\n    const data = this.getData()\n    const html = []\n\n    if (!this.options.cardView && this.options.detailView && this.options.detailViewIcon) {\n      html.push('<th class=\"detail\"><div class=\"th-inner\"></div><div class=\"fht-cell\"></div></th>')\n    }\n\n    for (const column of this.columns) {\n      let falign = ''\n\n      let valign = ''\n      const csses = []\n      let style = {}\n      let class_ = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(' class=\"%s\"', column['class'])\n\n      if (!column.visible) {\n        continue\n      }\n\n      if (this.options.cardView && (!column.cardVisible)) {\n        return\n      }\n\n      falign = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf('text-align: %s; ', column.falign ? column.falign : column.align)\n      valign = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf('vertical-align: %s; ', column.valign)\n\n      style = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].calculateObjectValue(null, this.options.footerStyle, [column])\n\n      if (style && style.css) {\n        for (const [key, value] of Object.entries(style.css)) {\n          csses.push(`${key}: ${value}`)\n        }\n      }\n      if (style && style.classes) {\n        class_ = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(' class=\"%s\"', column['class'] ?\n          [column['class'], style.classes].join(' ') : style.classes)\n      }\n\n      html.push('<th', class_, _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(' style=\"%s\"', falign + valign + csses.concat().join('; ')), '>')\n      html.push('<div class=\"th-inner\">')\n\n      html.push(_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].calculateObjectValue(column, column.footerFormatter,\n        [data], this.footerData[0] && this.footerData[0][column.field] || ''))\n\n      html.push('</div>')\n      html.push('<div class=\"fht-cell\"></div>')\n      html.push('</div>')\n      html.push('</th>')\n    }\n\n    this.$tableFooter.find('tr').html(html.join(''))\n\n    this.trigger('post-footer', this.$tableFooter)\n  }\n\n  fitFooter () {\n    if (this.$el.is(':hidden')) {\n      setTimeout(() => this.fitFooter(), 100)\n      return\n    }\n\n    const fixedBody = this.$tableBody.get(0)\n    const scrollWidth = fixedBody.scrollWidth > fixedBody.clientWidth &&\n    fixedBody.scrollHeight > fixedBody.clientHeight + this.$header.outerHeight()\n      ? _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getScrollBarWidth() : 0\n\n    this.$tableFooter\n      .css('margin-right', scrollWidth)\n      .find('table').css('width', this.$el.outerWidth())\n      .attr('class', this.$el.attr('class'))\n\n    const visibleFields = this.getVisibleFields()\n    const $ths = this.$tableFooter.find('th')\n    let $tr = this.$body.find('>tr:first-child:not(.no-records-found)')\n\n    while ($tr.length && $tr.find('>td[colspan]:not([colspan=\"1\"])').length) {\n      $tr = $tr.next()\n    }\n\n    $tr.find('> *').each((i, el) => {\n      const $this = $(el)\n      let index = i\n\n      if (this.options.detailView && !this.options.cardView) {\n        if (i === 0) {\n          const $thDetail = $ths.filter('.detail')\n          const zoomWidth = $thDetail.innerWidth() - $thDetail.find('.fht-cell').width()\n          $thDetail.find('.fht-cell').width($this.innerWidth() - zoomWidth)\n        }\n        index = i - 1\n      }\n\n      if (index === -1) {\n        return\n      }\n\n      const $th = $ths.eq(i)\n      const zoomWidth = $th.innerWidth() - $th.find('.fht-cell').width()\n      $th.find('.fht-cell').width($this.innerWidth() - zoomWidth)\n    })\n\n    this.horizontalScroll()\n  }\n\n  horizontalScroll () {\n    // horizontal scroll event\n    // TODO: it's probably better improving the layout than binding to scroll event\n\n    this.trigger('scroll-body')\n    this.$tableBody.off('scroll').on('scroll', ({currentTarget}) => {\n      if (this.options.showHeader && this.options.height) {\n        this.$tableHeader.scrollLeft($(currentTarget).scrollLeft())\n      }\n\n      if (this.options.showFooter && !this.options.cardView) {\n        this.$tableFooter.scrollLeft($(currentTarget).scrollLeft())\n      }\n    })\n  }\n\n  getVisibleFields () {\n    const visibleFields = []\n\n    for (const field of this.header.fields) {\n      const column = this.columns[this.fieldsColumnsIndex[field]]\n\n      if (!column || !column.visible) {\n        continue\n      }\n      visibleFields.push(field)\n    }\n    return visibleFields\n  }\n\n  initHiddenRows () {\n    this.hiddenRows = []\n  }\n\n  // PUBLIC FUNCTION DEFINITION\n  // =======================\n\n  getOptions () {\n    // deep copy and remove data\n    const options = $.extend({}, this.options)\n    delete options.data\n    return $.extend(true, {}, options)\n  }\n\n  refreshOptions (options) {\n    // If the objects are equivalent then avoid the call of destroy / init methods\n    if (_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].compareObjects(this.options, options, true)) {\n      return\n    }\n    this.options = $.extend(this.options, options)\n    this.trigger('refresh-options', this.options)\n    this.destroy()\n    this.init()\n  }\n\n  getData (params) {\n    let data = this.options.data\n    if (this.searchText || this.options.sortName || !_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isEmptyObject(this.filterColumns) || !_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isEmptyObject(this.filterColumnsPartial)) {\n      data = this.data\n    }\n\n    if (params && params.useCurrentPage) {\n      data = data.slice(this.pageFrom - 1, this.pageTo)\n    }\n\n    if (params && !params.includeHiddenRows) {\n      const hiddenRows = this.getHiddenRows()\n      data = data.filter(function (row) {\n        return _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findIndex(hiddenRows, row) === -1\n      })\n    }\n\n    return data\n  }\n\n  getSelections () {\n    // fix #2424: from html with checkbox\n    return this.data.filter(row => row[this.header.stateField] === true)\n  }\n\n  getAllSelections () {\n    return this.options.data.filter(row => row[this.header.stateField] === true)\n  }\n\n  load (_data) {\n    let fixedScroll = false\n    let data = _data\n\n    // #431: support pagination\n    if (this.options.pagination && this.options.sidePagination === 'server') {\n      this.options.totalRows = data[this.options.totalField]\n    }\n\n    if (this.options.pagination && this.options.sidePagination === 'server') {\n      this.options.totalNotFiltered = data[this.options.totalNotFilteredField]\n    }\n\n    fixedScroll = data.fixedScroll\n    data = Array.isArray(data) ? data : data[this.options.dataField]\n\n    this.initData(data)\n    this.initSearch()\n    this.initPagination()\n    this.initBody(fixedScroll)\n  }\n\n  append (data) {\n    this.initData(data, 'append')\n    this.initSearch()\n    this.initPagination()\n    this.initSort()\n    this.initBody(true)\n  }\n\n  prepend (data) {\n    this.initData(data, 'prepend')\n    this.initSearch()\n    this.initPagination()\n    this.initSort()\n    this.initBody(true)\n  }\n\n  remove (params) {\n    const len = this.options.data.length\n    let i\n    let row\n\n    if (!params.hasOwnProperty('field') || !params.hasOwnProperty('values')) {\n      return\n    }\n\n    for (i = len - 1; i >= 0; i--) {\n      row = this.options.data[i]\n\n      if (!row.hasOwnProperty(params.field)) {\n        continue\n      }\n      if (params.values.includes(row[params.field])) {\n        this.options.data.splice(i, 1)\n        if (this.options.sidePagination === 'server') {\n          this.options.totalRows -= 1\n        }\n      }\n    }\n\n    if (len === this.options.data.length) {\n      return\n    }\n\n    this.initSearch()\n    this.initPagination()\n    this.initSort()\n    this.initBody(true)\n  }\n\n  removeAll () {\n    if (this.options.data.length > 0) {\n      this.options.data.splice(0, this.options.data.length)\n      this.initSearch()\n      this.initPagination()\n      this.initBody(true)\n    }\n  }\n\n  insertRow (params) {\n    if (!params.hasOwnProperty('index') || !params.hasOwnProperty('row')) {\n      return\n    }\n    this.options.data.splice(params.index, 0, params.row)\n    this.initSearch()\n    this.initPagination()\n    this.initSort()\n    this.initBody(true)\n  }\n\n  updateRow (params) {\n    const allParams = Array.isArray(params) ? params : [params]\n\n    for (const params of allParams) {\n      if (!params.hasOwnProperty('index') || !params.hasOwnProperty('row')) {\n        continue\n      }\n\n      $.extend(this.options.data[params.index], params.row)\n      if (params.hasOwnProperty('replace') && params.replace) {\n        this.options.data[params.index] = params.row\n      } else {\n        $.extend(this.options.data[params.index], params.row)\n      }\n    }\n\n    this.initSearch()\n    this.initPagination()\n    this.initSort()\n    this.initBody(true)\n  }\n\n  getRowByUniqueId (_id) {\n    const uniqueId = this.options.uniqueId\n    const len = this.options.data.length\n    let id = _id\n    let dataRow = null\n    let i\n    let row\n    let rowUniqueId\n\n    for (i = len - 1; i >= 0; i--) {\n      row = this.options.data[i]\n\n      if (row.hasOwnProperty(uniqueId)) { // uniqueId is a column\n        rowUniqueId = row[uniqueId]\n      } else if (row._data && row._data.hasOwnProperty(uniqueId)) { // uniqueId is a row data property\n        rowUniqueId = row._data[uniqueId]\n      } else {\n        continue\n      }\n\n      if (typeof rowUniqueId === 'string') {\n        id = id.toString()\n      } else if (typeof rowUniqueId === 'number') {\n        if ((Number(rowUniqueId) === rowUniqueId) && (rowUniqueId % 1 === 0)) {\n          id = parseInt(id)\n        } else if ((rowUniqueId === Number(rowUniqueId)) && (rowUniqueId !== 0)) {\n          id = parseFloat(id)\n        }\n      }\n\n      if (rowUniqueId === id) {\n        dataRow = row\n        break\n      }\n    }\n\n    return dataRow\n  }\n\n  updateByUniqueId (params) {\n    const allParams = Array.isArray(params) ? params : [params]\n\n    for (const params of allParams) {\n      if (!params.hasOwnProperty('id') || !params.hasOwnProperty('row')) {\n        continue\n      }\n\n      const rowId = this.options.data.indexOf(this.getRowByUniqueId(params.id))\n      if (rowId === -1) {\n        continue\n      }\n\n      if (params.hasOwnProperty('replace') && params.replace) {\n        this.options.data[rowId] = params.row\n      } else {\n        $.extend(this.options.data[rowId], params.row)\n      }\n    }\n\n    this.initSearch()\n    this.initPagination()\n    this.initSort()\n    this.initBody(true)\n  }\n\n  removeByUniqueId (id) {\n    const len = this.options.data.length\n    const row = this.getRowByUniqueId(id)\n\n    if (row) {\n      this.options.data.splice(this.options.data.indexOf(row), 1)\n    }\n\n    if (len === this.options.data.length) {\n      return\n    }\n\n    this.initSearch()\n    this.initPagination()\n    this.initBody(true)\n  }\n\n  updateCell (params) {\n    if (!params.hasOwnProperty('index') ||\n      !params.hasOwnProperty('field') ||\n      !params.hasOwnProperty('value')) {\n      return\n    }\n    this.data[params.index][params.field] = params.value\n\n    if (params.reinit === false) {\n      return\n    }\n    this.initSort()\n    this.initBody(true)\n  }\n\n  updateCellByUniqueId (params) {\n    if (!params.hasOwnProperty('id') ||\n      !params.hasOwnProperty('field') ||\n      !params.hasOwnProperty('value')) {\n      return\n    }\n    const allParams = Array.isArray(params) ? params : [params]\n\n    allParams.forEach(({id, field, value}) => {\n      const rowId = this.options.data.indexOf(this.getRowByUniqueId(id))\n\n      if (rowId === -1) {\n        return\n      }\n      this.options.data[rowId][field] = value\n    })\n\n    if (params.reinit === false) {\n      return\n    }\n    this.initSort()\n    this.initBody(true)\n  }\n\n  showRow (params) {\n    this._toggleRow(params, true)\n  }\n\n  hideRow (params) {\n    this._toggleRow(params, false)\n  }\n\n  _toggleRow (params, visible) {\n    let row\n\n    if (params.hasOwnProperty('index')) {\n      row = this.getData()[params.index]\n    } else if (params.hasOwnProperty('uniqueId')) {\n      row = this.getRowByUniqueId(params.uniqueId)\n    }\n\n    if (!row) {\n      return\n    }\n\n    const index = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findIndex(this.hiddenRows, row)\n\n    if (!visible && index === -1) {\n      this.hiddenRows.push(row)\n    } else if (visible && index > -1) {\n      this.hiddenRows.splice(index, 1)\n    }\n    if (visible) {\n      this.updatePagination()\n    } else {\n      this.initBody(true)\n      this.initPagination()\n    }\n  }\n\n  getHiddenRows (show) {\n    if (show) {\n      this.initHiddenRows()\n      this.initBody(true)\n      return\n    }\n    const data = this.getData()\n    const rows = []\n\n    for (const row of data) {\n      if (this.hiddenRows.includes(row)) {\n        rows.push(row)\n      }\n    }\n    this.hiddenRows = rows\n    return rows\n  }\n\n  showColumn (field) {\n    const fields = Array.isArray(field) ? field : [field]\n    fields.forEach(field => {\n      this._toggleColumn(this.fieldsColumnsIndex[field], true, true)\n    })\n  }\n\n  hideColumn (field) {\n    const fields = Array.isArray(field) ? field : [field]\n    fields.forEach(field => {\n      this._toggleColumn(this.fieldsColumnsIndex[field], false, true)\n    })\n  }\n\n  _toggleColumn (index, checked, needUpdate) {\n    if (index === -1 || this.columns[index].visible === checked) {\n      return\n    }\n    this.columns[index].visible = checked\n    this.initHeader()\n    this.initSearch()\n    this.initPagination()\n    this.initBody()\n\n    if (this.options.showColumns) {\n      const $items = this.$toolbar.find('.keep-open input').prop('disabled', false)\n\n      if (needUpdate) {\n        $items.filter(_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf('[value=\"%s\"]', index)).prop('checked', checked)\n      }\n\n      if ($items.filter(':checked').length <= this.options.minimumCountColumns) {\n        $items.filter(':checked').prop('disabled', true)\n      }\n    }\n  }\n\n  getVisibleColumns () {\n    return this.columns.filter(({visible}) => visible)\n  }\n\n  getHiddenColumns () {\n    return this.columns.filter(({visible}) => !visible)\n  }\n\n  showAllColumns () {\n    this._toggleAllColumns(true)\n  }\n\n  hideAllColumns () {\n    this._toggleAllColumns(false)\n  }\n\n  _toggleAllColumns (visible) {\n    for (const column of this.columns.slice().reverse()) {\n      if (column.switchable) {\n        if (!visible && this.options.showColumns && this.getVisibleColumns().length === this.options.minimumCountColumns) {\n          continue\n        }\n        column.visible = visible\n      }\n    }\n\n    this.initHeader()\n    this.initSearch()\n    this.initPagination()\n    this.initBody()\n    if (this.options.showColumns) {\n      const $items = this.$toolbar.find('.keep-open input:not(\".toggle-all\")').prop('disabled', false)\n\n      if (visible) {\n        $items.prop('checked', visible)\n      } else {\n        $items.get().reverse().forEach((item) => {\n          if ($items.filter(':checked').length > this.options.minimumCountColumns) {\n            $(item).prop('checked', visible)\n          }\n        })\n      }\n\n      if ($items.filter(':checked').length <= this.options.minimumCountColumns) {\n        $items.filter(':checked').prop('disabled', true)\n      }\n    }\n  }\n\n  mergeCells (options) {\n    const row = options.index\n    let col = this.getVisibleFields().indexOf(options.field)\n    const rowspan = options.rowspan || 1\n    const colspan = options.colspan || 1\n    let i\n    let j\n    const $tr = this.$body.find('>tr')\n\n    if (this.options.detailView && !this.options.cardView) {\n      col += 1\n    }\n\n    const $td = $tr.eq(row).find('>td').eq(col)\n\n    if (row < 0 || col < 0 || row >= this.data.length) {\n      return\n    }\n\n    for (i = row; i < row + rowspan; i++) {\n      for (j = col; j < col + colspan; j++) {\n        $tr.eq(i).find('>td').eq(j).hide()\n      }\n    }\n\n    $td.attr('rowspan', rowspan).attr('colspan', colspan).show()\n  }\n\n  checkAll () {\n    this._toggleCheckAll(true)\n  }\n\n  uncheckAll () {\n    this._toggleCheckAll(false)\n  }\n\n  _toggleCheckAll (checked) {\n    const rowsBefore = this.getSelections()\n    this.$selectAll.add(this.$selectAll_).prop('checked', checked)\n    this.$selectItem.filter(':enabled').prop('checked', checked)\n    this.updateRows()\n\n    const rowsAfter = this.getSelections()\n    if (checked) {\n      this.trigger('check-all', rowsAfter, rowsBefore)\n      return\n    }\n\n    this.trigger('uncheck-all', rowsAfter, rowsBefore)\n  }\n\n  checkInvert () {\n    const $items = this.$selectItem.filter(':enabled')\n    let checked = $items.filter(':checked')\n    $items.each((i, el) => {\n      $(el).prop('checked', !$(el).prop('checked'))\n    })\n    this.updateRows()\n    this.updateSelected()\n    this.trigger('uncheck-some', checked)\n    checked = this.getSelections()\n    this.trigger('check-some', checked)\n  }\n\n  check (index) {\n    this._toggleCheck(true, index)\n  }\n\n  uncheck (index) {\n    this._toggleCheck(false, index)\n  }\n\n  _toggleCheck (checked, index) {\n    const $el = this.$selectItem.filter(`[data-index=\"${index}\"]`)\n    const row = this.data[index]\n\n    if (\n      $el.is(':radio') ||\n      this.options.singleSelect ||\n      this.options.multipleSelectRow &&\n      !this.multipleSelectRowCtrlKey &&\n      !this.multipleSelectRowShiftKey\n    ) {\n      for (const r of this.options.data) {\n        r[this.header.stateField] = false\n      }\n      this.$selectItem.filter(':checked').not($el).prop('checked', false)\n    }\n\n    row[this.header.stateField] = checked\n\n    if (this.options.multipleSelectRow) {\n      if (this.multipleSelectRowShiftKey && this.multipleSelectRowLastSelectedIndex >= 0) {\n        const indexes = [this.multipleSelectRowLastSelectedIndex, index].sort()\n\n        for (let i = indexes[0] + 1; i < indexes[1]; i++) {\n          this.data[i][this.header.stateField] = true\n          this.$selectItem.filter(`[data-index=\"${i}\"]`).prop('checked', true)\n        }\n      }\n\n      this.multipleSelectRowCtrlKey = false\n      this.multipleSelectRowShiftKey = false\n      this.multipleSelectRowLastSelectedIndex = checked ? index : -1\n    }\n\n    $el.prop('checked', checked)\n    this.updateSelected()\n    this.trigger(checked ? 'check' : 'uncheck', this.data[index], $el)\n  }\n\n  checkBy (obj) {\n    this._toggleCheckBy(true, obj)\n  }\n\n  uncheckBy (obj) {\n    this._toggleCheckBy(false, obj)\n  }\n\n  _toggleCheckBy (checked, obj) {\n    if (!obj.hasOwnProperty('field') || !obj.hasOwnProperty('values')) {\n      return\n    }\n\n    const rows = []\n    this.data.forEach((row, i) => {\n      if (!row.hasOwnProperty(obj.field)) {\n        return false\n      }\n      if (obj.values.includes(row[obj.field])) {\n        let $el = this.$selectItem.filter(':enabled')\n          .filter(_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf('[data-index=\"%s\"]', i))\n\n        $el = checked ? $el.not(':checked') : $el.filter(':checked')\n\n        if (!$el.length) {\n          return\n        }\n\n        $el.prop('checked', checked)\n        row[this.header.stateField] = checked\n        rows.push(row)\n        this.trigger(checked ? 'check' : 'uncheck', row, $el)\n      }\n    })\n    this.updateSelected()\n    this.trigger(checked ? 'check-some' : 'uncheck-some', rows)\n  }\n\n  refresh (params) {\n    if (params && params.url) {\n      this.options.url = params.url\n    }\n    if (params && params.pageNumber) {\n      this.options.pageNumber = params.pageNumber\n    }\n    if (params && params.pageSize) {\n      this.options.pageSize = params.pageSize\n    }\n    this.trigger('refresh', this.initServer(params && params.silent,\n      params && params.query, params && params.url))\n  }\n\n  destroy () {\n    this.$el.insertBefore(this.$container)\n    $(this.options.toolbar).insertBefore(this.$el)\n    this.$container.next().remove()\n    this.$container.remove()\n    this.$el.html(this.$el_.html())\n      .css('margin-top', '0')\n      .attr('class', this.$el_.attr('class') || '') // reset the class\n  }\n\n  resetView (params) {\n    let padding = 0\n\n    if (params && params.height) {\n      this.options.height = params.height\n    }\n\n    this.$selectAll.prop('checked', this.$selectItem.length > 0 &&\n      this.$selectItem.length === this.$selectItem.filter(':checked').length)\n\n    this.$tableContainer.toggleClass('has-card-view', this.options.cardView)\n\n    if (!this.options.cardView && this.options.showHeader && this.options.height) {\n      this.$tableHeader.show()\n      this.resetHeader()\n      padding += this.$header.outerHeight(true)\n    } else {\n      this.$tableHeader.hide()\n      this.trigger('post-header')\n    }\n\n    if (!this.options.cardView && this.options.showFooter) {\n      this.$tableFooter.show()\n      this.fitFooter()\n      if (this.options.height) {\n        padding += this.$tableFooter.outerHeight(true)\n      }\n    }\n\n    if (this.options.height) {\n      const toolbarHeight = this.$toolbar.outerHeight(true)\n      const paginationHeight = this.$pagination.outerHeight(true)\n      const height = this.options.height - toolbarHeight - paginationHeight\n      const tableHeight = this.$tableBody.find('table').outerHeight(true)\n      this.$tableContainer.css('height', `${height}px`)\n      this.$tableBorder && this.$tableBorder.css('height', `${height - tableHeight - padding - 1}px`)\n    }\n\n    if (this.options.cardView) {\n      // remove the element css\n      this.$el.css('margin-top', '0')\n      this.$tableContainer.css('padding-bottom', '0')\n      this.$tableFooter.hide()\n    } else {\n      // Assign the correct sortable arrow\n      this.getCaret()\n      this.$tableContainer.css('padding-bottom', `${padding}px`)\n    }\n\n    this.trigger('reset-view')\n  }\n\n  resetWidth () {\n    if (this.options.showHeader && this.options.height) {\n      this.fitHeader()\n    }\n    if (this.options.showFooter && !this.options.cardView) {\n      this.fitFooter()\n    }\n  }\n\n  showLoading () {\n    this.$tableLoading.css('display', 'flex')\n  }\n\n  hideLoading () {\n    this.$tableLoading.css('display', 'none')\n  }\n\n  togglePagination () {\n    this.options.pagination = !this.options.pagination\n\n    const icon = this.options.showButtonIcons ? this.options.pagination ? this.options.icons.paginationSwitchDown : this.options.icons.paginationSwitchUp : ''\n    const text = this.options.showButtonText ? this.options.pagination ? this.options.formatPaginationSwitchUp() : this.options.formatPaginationSwitchDown() : ''\n    this.$toolbar.find('button[name=\"paginationSwitch\"]')\n      .html(_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(this.constants.html.icon, this.options.iconsPrefix, icon) + ' ' + text)\n    this.updatePagination()\n  }\n\n  toggleFullscreen () {\n    this.$el.closest('.bootstrap-table').toggleClass('fullscreen')\n    this.resetView()\n  }\n\n  toggleView () {\n    this.options.cardView = !this.options.cardView\n    this.initHeader()\n\n    const icon = this.options.showButtonIcons ? this.options.cardView ? this.options.icons.toggleOn : this.options.icons.toggleOff : ''\n    const text = this.options.showButtonText ? this.options.cardView ? this.options.formatToggleOff() : this.options.formatToggleOn() : ''\n    this.$toolbar.find('button[name=\"toggle\"]')\n      .html(_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(this.constants.html.icon, this.options.iconsPrefix, icon) + ' ' + text)\n    this.initBody()\n    this.trigger('toggle', this.options.cardView)\n  }\n\n  resetSearch (text) {\n    const $search = this.$toolbar.find('.search input')\n    $search.val(text || '')\n    this.onSearch({currentTarget: $search})\n  }\n\n  filterBy (columns, options) {\n    this.filterOptions = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isEmptyObject(options) ? this.options.filterOptions : $.extend(this.options.filterOptions, options)\n    this.filterColumns = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isEmptyObject(columns) ? {} : columns\n    this.options.pageNumber = 1\n    this.initSearch()\n    this.updatePagination()\n  }\n\n  scrollTo (params) {\n    if (typeof params === 'undefined') {\n      return this.$tableBody.scrollTop()\n    }\n\n    let options = {unit: 'px', value: 0}\n    if (typeof params === 'object') {\n      options = Object.assign(options, params)\n    } else if (typeof params === 'string' && params === 'bottom') {\n      options.value = this.$tableBody[0].scrollHeight\n    } else if (typeof params === 'string') {\n      options.value = params\n    }\n\n    let scrollTo = options.value\n    if (options.unit === 'rows') {\n      scrollTo = 0\n      this.$body.find(`> tr:lt(${options.value})`).each((i, el) => {\n        scrollTo += $(el).outerHeight(true)\n      })\n    }\n\n    this.$tableBody.scrollTop(scrollTo)\n  }\n\n  getScrollPosition () {\n    return this.scrollTo()\n  }\n\n  selectPage (page) {\n    if (page > 0 && page <= this.options.totalPages) {\n      this.options.pageNumber = page\n      this.updatePagination()\n    }\n  }\n\n  prevPage () {\n    if (this.options.pageNumber > 1) {\n      this.options.pageNumber--\n      this.updatePagination()\n    }\n  }\n\n  nextPage () {\n    if (this.options.pageNumber < this.options.totalPages) {\n      this.options.pageNumber++\n      this.updatePagination()\n    }\n  }\n\n  toggleDetailView (index, _columnDetailFormatter) {\n    const $tr = this.$body.find(_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf('> tr[data-index=\"%s\"]', index))\n\n    if ($tr.next().is('tr.detail-view')) {\n      this.collapseRow(index)\n    } else {\n      this.expandRow(index, _columnDetailFormatter)\n    }\n\n    this.resetView()\n  }\n\n  expandRow (index, _columnDetailFormatter) {\n    const row = this.data[index]\n    const $tr = this.$body.find(_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf('> tr[data-index=\"%s\"][data-has-detail-view]', index))\n    if ($tr.next().is('tr.detail-view')) {\n      return\n    }\n\n    if (this.options.detailViewIcon) {\n      $tr.find('a.detail-icon').html(_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(this.constants.html.icon, this.options.iconsPrefix, this.options.icons.detailClose))\n    }\n\n    $tr.after(_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf('<tr class=\"detail-view\"><td colspan=\"%s\"></td></tr>', $tr.children('td').length))\n\n    const $element = $tr.next().find('td')\n\n    const detailFormatter = _columnDetailFormatter || this.options.detailFormatter\n    const content = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].calculateObjectValue(this.options, detailFormatter, [index, row, $element], '')\n    if ($element.length === 1) {\n      $element.append(content)\n    }\n\n    this.trigger('expand-row', index, row, $element)\n  }\n\n  collapseRow (index) {\n    const row = this.data[index]\n    const $tr = this.$body.find(_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf('> tr[data-index=\"%s\"][data-has-detail-view]', index))\n    if (!$tr.next().is('tr.detail-view')) {\n      return\n    }\n\n    if (this.options.detailViewIcon) {\n      $tr.find('a.detail-icon').html(_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sprintf(this.constants.html.icon, this.options.iconsPrefix, this.options.icons.detailOpen))\n    }\n\n    this.trigger('collapse-row', index, row, $tr.next())\n    $tr.next().remove()\n  }\n\n  expandAllRows () {\n    const trs = this.$body.find('> tr[data-index][data-has-detail-view]')\n    for (let i = 0; i < trs.length; i++) {\n      this.expandRow($(trs[i]).data('index'))\n    }\n  }\n\n  collapseAllRows () {\n    const trs = this.$body.find('> tr[data-index][data-has-detail-view]')\n    for (let i = 0; i < trs.length; i++) {\n      this.collapseRow($(trs[i]).data('index'))\n    }\n  }\n\n  updateColumnTitle (params) {\n    if (!params.hasOwnProperty('field') || !params.hasOwnProperty('title')) {\n      return\n    }\n\n    this.columns[this.fieldsColumnsIndex[params.field]].title =\n      this.options.escape ? _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].escapeHTML(params.title) : params.title\n\n    if (this.columns[this.fieldsColumnsIndex[params.field]].visible) {\n      const header = this.options.height !== undefined ? this.$tableHeader : this.$header\n      header.find('th[data-field]').each((i, el) => {\n        if ($(el).data('field') === params.field) {\n          $($(el).find('.th-inner')[0]).text(params.title)\n          return false\n        }\n      })\n    }\n  }\n\n  updateFormatText (formatName, text) {\n    if (!/^format/.test(formatName) || !this.options[formatName]) {\n      return\n    }\n    if (typeof text === 'string') {\n      this.options[formatName] = () => text\n    } else if (typeof text === 'function') {\n      this.options[formatName] = text\n    }\n    this.initToolbar()\n    this.initPagination()\n    this.initBody()\n  }\n}\n\nBootstrapTable.VERSION = _constants_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].VERSION\nBootstrapTable.DEFAULTS = _constants_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DEFAULTS\nBootstrapTable.LOCALES = _constants_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].LOCALES\nBootstrapTable.COLUMN_DEFAULTS = _constants_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].COLUMN_DEFAULTS\nBootstrapTable.METHODS = _constants_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].METHODS\nBootstrapTable.EVENTS = _constants_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].EVENTS\n\n// BOOTSTRAP TABLE PLUGIN DEFINITION\n// =======================\n\n$.BootstrapTable = BootstrapTable\n$.fn.bootstrapTable = function (option, ...args) {\n  let value\n\n  this.each((i, el) => {\n    let data = $(el).data('bootstrap.table')\n    const options = $.extend({}, BootstrapTable.DEFAULTS, $(el).data(),\n      typeof option === 'object' && option)\n\n    if (typeof option === 'string') {\n      if (!_constants_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].METHODS.includes(option)) {\n        throw new Error(`Unknown method: ${option}`)\n      }\n\n      if (!data) {\n        return\n      }\n\n      value = data[option](...args)\n\n      if (option === 'destroy') {\n        $(el).removeData('bootstrap.table')\n      }\n    }\n\n    if (!data) {\n      $(el).data('bootstrap.table', (data = new $.BootstrapTable(el, options)))\n    }\n  })\n\n  return typeof value === 'undefined' ? this : value\n}\n\n$.fn.bootstrapTable.Constructor = BootstrapTable\n$.fn.bootstrapTable.theme = _constants_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].THEME\n$.fn.bootstrapTable.VERSION = _constants_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].VERSION\n$.fn.bootstrapTable.defaults = BootstrapTable.DEFAULTS\n$.fn.bootstrapTable.columnDefaults = BootstrapTable.COLUMN_DEFAULTS\n$.fn.bootstrapTable.events = BootstrapTable.EVENTS\n$.fn.bootstrapTable.locales = BootstrapTable.LOCALES\n$.fn.bootstrapTable.methods = BootstrapTable.METHODS\n$.fn.bootstrapTable.utils = _utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\n\n// BOOTSTRAP TABLE INIT\n// =======================\n\n$(() => {\n  $('[data-toggle=\"table\"]').bootstrapTable()\n})\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (BootstrapTable);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwLXRhYmxlL3NyYy9ib290c3RyYXAtdGFibGUuanM/MjE2MCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTRDO0FBQ1I7QUFDaUI7O0FBRXJEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EscUJBQXFCLDJEQUFTO0FBQzlCOztBQUVBLCtDQUErQyxnQkFBZ0I7QUFDL0Q7QUFDQTtBQUNBO0FBQ0EsTUFBTSx1REFBSyxZQUFZLGNBQWM7QUFDckM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxvQ0FBb0MscUJBQXFCO0FBQ3pEO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsb0NBQW9DO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esd0NBQXdD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QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1REFBSzs7QUFFYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsaURBQWlELGNBQWM7QUFDL0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBLDRCQUE0QjtBQUM1Qjs7QUFFQTtBQUNBO0FBQ0EsUUFBUSx1REFBSztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxxREFBcUQsdURBQUssdUNBQXVDLHVEQUFLO0FBQ3RHO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsdURBQUs7QUFDcEIsT0FBTztBQUNQOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxxQkFBcUIsUUFBUTtBQUM3Qjs7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QkFBZ0I7QUFDbkM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxtQkFBbUIsZ0JBQWdCO0FBQ25DO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDRCQUE0Qix1REFBSzs7QUFFakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEseUJBQXlCLDJEQUFTO0FBQ2xDLDBCQUEwQiwyREFBUztBQUNuQyx5QkFBeUIsMkRBQVM7QUFDbEMsaUNBQWlDLDJEQUFTO0FBQzFDLHlCQUF5QiwyREFBUztBQUNsQyx3QkFBd0IsMkRBQVM7O0FBRWpDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0I7O0FBRUE7QUFDQSxXQUFXLDJEQUFTO0FBQ3BCLDJDQUEyQyxPQUFPO0FBQ2xEOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQSw0QkFBNEIsMkRBQVM7QUFDckMsOEJBQThCLDJEQUFTO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsdURBQUs7O0FBRWpDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLENBQUM7O0FBRWMsNkVBQWMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwLXRhYmxlL3NyYy9ib290c3RyYXAtdGFibGUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBhdXRob3IgemhpeGluIHdlbiA8d2VuemhpeGluMjAxMEBnbWFpbC5jb20+XG4gKiB2ZXJzaW9uOiAxLjE1LjRcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS93ZW56aGl4aW4vYm9vdHN0cmFwLXRhYmxlL1xuICovXG5cbmltcG9ydCBDb25zdGFudHMgZnJvbSAnLi9jb25zdGFudHMvaW5kZXguanMnXG5pbXBvcnQgVXRpbHMgZnJvbSAnLi91dGlscy9pbmRleC5qcydcbmltcG9ydCBWaXJ0dWFsU2Nyb2xsIGZyb20gJy4vdmlydHVhbC1zY3JvbGwvaW5kZXguanMnXG5cbmNsYXNzIEJvb3RzdHJhcFRhYmxlIHtcbiAgY29uc3RydWN0b3IgKGVsLCBvcHRpb25zKSB7XG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9uc1xuICAgIHRoaXMuJGVsID0gJChlbClcbiAgICB0aGlzLiRlbF8gPSB0aGlzLiRlbC5jbG9uZSgpXG4gICAgdGhpcy50aW1lb3V0SWRfID0gMFxuICAgIHRoaXMudGltZW91dEZvb3Rlcl8gPSAwXG5cbiAgICB0aGlzLmluaXQoKVxuICB9XG5cbiAgaW5pdCAoKSB7XG4gICAgdGhpcy5pbml0Q29uc3RhbnRzKClcbiAgICB0aGlzLmluaXRMb2NhbGUoKVxuICAgIHRoaXMuaW5pdENvbnRhaW5lcigpXG4gICAgdGhpcy5pbml0VGFibGUoKVxuICAgIHRoaXMuaW5pdEhlYWRlcigpXG4gICAgdGhpcy5pbml0RGF0YSgpXG4gICAgdGhpcy5pbml0SGlkZGVuUm93cygpXG4gICAgdGhpcy5pbml0VG9vbGJhcigpXG4gICAgdGhpcy5pbml0UGFnaW5hdGlvbigpXG4gICAgdGhpcy5pbml0Qm9keSgpXG4gICAgdGhpcy5pbml0U2VhcmNoVGV4dCgpXG4gICAgdGhpcy5pbml0U2VydmVyKClcbiAgfVxuXG4gIGluaXRDb25zdGFudHMgKCkge1xuICAgIGNvbnN0IG8gPSB0aGlzLm9wdGlvbnNcbiAgICB0aGlzLmNvbnN0YW50cyA9IENvbnN0YW50cy5DT05TVEFOVFNcbiAgICB0aGlzLmNvbnN0YW50cy50aGVtZSA9ICQuZm4uYm9vdHN0cmFwVGFibGUudGhlbWVcblxuICAgIGNvbnN0IGJ1dHRvbnNQcmVmaXggPSBvLmJ1dHRvbnNQcmVmaXggPyBgJHtvLmJ1dHRvbnNQcmVmaXh9LWAgOiAnJ1xuICAgIHRoaXMuY29uc3RhbnRzLmJ1dHRvbnNDbGFzcyA9IFtcbiAgICAgIG8uYnV0dG9uc1ByZWZpeCxcbiAgICAgIGJ1dHRvbnNQcmVmaXggKyBvLmJ1dHRvbnNDbGFzcyxcbiAgICAgIFV0aWxzLnNwcmludGYoYCR7YnV0dG9uc1ByZWZpeH0lc2AsIG8uaWNvblNpemUpXG4gICAgXS5qb2luKCcgJykudHJpbSgpXG4gIH1cblxuICBpbml0TG9jYWxlICgpIHtcbiAgICBpZiAodGhpcy5vcHRpb25zLmxvY2FsZSkge1xuICAgICAgY29uc3QgbG9jYWxlcyA9ICQuZm4uYm9vdHN0cmFwVGFibGUubG9jYWxlc1xuICAgICAgY29uc3QgcGFydHMgPSB0aGlzLm9wdGlvbnMubG9jYWxlLnNwbGl0KC8tfF8vKVxuXG4gICAgICBwYXJ0c1swXSA9IHBhcnRzWzBdLnRvTG93ZXJDYXNlKClcbiAgICAgIGlmIChwYXJ0c1sxXSkge1xuICAgICAgICBwYXJ0c1sxXSA9IHBhcnRzWzFdLnRvVXBwZXJDYXNlKClcbiAgICAgIH1cblxuICAgICAgaWYgKGxvY2FsZXNbdGhpcy5vcHRpb25zLmxvY2FsZV0pIHtcbiAgICAgICAgJC5leHRlbmQodGhpcy5vcHRpb25zLCBsb2NhbGVzW3RoaXMub3B0aW9ucy5sb2NhbGVdKVxuICAgICAgfSBlbHNlIGlmIChsb2NhbGVzW3BhcnRzLmpvaW4oJy0nKV0pIHtcbiAgICAgICAgJC5leHRlbmQodGhpcy5vcHRpb25zLCBsb2NhbGVzW3BhcnRzLmpvaW4oJy0nKV0pXG4gICAgICB9IGVsc2UgaWYgKGxvY2FsZXNbcGFydHNbMF1dKSB7XG4gICAgICAgICQuZXh0ZW5kKHRoaXMub3B0aW9ucywgbG9jYWxlc1twYXJ0c1swXV0pXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgaW5pdENvbnRhaW5lciAoKSB7XG4gICAgY29uc3QgdG9wUGFnaW5hdGlvbiA9IFsndG9wJywgJ2JvdGgnXS5pbmNsdWRlcyh0aGlzLm9wdGlvbnMucGFnaW5hdGlvblZBbGlnbilcbiAgICAgID8gJzxkaXYgY2xhc3M9XCJmaXhlZC10YWJsZS1wYWdpbmF0aW9uIGNsZWFyZml4XCI+PC9kaXY+JyA6ICcnXG4gICAgY29uc3QgYm90dG9tUGFnaW5hdGlvbiA9IFsnYm90dG9tJywgJ2JvdGgnXS5pbmNsdWRlcyh0aGlzLm9wdGlvbnMucGFnaW5hdGlvblZBbGlnbilcbiAgICAgID8gJzxkaXYgY2xhc3M9XCJmaXhlZC10YWJsZS1wYWdpbmF0aW9uXCI+PC9kaXY+JyA6ICcnXG5cbiAgICB0aGlzLiRjb250YWluZXIgPSAkKGBcbiAgICAgIDxkaXYgY2xhc3M9XCJib290c3RyYXAtdGFibGUgJHt0aGlzLmNvbnN0YW50cy50aGVtZX1cIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJmaXhlZC10YWJsZS10b29sYmFyXCI+PC9kaXY+XG4gICAgICAke3RvcFBhZ2luYXRpb259XG4gICAgICA8ZGl2IGNsYXNzPVwiZml4ZWQtdGFibGUtY29udGFpbmVyXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiZml4ZWQtdGFibGUtaGVhZGVyXCI+PHRhYmxlPjwvdGFibGU+PC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPVwiZml4ZWQtdGFibGUtYm9keVwiPlxuICAgICAgPGRpdiBjbGFzcz1cImZpeGVkLXRhYmxlLWxvYWRpbmdcIj5cbiAgICAgIDxzcGFuIGNsYXNzPVwibG9hZGluZy13cmFwXCI+XG4gICAgICA8c3BhbiBjbGFzcz1cImxvYWRpbmctdGV4dFwiPiR7dGhpcy5vcHRpb25zLmZvcm1hdExvYWRpbmdNZXNzYWdlKCl9PC9zcGFuPlxuICAgICAgPHNwYW4gY2xhc3M9XCJhbmltYXRpb24td3JhcFwiPjxzcGFuIGNsYXNzPVwiYW5pbWF0aW9uLWRvdFwiPjwvc3Bhbj48L3NwYW4+XG4gICAgICA8L3NwYW4+XG4gICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz1cImZpeGVkLXRhYmxlLWZvb3RlclwiPjx0YWJsZT48dGhlYWQ+PHRyPjwvdHI+PC90aGVhZD48L3RhYmxlPjwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgICAke2JvdHRvbVBhZ2luYXRpb259XG4gICAgICA8L2Rpdj5cbiAgICBgKVxuXG4gICAgdGhpcy4kY29udGFpbmVyLmluc2VydEFmdGVyKHRoaXMuJGVsKVxuICAgIHRoaXMuJHRhYmxlQ29udGFpbmVyID0gdGhpcy4kY29udGFpbmVyLmZpbmQoJy5maXhlZC10YWJsZS1jb250YWluZXInKVxuICAgIHRoaXMuJHRhYmxlSGVhZGVyID0gdGhpcy4kY29udGFpbmVyLmZpbmQoJy5maXhlZC10YWJsZS1oZWFkZXInKVxuICAgIHRoaXMuJHRhYmxlQm9keSA9IHRoaXMuJGNvbnRhaW5lci5maW5kKCcuZml4ZWQtdGFibGUtYm9keScpXG4gICAgdGhpcy4kdGFibGVMb2FkaW5nID0gdGhpcy4kY29udGFpbmVyLmZpbmQoJy5maXhlZC10YWJsZS1sb2FkaW5nJylcbiAgICB0aGlzLiR0YWJsZUZvb3RlciA9IHRoaXMuJGVsLmZpbmQoJ3Rmb290JylcbiAgICAvLyBjaGVja2luZyBpZiBjdXN0b20gdGFibGUtdG9vbGJhciBleGlzdHMgb3Igbm90XG4gICAgaWYgKHRoaXMub3B0aW9ucy5idXR0b25zVG9vbGJhcikge1xuICAgICAgdGhpcy4kdG9vbGJhciA9ICQoJ2JvZHknKS5maW5kKHRoaXMub3B0aW9ucy5idXR0b25zVG9vbGJhcilcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy4kdG9vbGJhciA9IHRoaXMuJGNvbnRhaW5lci5maW5kKCcuZml4ZWQtdGFibGUtdG9vbGJhcicpXG4gICAgfVxuICAgIHRoaXMuJHBhZ2luYXRpb24gPSB0aGlzLiRjb250YWluZXIuZmluZCgnLmZpeGVkLXRhYmxlLXBhZ2luYXRpb24nKVxuXG4gICAgdGhpcy4kdGFibGVCb2R5LmFwcGVuZCh0aGlzLiRlbClcbiAgICB0aGlzLiRjb250YWluZXIuYWZ0ZXIoJzxkaXYgY2xhc3M9XCJjbGVhcmZpeFwiPjwvZGl2PicpXG5cbiAgICB0aGlzLiRlbC5hZGRDbGFzcyh0aGlzLm9wdGlvbnMuY2xhc3NlcylcbiAgICB0aGlzLiR0YWJsZUxvYWRpbmcuYWRkQ2xhc3ModGhpcy5vcHRpb25zLmNsYXNzZXMpXG5cbiAgICBpZiAodGhpcy5vcHRpb25zLmhlaWdodCkge1xuICAgICAgdGhpcy4kdGFibGVDb250YWluZXIuYWRkQ2xhc3MoJ2ZpeGVkLWhlaWdodCcpXG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuc2hvd0Zvb3Rlcikge1xuICAgICAgICB0aGlzLiR0YWJsZUNvbnRhaW5lci5hZGRDbGFzcygnaGFzLWZvb3RlcicpXG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuY2xhc3Nlcy5zcGxpdCgnICcpLmluY2x1ZGVzKCd0YWJsZS1ib3JkZXJlZCcpKSB7XG4gICAgICAgIHRoaXMuJHRhYmxlQm9keS5hcHBlbmQoJzxkaXYgY2xhc3M9XCJmaXhlZC10YWJsZS1ib3JkZXJcIj48L2Rpdj4nKVxuICAgICAgICB0aGlzLiR0YWJsZUJvcmRlciA9IHRoaXMuJHRhYmxlQm9keS5maW5kKCcuZml4ZWQtdGFibGUtYm9yZGVyJylcbiAgICAgICAgdGhpcy4kdGFibGVMb2FkaW5nLmFkZENsYXNzKCdmaXhlZC10YWJsZS1ib3JkZXInKVxuICAgICAgfVxuXG4gICAgICB0aGlzLiR0YWJsZUZvb3RlciA9IHRoaXMuJGNvbnRhaW5lci5maW5kKCcuZml4ZWQtdGFibGUtZm9vdGVyJylcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKCF0aGlzLiR0YWJsZUZvb3Rlci5sZW5ndGgpIHtcbiAgICAgICAgdGhpcy4kZWwuYXBwZW5kKCc8dGZvb3Q+PHRyPjwvdHI+PC90Zm9vdD4nKVxuICAgICAgICB0aGlzLiR0YWJsZUZvb3RlciA9IHRoaXMuJGVsLmZpbmQoJ3Rmb290JylcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBpbml0VGFibGUgKCkge1xuICAgIGNvbnN0IGNvbHVtbnMgPSBbXVxuICAgIGNvbnN0IGRhdGEgPSBbXVxuXG4gICAgdGhpcy4kaGVhZGVyID0gdGhpcy4kZWwuZmluZCgnPnRoZWFkJylcbiAgICBpZiAoIXRoaXMuJGhlYWRlci5sZW5ndGgpIHtcbiAgICAgIHRoaXMuJGhlYWRlciA9ICQoYDx0aGVhZCBjbGFzcz1cIiR7dGhpcy5vcHRpb25zLnRoZWFkQ2xhc3Nlc31cIj48L3RoZWFkPmApLmFwcGVuZFRvKHRoaXMuJGVsKVxuICAgIH0gZWxzZSBpZiAodGhpcy5vcHRpb25zLnRoZWFkQ2xhc3Nlcykge1xuICAgICAgdGhpcy4kaGVhZGVyLmFkZENsYXNzKHRoaXMub3B0aW9ucy50aGVhZENsYXNzZXMpXG4gICAgfVxuICAgIHRoaXMuJGhlYWRlci5maW5kKCd0cicpLmVhY2goKGksIGVsKSA9PiB7XG4gICAgICBjb25zdCBjb2x1bW4gPSBbXVxuXG4gICAgICAkKGVsKS5maW5kKCd0aCcpLmVhY2goKGksIGVsKSA9PiB7XG4gICAgICAgIC8vICMyMDE0OiBnZXRGaWVsZEluZGV4IGFuZCBlbHNld2hlcmUgYXNzdW1lIHRoaXMgaXMgc3RyaW5nLCBjYXVzZXMgaXNzdWVzIGlmIG5vdFxuICAgICAgICBpZiAodHlwZW9mICQoZWwpLmRhdGEoJ2ZpZWxkJykgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgJChlbCkuZGF0YSgnZmllbGQnLCBgJHskKGVsKS5kYXRhKCdmaWVsZCcpfWApXG4gICAgICAgIH1cbiAgICAgICAgY29sdW1uLnB1c2goJC5leHRlbmQoe30sIHtcbiAgICAgICAgICB0aXRsZTogJChlbCkuaHRtbCgpLFxuICAgICAgICAgICdjbGFzcyc6ICQoZWwpLmF0dHIoJ2NsYXNzJyksXG4gICAgICAgICAgdGl0bGVUb29sdGlwOiAkKGVsKS5hdHRyKCd0aXRsZScpLFxuICAgICAgICAgIHJvd3NwYW46ICQoZWwpLmF0dHIoJ3Jvd3NwYW4nKSA/ICskKGVsKS5hdHRyKCdyb3dzcGFuJykgOiB1bmRlZmluZWQsXG4gICAgICAgICAgY29sc3BhbjogJChlbCkuYXR0cignY29sc3BhbicpID8gKyQoZWwpLmF0dHIoJ2NvbHNwYW4nKSA6IHVuZGVmaW5lZFxuICAgICAgICB9LCAkKGVsKS5kYXRhKCkpKVxuICAgICAgfSlcbiAgICAgIGNvbHVtbnMucHVzaChjb2x1bW4pXG4gICAgfSlcblxuICAgIGlmICghQXJyYXkuaXNBcnJheSh0aGlzLm9wdGlvbnMuY29sdW1uc1swXSkpIHtcbiAgICAgIHRoaXMub3B0aW9ucy5jb2x1bW5zID0gW3RoaXMub3B0aW9ucy5jb2x1bW5zXVxuICAgIH1cblxuICAgIHRoaXMub3B0aW9ucy5jb2x1bW5zID0gJC5leHRlbmQodHJ1ZSwgW10sIGNvbHVtbnMsIHRoaXMub3B0aW9ucy5jb2x1bW5zKVxuICAgIHRoaXMuY29sdW1ucyA9IFtdXG4gICAgdGhpcy5maWVsZHNDb2x1bW5zSW5kZXggPSBbXVxuXG4gICAgVXRpbHMuc2V0RmllbGRJbmRleCh0aGlzLm9wdGlvbnMuY29sdW1ucylcblxuICAgIHRoaXMub3B0aW9ucy5jb2x1bW5zLmZvckVhY2goKGNvbHVtbnMsIGkpID0+IHtcbiAgICAgIGNvbHVtbnMuZm9yRWFjaCgoX2NvbHVtbiwgaikgPT4ge1xuICAgICAgICBjb25zdCBjb2x1bW4gPSAkLmV4dGVuZCh7fSwgQm9vdHN0cmFwVGFibGUuQ09MVU1OX0RFRkFVTFRTLCBfY29sdW1uKVxuXG4gICAgICAgIGlmICh0eXBlb2YgY29sdW1uLmZpZWxkSW5kZXggIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgdGhpcy5jb2x1bW5zW2NvbHVtbi5maWVsZEluZGV4XSA9IGNvbHVtblxuICAgICAgICAgIHRoaXMuZmllbGRzQ29sdW1uc0luZGV4W2NvbHVtbi5maWVsZF0gPSBjb2x1bW4uZmllbGRJbmRleFxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5vcHRpb25zLmNvbHVtbnNbaV1bal0gPSBjb2x1bW5cbiAgICAgIH0pXG4gICAgfSlcblxuICAgIC8vIGlmIG9wdGlvbnMuZGF0YSBpcyBzZXR0aW5nLCBkbyBub3QgcHJvY2VzcyB0Ym9keSBhbmQgdGZvb3QgZGF0YVxuICAgIGlmICghdGhpcy5vcHRpb25zLmRhdGEubGVuZ3RoKSB7XG4gICAgICB0aGlzLm9wdGlvbnMuZGF0YSA9IFV0aWxzLnRyVG9EYXRhKHRoaXMuY29sdW1ucywgdGhpcy4kZWwuZmluZCgnPnRib2R5PnRyJykpXG4gICAgICBpZiAoZGF0YS5sZW5ndGgpIHtcbiAgICAgICAgdGhpcy5mcm9tSHRtbCA9IHRydWVcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLmZvb3RlckRhdGEgPSBVdGlscy50clRvRGF0YSh0aGlzLmNvbHVtbnMsIHRoaXMuJGVsLmZpbmQoJz50Zm9vdD50cicpKVxuICAgIGlmICh0aGlzLmZvb3RlckRhdGEpIHtcbiAgICAgIHRoaXMuJGVsLmZpbmQoJ3Rmb290JykuaHRtbCgnPHRyPjwvdHI+JylcbiAgICB9XG5cbiAgICBpZiAoIXRoaXMub3B0aW9ucy5zaG93Rm9vdGVyIHx8IHRoaXMub3B0aW9ucy5jYXJkVmlldykge1xuICAgICAgdGhpcy4kdGFibGVGb290ZXIuaGlkZSgpXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuJHRhYmxlRm9vdGVyLnNob3coKVxuICAgIH1cbiAgfVxuXG4gIGluaXRIZWFkZXIgKCkge1xuICAgIGNvbnN0IHZpc2libGVDb2x1bW5zID0ge31cbiAgICBjb25zdCBodG1sID0gW11cblxuICAgIHRoaXMuaGVhZGVyID0ge1xuICAgICAgZmllbGRzOiBbXSxcbiAgICAgIHN0eWxlczogW10sXG4gICAgICBjbGFzc2VzOiBbXSxcbiAgICAgIGZvcm1hdHRlcnM6IFtdLFxuICAgICAgZGV0YWlsRm9ybWF0dGVyczogW10sXG4gICAgICBldmVudHM6IFtdLFxuICAgICAgc29ydGVyczogW10sXG4gICAgICBzb3J0TmFtZXM6IFtdLFxuICAgICAgY2VsbFN0eWxlczogW10sXG4gICAgICBzZWFyY2hhYmxlczogW11cbiAgICB9XG5cbiAgICBVdGlscy51cGRhdGVGaWVsZEdyb3VwKHRoaXMub3B0aW9ucy5jb2x1bW5zKVxuXG4gICAgdGhpcy5vcHRpb25zLmNvbHVtbnMuZm9yRWFjaCgoY29sdW1ucywgaSkgPT4ge1xuICAgICAgaHRtbC5wdXNoKCc8dHI+JylcblxuICAgICAgaWYgKGkgPT09IDAgJiYgIXRoaXMub3B0aW9ucy5jYXJkVmlldyAmJiB0aGlzLm9wdGlvbnMuZGV0YWlsVmlldyAmJiB0aGlzLm9wdGlvbnMuZGV0YWlsVmlld0ljb24pIHtcbiAgICAgICAgaHRtbC5wdXNoKGA8dGggY2xhc3M9XCJkZXRhaWxcIiByb3dzcGFuPVwiJHt0aGlzLm9wdGlvbnMuY29sdW1ucy5sZW5ndGh9XCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImZodC1jZWxsXCI+PC9kaXY+XG4gICAgICAgICAgPC90aD5cbiAgICAgICAgYClcbiAgICAgIH1cblxuICAgICAgY29sdW1ucy5mb3JFYWNoKChjb2x1bW4sIGopID0+IHtcbiAgICAgICAgY29uc3QgY2xhc3NfID0gVXRpbHMuc3ByaW50ZignIGNsYXNzPVwiJXNcIicsIGNvbHVtblsnY2xhc3MnXSlcbiAgICAgICAgY29uc3QgdW5pdFdpZHRoID0gY29sdW1uLndpZHRoVW5pdFxuICAgICAgICBjb25zdCB3aWR0aCA9IHBhcnNlRmxvYXQoY29sdW1uLndpZHRoKVxuXG4gICAgICAgIGNvbnN0IGhhbGlnbiA9IFV0aWxzLnNwcmludGYoJ3RleHQtYWxpZ246ICVzOyAnLCBjb2x1bW4uaGFsaWduID8gY29sdW1uLmhhbGlnbiA6IGNvbHVtbi5hbGlnbilcbiAgICAgICAgY29uc3QgYWxpZ24gPSBVdGlscy5zcHJpbnRmKCd0ZXh0LWFsaWduOiAlczsgJywgY29sdW1uLmFsaWduKVxuICAgICAgICBsZXQgc3R5bGUgPSBVdGlscy5zcHJpbnRmKCd2ZXJ0aWNhbC1hbGlnbjogJXM7ICcsIGNvbHVtbi52YWxpZ24pXG4gICAgICAgIHN0eWxlICs9IFV0aWxzLnNwcmludGYoJ3dpZHRoOiAlczsgJywgKGNvbHVtbi5jaGVja2JveCB8fCBjb2x1bW4ucmFkaW8pICYmICF3aWR0aFxuICAgICAgICAgID8gKCFjb2x1bW4uc2hvd1NlbGVjdFRpdGxlID8gJzM2cHgnIDogdW5kZWZpbmVkKVxuICAgICAgICAgIDogKHdpZHRoID8gd2lkdGggKyB1bml0V2lkdGggOiB1bmRlZmluZWQpKVxuXG4gICAgICAgIGlmICh0eXBlb2YgY29sdW1uLmZpZWxkSW5kZXggPT09ICd1bmRlZmluZWQnICYmICFjb2x1bW4udmlzaWJsZSkge1xuICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHR5cGVvZiBjb2x1bW4uZmllbGRJbmRleCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICB0aGlzLmhlYWRlci5maWVsZHNbY29sdW1uLmZpZWxkSW5kZXhdID0gY29sdW1uLmZpZWxkXG4gICAgICAgICAgdGhpcy5oZWFkZXIuc3R5bGVzW2NvbHVtbi5maWVsZEluZGV4XSA9IGFsaWduICsgc3R5bGVcbiAgICAgICAgICB0aGlzLmhlYWRlci5jbGFzc2VzW2NvbHVtbi5maWVsZEluZGV4XSA9IGNsYXNzX1xuICAgICAgICAgIHRoaXMuaGVhZGVyLmZvcm1hdHRlcnNbY29sdW1uLmZpZWxkSW5kZXhdID0gY29sdW1uLmZvcm1hdHRlclxuICAgICAgICAgIHRoaXMuaGVhZGVyLmRldGFpbEZvcm1hdHRlcnNbY29sdW1uLmZpZWxkSW5kZXhdID0gY29sdW1uLmRldGFpbEZvcm1hdHRlclxuICAgICAgICAgIHRoaXMuaGVhZGVyLmV2ZW50c1tjb2x1bW4uZmllbGRJbmRleF0gPSBjb2x1bW4uZXZlbnRzXG4gICAgICAgICAgdGhpcy5oZWFkZXIuc29ydGVyc1tjb2x1bW4uZmllbGRJbmRleF0gPSBjb2x1bW4uc29ydGVyXG4gICAgICAgICAgdGhpcy5oZWFkZXIuc29ydE5hbWVzW2NvbHVtbi5maWVsZEluZGV4XSA9IGNvbHVtbi5zb3J0TmFtZVxuICAgICAgICAgIHRoaXMuaGVhZGVyLmNlbGxTdHlsZXNbY29sdW1uLmZpZWxkSW5kZXhdID0gY29sdW1uLmNlbGxTdHlsZVxuICAgICAgICAgIHRoaXMuaGVhZGVyLnNlYXJjaGFibGVzW2NvbHVtbi5maWVsZEluZGV4XSA9IGNvbHVtbi5zZWFyY2hhYmxlXG5cbiAgICAgICAgICBpZiAoIWNvbHVtbi52aXNpYmxlKSB7XG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLmNhcmRWaWV3ICYmICghY29sdW1uLmNhcmRWaXNpYmxlKSkge1xuICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgdmlzaWJsZUNvbHVtbnNbY29sdW1uLmZpZWxkXSA9IGNvbHVtblxuICAgICAgICB9XG5cbiAgICAgICAgaHRtbC5wdXNoKGA8dGgke1V0aWxzLnNwcmludGYoJyB0aXRsZT1cIiVzXCInLCBjb2x1bW4udGl0bGVUb29sdGlwKX1gLFxuICAgICAgICAgIGNvbHVtbi5jaGVja2JveCB8fCBjb2x1bW4ucmFkaW9cbiAgICAgICAgICAgID8gVXRpbHMuc3ByaW50ZignIGNsYXNzPVwiYnMtY2hlY2tib3ggJXNcIicsIGNvbHVtblsnY2xhc3MnXSB8fCAnJylcbiAgICAgICAgICAgIDogY2xhc3NfLFxuICAgICAgICAgIFV0aWxzLnNwcmludGYoJyBzdHlsZT1cIiVzXCInLCBoYWxpZ24gKyBzdHlsZSksXG4gICAgICAgICAgVXRpbHMuc3ByaW50ZignIHJvd3NwYW49XCIlc1wiJywgY29sdW1uLnJvd3NwYW4pLFxuICAgICAgICAgIFV0aWxzLnNwcmludGYoJyBjb2xzcGFuPVwiJXNcIicsIGNvbHVtbi5jb2xzcGFuKSxcbiAgICAgICAgICBVdGlscy5zcHJpbnRmKCcgZGF0YS1maWVsZD1cIiVzXCInLCBjb2x1bW4uZmllbGQpLFxuICAgICAgICAgIC8vIElmIGBjb2x1bW5gIGlzIG5vdCB0aGUgZmlyc3QgZWxlbWVudCBvZiBgdGhpcy5vcHRpb25zLmNvbHVtbnNbMF1gLCB0aGVuIGNsYXNzTmFtZSAnZGF0YS1ub3QtZmlyc3QtdGgnIHNob3VsZCBiZSBhZGRlZC5cbiAgICAgICAgICBqID09PSAwICYmIGkgPiAwID8gJyBkYXRhLW5vdC1maXJzdC10aCcgOiAnJyxcbiAgICAgICAgICAnPicpXG5cbiAgICAgICAgaHRtbC5wdXNoKFV0aWxzLnNwcmludGYoJzxkaXYgY2xhc3M9XCJ0aC1pbm5lciAlc1wiPicsIHRoaXMub3B0aW9ucy5zb3J0YWJsZSAmJiBjb2x1bW4uc29ydGFibGVcbiAgICAgICAgICA/ICdzb3J0YWJsZSBib3RoJyA6ICcnKSlcblxuICAgICAgICBsZXQgdGV4dCA9IHRoaXMub3B0aW9ucy5lc2NhcGUgPyBVdGlscy5lc2NhcGVIVE1MKGNvbHVtbi50aXRsZSkgOiBjb2x1bW4udGl0bGVcblxuICAgICAgICBjb25zdCB0aXRsZSA9IHRleHRcbiAgICAgICAgaWYgKGNvbHVtbi5jaGVja2JveCkge1xuICAgICAgICAgIHRleHQgPSAnJ1xuICAgICAgICAgIGlmICghdGhpcy5vcHRpb25zLnNpbmdsZVNlbGVjdCAmJiB0aGlzLm9wdGlvbnMuY2hlY2tib3hIZWFkZXIpIHtcbiAgICAgICAgICAgIHRleHQgPSAnPGxhYmVsPjxpbnB1dCBuYW1lPVwiYnRTZWxlY3RBbGxcIiB0eXBlPVwiY2hlY2tib3hcIiAvPjxzcGFuPjwvc3Bhbj48L2xhYmVsPidcbiAgICAgICAgICB9XG4gICAgICAgICAgdGhpcy5oZWFkZXIuc3RhdGVGaWVsZCA9IGNvbHVtbi5maWVsZFxuICAgICAgICB9XG4gICAgICAgIGlmIChjb2x1bW4ucmFkaW8pIHtcbiAgICAgICAgICB0ZXh0ID0gJydcbiAgICAgICAgICB0aGlzLmhlYWRlci5zdGF0ZUZpZWxkID0gY29sdW1uLmZpZWxkXG4gICAgICAgICAgdGhpcy5vcHRpb25zLnNpbmdsZVNlbGVjdCA9IHRydWVcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXRleHQgJiYgY29sdW1uLnNob3dTZWxlY3RUaXRsZSkge1xuICAgICAgICAgIHRleHQgKz0gdGl0bGVcbiAgICAgICAgfVxuXG4gICAgICAgIGh0bWwucHVzaCh0ZXh0KVxuICAgICAgICBodG1sLnB1c2goJzwvZGl2PicpXG4gICAgICAgIGh0bWwucHVzaCgnPGRpdiBjbGFzcz1cImZodC1jZWxsXCI+PC9kaXY+JylcbiAgICAgICAgaHRtbC5wdXNoKCc8L2Rpdj4nKVxuICAgICAgICBodG1sLnB1c2goJzwvdGg+JylcbiAgICAgIH0pXG4gICAgICBodG1sLnB1c2goJzwvdHI+JylcbiAgICB9KVxuXG4gICAgdGhpcy4kaGVhZGVyLmh0bWwoaHRtbC5qb2luKCcnKSlcbiAgICB0aGlzLiRoZWFkZXIuZmluZCgndGhbZGF0YS1maWVsZF0nKS5lYWNoKChpLCBlbCkgPT4ge1xuICAgICAgJChlbCkuZGF0YSh2aXNpYmxlQ29sdW1uc1skKGVsKS5kYXRhKCdmaWVsZCcpXSlcbiAgICB9KVxuICAgIHRoaXMuJGNvbnRhaW5lci5vZmYoJ2NsaWNrJywgJy50aC1pbm5lcicpLm9uKCdjbGljaycsICcudGgtaW5uZXInLCBlID0+IHtcbiAgICAgIGNvbnN0ICR0aGlzID0gJChlLmN1cnJlbnRUYXJnZXQpXG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuZGV0YWlsVmlldyAmJiAhJHRoaXMucGFyZW50KCkuaGFzQ2xhc3MoJ2JzLWNoZWNrYm94JykpIHtcbiAgICAgICAgaWYgKCR0aGlzLmNsb3Nlc3QoJy5ib290c3RyYXAtdGFibGUnKVswXSAhPT0gdGhpcy4kY29udGFpbmVyWzBdKSB7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMub3B0aW9ucy5zb3J0YWJsZSAmJiAkdGhpcy5wYXJlbnQoKS5kYXRhKCkuc29ydGFibGUpIHtcbiAgICAgICAgdGhpcy5vblNvcnQoZSlcbiAgICAgIH1cbiAgICB9KVxuXG4gICAgdGhpcy4kaGVhZGVyLmNoaWxkcmVuKCkuY2hpbGRyZW4oKS5vZmYoJ2tleXByZXNzJykub24oJ2tleXByZXNzJywgZSA9PiB7XG4gICAgICBpZiAodGhpcy5vcHRpb25zLnNvcnRhYmxlICYmICQoZS5jdXJyZW50VGFyZ2V0KS5kYXRhKCkuc29ydGFibGUpIHtcbiAgICAgICAgY29uc3QgY29kZSA9IGUua2V5Q29kZSB8fCBlLndoaWNoXG4gICAgICAgIGlmIChjb2RlID09PSAxMykgeyAvLyBFbnRlciBrZXljb2RlXG4gICAgICAgICAgdGhpcy5vblNvcnQoZSlcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG5cbiAgICBjb25zdCByZXNpemVFdmVudCA9IGByZXNpemUuYm9vdHN0cmFwLXRhYmxlJHt0aGlzLiRlbC5hdHRyKCdpZCcpIHx8ICcnfWBcbiAgICAkKHdpbmRvdykub2ZmKHJlc2l6ZUV2ZW50KVxuICAgIGlmICghdGhpcy5vcHRpb25zLnNob3dIZWFkZXIgfHwgdGhpcy5vcHRpb25zLmNhcmRWaWV3KSB7XG4gICAgICB0aGlzLiRoZWFkZXIuaGlkZSgpXG4gICAgICB0aGlzLiR0YWJsZUhlYWRlci5oaWRlKClcbiAgICAgIHRoaXMuJHRhYmxlTG9hZGluZy5jc3MoJ3RvcCcsIDApXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuJGhlYWRlci5zaG93KClcbiAgICAgIHRoaXMuJHRhYmxlSGVhZGVyLnNob3coKVxuICAgICAgdGhpcy4kdGFibGVMb2FkaW5nLmNzcygndG9wJywgdGhpcy4kaGVhZGVyLm91dGVySGVpZ2h0KCkgKyAxKVxuICAgICAgLy8gQXNzaWduIHRoZSBjb3JyZWN0IHNvcnRhYmxlIGFycm93XG4gICAgICB0aGlzLmdldENhcmV0KClcbiAgICAgICQod2luZG93KS5vbihyZXNpemVFdmVudCwgZSA9PiB0aGlzLnJlc2V0V2lkdGgoZSkpXG4gICAgfVxuXG4gICAgdGhpcy4kc2VsZWN0QWxsID0gdGhpcy4kaGVhZGVyLmZpbmQoJ1tuYW1lPVwiYnRTZWxlY3RBbGxcIl0nKVxuICAgIHRoaXMuJHNlbGVjdEFsbC5vZmYoJ2NsaWNrJykub24oJ2NsaWNrJywgKHtjdXJyZW50VGFyZ2V0fSkgPT4ge1xuICAgICAgY29uc3QgY2hlY2tlZCA9ICQoY3VycmVudFRhcmdldCkucHJvcCgnY2hlY2tlZCcpXG4gICAgICB0aGlzW2NoZWNrZWQgPyAnY2hlY2tBbGwnIDogJ3VuY2hlY2tBbGwnXSgpXG4gICAgICB0aGlzLnVwZGF0ZVNlbGVjdGVkKClcbiAgICB9KVxuICB9XG5cbiAgaW5pdERhdGEgKGRhdGEsIHR5cGUpIHtcbiAgICBpZiAodHlwZSA9PT0gJ2FwcGVuZCcpIHtcbiAgICAgIHRoaXMub3B0aW9ucy5kYXRhID0gdGhpcy5vcHRpb25zLmRhdGEuY29uY2F0KGRhdGEpXG4gICAgfSBlbHNlIGlmICh0eXBlID09PSAncHJlcGVuZCcpIHtcbiAgICAgIHRoaXMub3B0aW9ucy5kYXRhID0gW10uY29uY2F0KGRhdGEpLmNvbmNhdCh0aGlzLm9wdGlvbnMuZGF0YSlcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5vcHRpb25zLmRhdGEgPSBkYXRhIHx8IHRoaXMub3B0aW9ucy5kYXRhXG4gICAgfVxuXG4gICAgdGhpcy5kYXRhID0gdGhpcy5vcHRpb25zLmRhdGFcblxuICAgIGlmICh0aGlzLm9wdGlvbnMuc2lkZVBhZ2luYXRpb24gPT09ICdzZXJ2ZXInKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG4gICAgdGhpcy5pbml0U29ydCgpXG4gIH1cblxuICBpbml0U29ydCAoKSB7XG4gICAgbGV0IG5hbWUgPSB0aGlzLm9wdGlvbnMuc29ydE5hbWVcbiAgICBjb25zdCBvcmRlciA9IHRoaXMub3B0aW9ucy5zb3J0T3JkZXIgPT09ICdkZXNjJyA/IC0xIDogMVxuICAgIGNvbnN0IGluZGV4ID0gdGhpcy5oZWFkZXIuZmllbGRzLmluZGV4T2YodGhpcy5vcHRpb25zLnNvcnROYW1lKVxuICAgIGxldCB0aW1lb3V0SWQgPSAwXG5cbiAgICBpZiAoaW5kZXggIT09IC0xKSB7XG4gICAgICBpZiAodGhpcy5vcHRpb25zLnNvcnRTdGFibGUpIHtcbiAgICAgICAgdGhpcy5kYXRhLmZvckVhY2goKHJvdywgaSkgPT4ge1xuICAgICAgICAgIGlmICghcm93Lmhhc093blByb3BlcnR5KCdfcG9zaXRpb24nKSkge1xuICAgICAgICAgICAgcm93Ll9wb3NpdGlvbiA9IGlcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuY3VzdG9tU29ydCkge1xuICAgICAgICBVdGlscy5jYWxjdWxhdGVPYmplY3RWYWx1ZSh0aGlzLm9wdGlvbnMsIHRoaXMub3B0aW9ucy5jdXN0b21Tb3J0LCBbXG4gICAgICAgICAgdGhpcy5vcHRpb25zLnNvcnROYW1lLFxuICAgICAgICAgIHRoaXMub3B0aW9ucy5zb3J0T3JkZXIsXG4gICAgICAgICAgdGhpcy5kYXRhXG4gICAgICAgIF0pXG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmRhdGEuc29ydCgoYSwgYikgPT4ge1xuICAgICAgICAgIGlmICh0aGlzLmhlYWRlci5zb3J0TmFtZXNbaW5kZXhdKSB7XG4gICAgICAgICAgICBuYW1lID0gdGhpcy5oZWFkZXIuc29ydE5hbWVzW2luZGV4XVxuICAgICAgICAgIH1cbiAgICAgICAgICBjb25zdCBhYSA9IFV0aWxzLmdldEl0ZW1GaWVsZChhLCBuYW1lLCB0aGlzLm9wdGlvbnMuZXNjYXBlKVxuICAgICAgICAgIGNvbnN0IGJiID0gVXRpbHMuZ2V0SXRlbUZpZWxkKGIsIG5hbWUsIHRoaXMub3B0aW9ucy5lc2NhcGUpXG4gICAgICAgICAgY29uc3QgdmFsdWUgPSBVdGlscy5jYWxjdWxhdGVPYmplY3RWYWx1ZSh0aGlzLmhlYWRlciwgdGhpcy5oZWFkZXIuc29ydGVyc1tpbmRleF0sIFthYSwgYmIsIGEsIGJdKVxuXG4gICAgICAgICAgaWYgKHZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMuc29ydFN0YWJsZSAmJiB2YWx1ZSA9PT0gMCkge1xuICAgICAgICAgICAgICByZXR1cm4gb3JkZXIgKiAoYS5fcG9zaXRpb24gLSBiLl9wb3NpdGlvbilcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBvcmRlciAqIHZhbHVlXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIFV0aWxzLnNvcnQoYWEsIGJiLCBvcmRlciwgdGhpcy5vcHRpb25zLnNvcnRTdGFibGUpXG4gICAgICAgIH0pXG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuc29ydENsYXNzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZClcbiAgICAgICAgdGltZW91dElkID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgdGhpcy4kZWwucmVtb3ZlQ2xhc3ModGhpcy5vcHRpb25zLnNvcnRDbGFzcylcbiAgICAgICAgICBjb25zdCBpbmRleCA9IHRoaXMuJGhlYWRlci5maW5kKGBbZGF0YS1maWVsZD1cIiR7dGhpcy5vcHRpb25zLnNvcnROYW1lfVwiXWApLmluZGV4KClcbiAgICAgICAgICB0aGlzLiRlbC5maW5kKGB0ciB0ZDpudGgtY2hpbGQoJHtpbmRleCArIDF9KWApLmFkZENsYXNzKHRoaXMub3B0aW9ucy5zb3J0Q2xhc3MpXG4gICAgICAgIH0sIDI1MClcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBvblNvcnQgKHt0eXBlLCBjdXJyZW50VGFyZ2V0fSkge1xuICAgIGNvbnN0ICR0aGlzID0gdHlwZSA9PT0gJ2tleXByZXNzJyA/ICQoY3VycmVudFRhcmdldCkgOiAkKGN1cnJlbnRUYXJnZXQpLnBhcmVudCgpXG4gICAgY29uc3QgJHRoaXNfID0gdGhpcy4kaGVhZGVyLmZpbmQoJ3RoJykuZXEoJHRoaXMuaW5kZXgoKSlcblxuICAgIHRoaXMuJGhlYWRlci5hZGQodGhpcy4kaGVhZGVyXykuZmluZCgnc3Bhbi5vcmRlcicpLnJlbW92ZSgpXG5cbiAgICBpZiAodGhpcy5vcHRpb25zLnNvcnROYW1lID09PSAkdGhpcy5kYXRhKCdmaWVsZCcpKSB7XG4gICAgICB0aGlzLm9wdGlvbnMuc29ydE9yZGVyID0gdGhpcy5vcHRpb25zLnNvcnRPcmRlciA9PT0gJ2FzYycgPyAnZGVzYycgOiAnYXNjJ1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLm9wdGlvbnMuc29ydE5hbWUgPSAkdGhpcy5kYXRhKCdmaWVsZCcpXG4gICAgICBpZiAodGhpcy5vcHRpb25zLnJlbWVtYmVyT3JkZXIpIHtcbiAgICAgICAgdGhpcy5vcHRpb25zLnNvcnRPcmRlciA9ICR0aGlzLmRhdGEoJ29yZGVyJykgPT09ICdhc2MnID8gJ2Rlc2MnIDogJ2FzYydcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMub3B0aW9ucy5zb3J0T3JkZXIgPSB0aGlzLmNvbHVtbnNbdGhpcy5maWVsZHNDb2x1bW5zSW5kZXhbJHRoaXMuZGF0YSgnZmllbGQnKV1dLnNvcnRPcmRlciB8fFxuICAgICAgICAgIHRoaXMuY29sdW1uc1t0aGlzLmZpZWxkc0NvbHVtbnNJbmRleFskdGhpcy5kYXRhKCdmaWVsZCcpXV0ub3JkZXJcbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy50cmlnZ2VyKCdzb3J0JywgdGhpcy5vcHRpb25zLnNvcnROYW1lLCB0aGlzLm9wdGlvbnMuc29ydE9yZGVyKVxuXG4gICAgJHRoaXMuYWRkKCR0aGlzXykuZGF0YSgnb3JkZXInLCB0aGlzLm9wdGlvbnMuc29ydE9yZGVyKVxuXG4gICAgLy8gQXNzaWduIHRoZSBjb3JyZWN0IHNvcnRhYmxlIGFycm93XG4gICAgdGhpcy5nZXRDYXJldCgpXG5cbiAgICBpZiAodGhpcy5vcHRpb25zLnNpZGVQYWdpbmF0aW9uID09PSAnc2VydmVyJykge1xuICAgICAgdGhpcy5vcHRpb25zLnBhZ2VOdW1iZXIgPSAxXG4gICAgICB0aGlzLmluaXRTZXJ2ZXIodGhpcy5vcHRpb25zLnNpbGVudFNvcnQpXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICB0aGlzLmluaXRTb3J0KClcbiAgICB0aGlzLmluaXRCb2R5KClcbiAgfVxuXG4gIGluaXRUb29sYmFyICgpIHtcbiAgICBjb25zdCBvID0gdGhpcy5vcHRpb25zXG4gICAgbGV0IGh0bWwgPSBbXVxuICAgIGxldCB0aW1lb3V0SWQgPSAwXG4gICAgbGV0ICRrZWVwT3BlblxuICAgIGxldCAkc2VhcmNoXG4gICAgbGV0IHN3aXRjaGFibGVDb3VudCA9IDBcblxuICAgIGlmICh0aGlzLiR0b29sYmFyLmZpbmQoJy5icy1iYXJzJykuY2hpbGRyZW4oKS5sZW5ndGgpIHtcbiAgICAgICQoJ2JvZHknKS5hcHBlbmQoJChvLnRvb2xiYXIpKVxuICAgIH1cbiAgICB0aGlzLiR0b29sYmFyLmh0bWwoJycpXG5cbiAgICBpZiAodHlwZW9mIG8udG9vbGJhciA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIG8udG9vbGJhciA9PT0gJ29iamVjdCcpIHtcbiAgICAgICQoVXRpbHMuc3ByaW50ZignPGRpdiBjbGFzcz1cImJzLWJhcnMgJXMtJXNcIj48L2Rpdj4nLCB0aGlzLmNvbnN0YW50cy5jbGFzc2VzLnB1bGwsIG8udG9vbGJhckFsaWduKSlcbiAgICAgICAgLmFwcGVuZFRvKHRoaXMuJHRvb2xiYXIpXG4gICAgICAgIC5hcHBlbmQoJChvLnRvb2xiYXIpKVxuICAgIH1cblxuICAgIC8vIHNob3dDb2x1bW5zLCBzaG93VG9nZ2xlLCBzaG93UmVmcmVzaFxuICAgIGh0bWwgPSBbYDxkaXYgY2xhc3M9XCIke1tcbiAgICAgICdjb2x1bW5zJyxcbiAgICAgIGBjb2x1bW5zLSR7by5idXR0b25zQWxpZ259YCxcbiAgICAgIHRoaXMuY29uc3RhbnRzLmNsYXNzZXMuYnV0dG9uc0dyb3VwLFxuICAgICAgYCR7dGhpcy5jb25zdGFudHMuY2xhc3Nlcy5wdWxsfS0ke28uYnV0dG9uc0FsaWdufWBcbiAgICBdLmpvaW4oJyAnKX1cIj5gXVxuXG4gICAgaWYgKHR5cGVvZiBvLmljb25zID09PSAnc3RyaW5nJykge1xuICAgICAgby5pY29ucyA9IFV0aWxzLmNhbGN1bGF0ZU9iamVjdFZhbHVlKG51bGwsIG8uaWNvbnMpXG4gICAgfVxuXG4gICAgaWYgKG8uc2hvd1BhZ2luYXRpb25Td2l0Y2gpIHtcbiAgICAgIGh0bWwucHVzaChgPGJ1dHRvbiBjbGFzcz1cIiR7dGhpcy5jb25zdGFudHMuYnV0dG9uc0NsYXNzfVwiIHR5cGU9XCJidXR0b25cIiBuYW1lPVwicGFnaW5hdGlvblN3aXRjaFwiXG4gICAgICAgIGFyaWEtbGFiZWw9XCJQYWdpbmF0aW9uIFN3aXRjaFwiIHRpdGxlPVwiJHtvLmZvcm1hdFBhZ2luYXRpb25Td2l0Y2goKX1cIj5cbiAgICAgICAgJHtvLnNob3dCdXR0b25JY29ucyA/IFV0aWxzLnNwcmludGYodGhpcy5jb25zdGFudHMuaHRtbC5pY29uLCBvLmljb25zUHJlZml4LCBvLmljb25zLnBhZ2luYXRpb25Td2l0Y2hEb3duKSA6ICcnfVxuICAgICAgICAke28uc2hvd0J1dHRvblRleHQgPyBvLmZvcm1hdFBhZ2luYXRpb25Td2l0Y2hVcCgpIDogJyd9XG4gICAgICAgIDwvYnV0dG9uPmApXG4gICAgfVxuXG4gICAgaWYgKG8uc2hvd1JlZnJlc2gpIHtcbiAgICAgIGh0bWwucHVzaChgPGJ1dHRvbiBjbGFzcz1cIiR7dGhpcy5jb25zdGFudHMuYnV0dG9uc0NsYXNzfVwiIHR5cGU9XCJidXR0b25cIiBuYW1lPVwicmVmcmVzaFwiXG4gICAgICAgIGFyaWEtbGFiZWw9XCJSZWZyZXNoXCIgdGl0bGU9XCIke28uZm9ybWF0UmVmcmVzaCgpfVwiPlxuICAgICAgICAke28uc2hvd0J1dHRvbkljb25zID8gVXRpbHMuc3ByaW50Zih0aGlzLmNvbnN0YW50cy5odG1sLmljb24sIG8uaWNvbnNQcmVmaXgsIG8uaWNvbnMucmVmcmVzaCkgOiAnJ31cbiAgICAgICAgJHtvLnNob3dCdXR0b25UZXh0ID8gby5mb3JtYXRSZWZyZXNoKCkgOiAnJ31cbiAgICAgICAgPC9idXR0b24+YClcbiAgICB9XG5cbiAgICBpZiAoby5zaG93VG9nZ2xlKSB7XG4gICAgICBodG1sLnB1c2goYDxidXR0b24gY2xhc3M9XCIke3RoaXMuY29uc3RhbnRzLmJ1dHRvbnNDbGFzc31cIiB0eXBlPVwiYnV0dG9uXCIgbmFtZT1cInRvZ2dsZVwiXG4gICAgICAgIGFyaWEtbGFiZWw9XCJUb2dnbGVcIiB0aXRsZT1cIiR7by5mb3JtYXRUb2dnbGUoKX1cIj5cbiAgICAgICAgJHtvLnNob3dCdXR0b25JY29ucyA/IFV0aWxzLnNwcmludGYodGhpcy5jb25zdGFudHMuaHRtbC5pY29uLCBvLmljb25zUHJlZml4LCBvLmljb25zLnRvZ2dsZU9mZikgOiAnJyB9XG4gICAgICAgICR7by5zaG93QnV0dG9uVGV4dCA/IG8uZm9ybWF0VG9nZ2xlT24oKSA6ICcnfVxuICAgICAgICA8L2J1dHRvbj5gKVxuICAgIH1cblxuICAgIGlmIChvLnNob3dGdWxsc2NyZWVuKSB7XG4gICAgICBodG1sLnB1c2goYDxidXR0b24gY2xhc3M9XCIke3RoaXMuY29uc3RhbnRzLmJ1dHRvbnNDbGFzc31cIiB0eXBlPVwiYnV0dG9uXCIgbmFtZT1cImZ1bGxzY3JlZW5cIlxuICAgICAgICBhcmlhLWxhYmVsPVwiRnVsbHNjcmVlblwiIHRpdGxlPVwiJHtvLmZvcm1hdEZ1bGxzY3JlZW4oKX1cIj5cbiAgICAgICAgJHtvLnNob3dCdXR0b25JY29ucyA/IFV0aWxzLnNwcmludGYodGhpcy5jb25zdGFudHMuaHRtbC5pY29uLCBvLmljb25zUHJlZml4LCBvLmljb25zLmZ1bGxzY3JlZW4pIDogJycgfVxuICAgICAgICAke28uc2hvd0J1dHRvblRleHQgPyBvLmZvcm1hdEZ1bGxzY3JlZW4oKSA6ICcnfVxuICAgICAgICA8L2J1dHRvbj5gKVxuICAgIH1cblxuICAgIGlmIChvLnNob3dDb2x1bW5zKSB7XG4gICAgICBodG1sLnB1c2goYDxkaXYgY2xhc3M9XCJrZWVwLW9wZW4gJHt0aGlzLmNvbnN0YW50cy5jbGFzc2VzLmJ1dHRvbnNEcm9wZG93bn1cIiB0aXRsZT1cIiR7by5mb3JtYXRDb2x1bW5zKCl9XCI+XG4gICAgICAgIDxidXR0b24gY2xhc3M9XCIke3RoaXMuY29uc3RhbnRzLmJ1dHRvbnNDbGFzc30gZHJvcGRvd24tdG9nZ2xlXCIgdHlwZT1cImJ1dHRvblwiIGRhdGEtdG9nZ2xlPVwiZHJvcGRvd25cIlxuICAgICAgICBhcmlhLWxhYmVsPVwiQ29sdW1uc1wiIHRpdGxlPVwiJHtvLmZvcm1hdENvbHVtbnMoKX1cIj5cbiAgICAgICAgJHtvLnNob3dCdXR0b25JY29ucyA/IFV0aWxzLnNwcmludGYodGhpcy5jb25zdGFudHMuaHRtbC5pY29uLCBvLmljb25zUHJlZml4LCBvLmljb25zLmNvbHVtbnMpIDogJycgfVxuICAgICAgICAke28uc2hvd0J1dHRvblRleHQgPyBvLmZvcm1hdENvbHVtbnMoKSA6ICcnfVxuICAgICAgICAke3RoaXMuY29uc3RhbnRzLmh0bWwuZHJvcGRvd25DYXJldH1cbiAgICAgICAgPC9idXR0b24+XG4gICAgICAgICR7dGhpcy5jb25zdGFudHMuaHRtbC50b29sYmFyRHJvcGRvd25bMF19YClcblxuICAgICAgaWYgKG8uc2hvd0NvbHVtbnNUb2dnbGVBbGwpIHtcbiAgICAgICAgY29uc3QgYWxsRmllbGRzVmlzaWJsZSA9IHRoaXMuZ2V0VmlzaWJsZUNvbHVtbnMoKS5sZW5ndGggPT09IHRoaXMuY29sdW1ucy5sZW5ndGhcbiAgICAgICAgaHRtbC5wdXNoKFxuICAgICAgICAgIFV0aWxzLnNwcmludGYodGhpcy5jb25zdGFudHMuaHRtbC50b29sYmFyRHJvcGRvd25JdGVtLFxuICAgICAgICAgICAgVXRpbHMuc3ByaW50ZignPGlucHV0IHR5cGU9XCJjaGVja2JveFwiIGNsYXNzPVwidG9nZ2xlLWFsbFwiICVzPiA8c3Bhbj4lczwvc3Bhbj4nLCBhbGxGaWVsZHNWaXNpYmxlID8gJ2NoZWNrZWQ9XCJjaGVja2VkXCInIDogJycsIG8uZm9ybWF0Q29sdW1uc1RvZ2dsZUFsbCgpKVxuICAgICAgICAgIClcbiAgICAgICAgKVxuXG4gICAgICAgIGh0bWwucHVzaCh0aGlzLmNvbnN0YW50cy5odG1sLnRvb2xiYXJEcm9wZG93blNlcGVyYXRvcilcbiAgICAgIH1cblxuICAgICAgdGhpcy5jb2x1bW5zLmZvckVhY2goKGNvbHVtbiwgaSkgPT4ge1xuICAgICAgICBpZiAoY29sdW1uLnJhZGlvIHx8IGNvbHVtbi5jaGVja2JveCkge1xuICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG8uY2FyZFZpZXcgJiYgIWNvbHVtbi5jYXJkVmlzaWJsZSkge1xuICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgY2hlY2tlZCA9IGNvbHVtbi52aXNpYmxlID8gJyBjaGVja2VkPVwiY2hlY2tlZFwiJyA6ICcnXG5cbiAgICAgICAgaWYgKGNvbHVtbi5zd2l0Y2hhYmxlKSB7XG4gICAgICAgICAgaHRtbC5wdXNoKFV0aWxzLnNwcmludGYodGhpcy5jb25zdGFudHMuaHRtbC50b29sYmFyRHJvcGRvd25JdGVtLFxuICAgICAgICAgICAgVXRpbHMuc3ByaW50ZignPGlucHV0IHR5cGU9XCJjaGVja2JveFwiIGRhdGEtZmllbGQ9XCIlc1wiIHZhbHVlPVwiJXNcIiVzPiA8c3Bhbj4lczwvc3Bhbj4nLFxuICAgICAgICAgICAgICBjb2x1bW4uZmllbGQsIGksIGNoZWNrZWQsIGNvbHVtbi50aXRsZSkpKVxuICAgICAgICAgIHN3aXRjaGFibGVDb3VudCsrXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICBodG1sLnB1c2godGhpcy5jb25zdGFudHMuaHRtbC50b29sYmFyRHJvcGRvd25bMV0sICc8L2Rpdj4nKVxuICAgIH1cblxuICAgIGh0bWwucHVzaCgnPC9kaXY+JylcblxuICAgIC8vIEZpeCAjMTg4OiB0aGlzLnNob3dUb29sYmFyIGlzIGZvciBleHRlbnNpb25zXG4gICAgaWYgKHRoaXMuc2hvd1Rvb2xiYXIgfHwgaHRtbC5sZW5ndGggPiAyKSB7XG4gICAgICB0aGlzLiR0b29sYmFyLmFwcGVuZChodG1sLmpvaW4oJycpKVxuICAgIH1cblxuICAgIGlmIChvLnNob3dQYWdpbmF0aW9uU3dpdGNoKSB7XG4gICAgICB0aGlzLiR0b29sYmFyLmZpbmQoJ2J1dHRvbltuYW1lPVwicGFnaW5hdGlvblN3aXRjaFwiXScpXG4gICAgICAgIC5vZmYoJ2NsaWNrJykub24oJ2NsaWNrJywgKCkgPT4gdGhpcy50b2dnbGVQYWdpbmF0aW9uKCkpXG4gICAgfVxuXG4gICAgaWYgKG8uc2hvd0Z1bGxzY3JlZW4pIHtcbiAgICAgIHRoaXMuJHRvb2xiYXIuZmluZCgnYnV0dG9uW25hbWU9XCJmdWxsc2NyZWVuXCJdJylcbiAgICAgICAgLm9mZignY2xpY2snKS5vbignY2xpY2snLCAoKSA9PiB0aGlzLnRvZ2dsZUZ1bGxzY3JlZW4oKSlcbiAgICB9XG5cbiAgICBpZiAoby5zaG93UmVmcmVzaCkge1xuICAgICAgdGhpcy4kdG9vbGJhci5maW5kKCdidXR0b25bbmFtZT1cInJlZnJlc2hcIl0nKVxuICAgICAgICAub2ZmKCdjbGljaycpLm9uKCdjbGljaycsICgpID0+IHRoaXMucmVmcmVzaCgpKVxuICAgIH1cblxuICAgIGlmIChvLnNob3dUb2dnbGUpIHtcbiAgICAgIHRoaXMuJHRvb2xiYXIuZmluZCgnYnV0dG9uW25hbWU9XCJ0b2dnbGVcIl0nKVxuICAgICAgICAub2ZmKCdjbGljaycpLm9uKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICB0aGlzLnRvZ2dsZVZpZXcoKVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIGlmIChvLnNob3dDb2x1bW5zKSB7XG4gICAgICAka2VlcE9wZW4gPSB0aGlzLiR0b29sYmFyLmZpbmQoJy5rZWVwLW9wZW4nKVxuICAgICAgY29uc3QgJGNoZWNrYm94ZXMgPSAka2VlcE9wZW4uZmluZCgnaW5wdXQ6bm90KFwiLnRvZ2dsZS1hbGxcIiknKVxuICAgICAgY29uc3QgJHRvZ2dsZUFsbCA9ICRrZWVwT3Blbi5maW5kKCdpbnB1dC50b2dnbGUtYWxsJylcblxuICAgICAgaWYgKHN3aXRjaGFibGVDb3VudCA8PSBvLm1pbmltdW1Db3VudENvbHVtbnMpIHtcbiAgICAgICAgJGtlZXBPcGVuLmZpbmQoJ2lucHV0JykucHJvcCgnZGlzYWJsZWQnLCB0cnVlKVxuICAgICAgfVxuXG4gICAgICAka2VlcE9wZW4uZmluZCgnbGksIGxhYmVsJykub2ZmKCdjbGljaycpLm9uKCdjbGljaycsIGUgPT4ge1xuICAgICAgICBlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpXG4gICAgICB9KVxuXG4gICAgICAkY2hlY2tib3hlcy5vZmYoJ2NsaWNrJykub24oJ2NsaWNrJywgKHtjdXJyZW50VGFyZ2V0fSkgPT4ge1xuICAgICAgICBjb25zdCAkdGhpcyA9ICQoY3VycmVudFRhcmdldClcblxuICAgICAgICB0aGlzLl90b2dnbGVDb2x1bW4oJHRoaXMudmFsKCksICR0aGlzLnByb3AoJ2NoZWNrZWQnKSwgZmFsc2UpXG4gICAgICAgIHRoaXMudHJpZ2dlcignY29sdW1uLXN3aXRjaCcsICR0aGlzLmRhdGEoJ2ZpZWxkJyksICR0aGlzLnByb3AoJ2NoZWNrZWQnKSlcbiAgICAgICAgJHRvZ2dsZUFsbC5wcm9wKCdjaGVja2VkJywgJGNoZWNrYm94ZXMuZmlsdGVyKCc6Y2hlY2tlZCcpLmxlbmd0aCA9PT0gdGhpcy5jb2x1bW5zLmxlbmd0aClcbiAgICAgIH0pXG5cbiAgICAgICR0b2dnbGVBbGwub2ZmKCdjbGljaycpLm9uKCdjbGljaycsICh7Y3VycmVudFRhcmdldH0pID0+IHtcbiAgICAgICAgdGhpcy5fdG9nZ2xlQWxsQ29sdW1ucygkKGN1cnJlbnRUYXJnZXQpLnByb3AoJ2NoZWNrZWQnKSlcbiAgICAgIH0pXG4gICAgfVxuXG4gICAgLy8gRml4ICM0NTE2OiB0aGlzLnNob3dTZWFyY2hDbGVhckJ1dHRvbiBpcyBmb3IgZXh0ZW5zaW9uc1xuICAgIGlmIChvLnNlYXJjaCB8fCB0aGlzLnNob3dTZWFyY2hDbGVhckJ1dHRvbikge1xuICAgICAgaHRtbCA9IFtdXG4gICAgICBjb25zdCBzaG93U2VhcmNoQnV0dG9uID0gVXRpbHMuc3ByaW50Zih0aGlzLmNvbnN0YW50cy5odG1sLnNlYXJjaEJ1dHRvbixcbiAgICAgICAgdGhpcy5jb25zdGFudHMuYnV0dG9uc0NsYXNzLFxuICAgICAgICBvLmZvcm1hdFNlYXJjaCgpLFxuICAgICAgICBvLnNob3dCdXR0b25JY29ucyA/IFV0aWxzLnNwcmludGYodGhpcy5jb25zdGFudHMuaHRtbC5pY29uLCBvLmljb25zUHJlZml4LCBvLmljb25zLnNlYXJjaCkgOiAnJyxcbiAgICAgICAgby5zaG93QnV0dG9uVGV4dCA/IG8uZm9ybWF0U2VhcmNoKCkgOiAnJ1xuICAgICAgKVxuICAgICAgY29uc3Qgc2hvd1NlYXJjaENsZWFyQnV0dG9uID0gVXRpbHMuc3ByaW50Zih0aGlzLmNvbnN0YW50cy5odG1sLnNlYXJjaENsZWFyQnV0dG9uLFxuICAgICAgICB0aGlzLmNvbnN0YW50cy5idXR0b25zQ2xhc3MsXG4gICAgICAgIG8uZm9ybWF0Q2xlYXJTZWFyY2goKSxcbiAgICAgICAgby5zaG93QnV0dG9uSWNvbnMgPyBVdGlscy5zcHJpbnRmKHRoaXMuY29uc3RhbnRzLmh0bWwuaWNvbiwgby5pY29uc1ByZWZpeCwgby5pY29ucy5jbGVhclNlYXJjaCkgOiAnJyxcbiAgICAgICAgby5zaG93QnV0dG9uVGV4dCA/IG8uZm9ybWF0Q2xlYXJTZWFyY2goKSA6ICcnXG4gICAgICApXG4gICAgICBjb25zdCBzZWFyY2hJbnB1dEh0bWwgPSBgPGlucHV0IGNsYXNzPVwiJHt0aGlzLmNvbnN0YW50cy5jbGFzc2VzLmlucHV0fSR7VXRpbHMuc3ByaW50ZignIGlucHV0LSVzJywgby5pY29uU2l6ZSl9IHNlYXJjaC1pbnB1dFwiIHR5cGU9XCJ0ZXh0XCIgcGxhY2Vob2xkZXI9XCIke28uZm9ybWF0U2VhcmNoKCl9XCI+YFxuICAgICAgbGV0IHNlYXJjaElucHV0RmluYWxIdG1sID0gc2VhcmNoSW5wdXRIdG1sXG5cbiAgICAgIGlmIChvLnNob3dTZWFyY2hCdXR0b24gfHwgby5zaG93U2VhcmNoQ2xlYXJCdXR0b24pIHtcbiAgICAgICAgY29uc3QgYnV0dG9uc0h0bWwgPSAoby5zaG93U2VhcmNoQnV0dG9uID8gc2hvd1NlYXJjaEJ1dHRvbiA6ICcnKSArXG4gICAgICAgICAgKG8uc2hvd1NlYXJjaENsZWFyQnV0dG9uID8gc2hvd1NlYXJjaENsZWFyQnV0dG9uIDogJycpXG5cbiAgICAgICAgc2VhcmNoSW5wdXRGaW5hbEh0bWwgPSBvLnNlYXJjaCA/IFV0aWxzLnNwcmludGYodGhpcy5jb25zdGFudHMuaHRtbC5pbnB1dEdyb3VwLFxuICAgICAgICAgIHNlYXJjaElucHV0SHRtbCwgYnV0dG9uc0h0bWwpIDogYnV0dG9uc0h0bWxcbiAgICAgIH1cblxuICAgICAgaHRtbC5wdXNoKFV0aWxzLnNwcmludGYoYFxuICAgICAgICA8ZGl2IGNsYXNzPVwiJHt0aGlzLmNvbnN0YW50cy5jbGFzc2VzLnB1bGx9LSR7by5zZWFyY2hBbGlnbn0gc2VhcmNoICR7dGhpcy5jb25zdGFudHMuY2xhc3Nlcy5pbnB1dEdyb3VwfVwiPlxuICAgICAgICAgICVzXG4gICAgICAgIDwvZGl2PlxuICAgICAgYCwgc2VhcmNoSW5wdXRGaW5hbEh0bWwpKVxuXG4gICAgICB0aGlzLiR0b29sYmFyLmFwcGVuZChodG1sLmpvaW4oJycpKVxuICAgICAgY29uc3QgJHNlYXJjaElucHV0ID0gdGhpcy4kdG9vbGJhci5maW5kKCcuc2VhcmNoIGlucHV0JylcbiAgICAgICRzZWFyY2ggPSBvLnNob3dTZWFyY2hCdXR0b24gPyB0aGlzLiR0b29sYmFyLmZpbmQoJy5zZWFyY2ggYnV0dG9uW25hbWU9c2VhcmNoXScpIDogJHNlYXJjaElucHV0XG5cbiAgICAgIGNvbnN0IGV2ZW50VHJpZ2dlcnMgPSBvLnNob3dTZWFyY2hCdXR0b24gPyAnY2xpY2snIDpcbiAgICAgICAgKFV0aWxzLmlzSUVCcm93c2VyKCkgPyAnbW91c2V1cCcgOiAna2V5dXAgZHJvcCBibHVyJylcblxuICAgICAgJHNlYXJjaC5vZmYoZXZlbnRUcmlnZ2Vycykub24oZXZlbnRUcmlnZ2VycywgZXZlbnQgPT4ge1xuICAgICAgICBpZiAoby5zZWFyY2hPbkVudGVyS2V5ICYmIGV2ZW50LmtleUNvZGUgIT09IDEzKSB7XG4gICAgICAgICAgcmV0dXJuXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoWzM3LCAzOCwgMzksIDQwXS5pbmNsdWRlcyhldmVudC5rZXlDb2RlKSkge1xuICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG5cbiAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCkgLy8gZG9lc24ndCBtYXR0ZXIgaWYgaXQncyAwXG4gICAgICAgIHRpbWVvdXRJZCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHRoaXMub25TZWFyY2goby5zaG93U2VhcmNoQnV0dG9uID8ge2N1cnJlbnRUYXJnZXQ6ICRzZWFyY2hJbnB1dH0gOiBldmVudClcbiAgICAgICAgfSwgby5zZWFyY2hUaW1lT3V0KVxuICAgICAgfSlcblxuICAgICAgaWYgKG8uc2hvd1NlYXJjaENsZWFyQnV0dG9uKSB7XG4gICAgICAgIHRoaXMuJHRvb2xiYXIuZmluZCgnLnNlYXJjaCBidXR0b25bbmFtZT1jbGVhclNlYXJjaF0nKS5jbGljaygoKSA9PiB7XG4gICAgICAgICAgdGhpcy5yZXNldFNlYXJjaCgpXG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgb25TZWFyY2ggKHtjdXJyZW50VGFyZ2V0LCBmaXJlZEJ5SW5pdFNlYXJjaFRleHR9ID0ge30sIG92ZXJ3cml0ZVNlYXJjaFRleHQgPSB0cnVlKSB7XG4gICAgaWYgKGN1cnJlbnRUYXJnZXQgIT09IHVuZGVmaW5lZCAmJiAkKGN1cnJlbnRUYXJnZXQpLmxlbmd0aCAmJiBvdmVyd3JpdGVTZWFyY2hUZXh0KSB7XG4gICAgICBjb25zdCB0ZXh0ID0gJChjdXJyZW50VGFyZ2V0KS52YWwoKS50cmltKClcblxuICAgICAgaWYgKHRoaXMub3B0aW9ucy50cmltT25TZWFyY2ggJiYgJChjdXJyZW50VGFyZ2V0KS52YWwoKSAhPT0gdGV4dCkge1xuICAgICAgICAkKGN1cnJlbnRUYXJnZXQpLnZhbCh0ZXh0KVxuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5zZWFyY2hUZXh0ID09PSB0ZXh0KSB7XG4gICAgICAgIHJldHVyblxuICAgICAgfVxuXG4gICAgICBpZiAoJChjdXJyZW50VGFyZ2V0KS5oYXNDbGFzcygnc2VhcmNoLWlucHV0JykpIHtcbiAgICAgICAgdGhpcy5zZWFyY2hUZXh0ID0gdGV4dFxuICAgICAgICB0aGlzLm9wdGlvbnMuc2VhcmNoVGV4dCA9IHRleHRcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoIWZpcmVkQnlJbml0U2VhcmNoVGV4dCkge1xuICAgICAgdGhpcy5vcHRpb25zLnBhZ2VOdW1iZXIgPSAxXG4gICAgfVxuICAgIHRoaXMuaW5pdFNlYXJjaCgpXG4gICAgaWYgKGZpcmVkQnlJbml0U2VhcmNoVGV4dCkge1xuICAgICAgaWYgKHRoaXMub3B0aW9ucy5zaWRlUGFnaW5hdGlvbiA9PT0gJ2NsaWVudCcpIHtcbiAgICAgICAgdGhpcy51cGRhdGVQYWdpbmF0aW9uKClcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy51cGRhdGVQYWdpbmF0aW9uKClcbiAgICB9XG4gICAgdGhpcy50cmlnZ2VyKCdzZWFyY2gnLCB0aGlzLnNlYXJjaFRleHQpXG4gIH1cblxuICBpbml0U2VhcmNoICgpIHtcbiAgICB0aGlzLmZpbHRlck9wdGlvbnMgPSB0aGlzLmZpbHRlck9wdGlvbnMgfHwgdGhpcy5vcHRpb25zLmZpbHRlck9wdGlvbnNcbiAgICBpZiAodGhpcy5vcHRpb25zLnNpZGVQYWdpbmF0aW9uICE9PSAnc2VydmVyJykge1xuICAgICAgaWYgKHRoaXMub3B0aW9ucy5jdXN0b21TZWFyY2gpIHtcbiAgICAgICAgdGhpcy5kYXRhID0gVXRpbHMuY2FsY3VsYXRlT2JqZWN0VmFsdWUodGhpcy5vcHRpb25zLCB0aGlzLm9wdGlvbnMuY3VzdG9tU2VhcmNoLFxuICAgICAgICAgIFt0aGlzLm9wdGlvbnMuZGF0YSwgdGhpcy5zZWFyY2hUZXh0LCB0aGlzLmZpbHRlckNvbHVtbnNdKVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cblxuICAgICAgY29uc3QgcyA9IHRoaXMuc2VhcmNoVGV4dCAmJiAodGhpcy5vcHRpb25zLmVzY2FwZVxuICAgICAgICA/IFV0aWxzLmVzY2FwZUhUTUwodGhpcy5zZWFyY2hUZXh0KSA6IHRoaXMuc2VhcmNoVGV4dCkudG9Mb3dlckNhc2UoKVxuICAgICAgY29uc3QgZiA9IFV0aWxzLmlzRW1wdHlPYmplY3QodGhpcy5maWx0ZXJDb2x1bW5zKSA/IG51bGwgOiB0aGlzLmZpbHRlckNvbHVtbnNcblxuICAgICAgLy8gQ2hlY2sgZmlsdGVyXG4gICAgICBpZiAodHlwZW9mIHRoaXMuZmlsdGVyT3B0aW9ucy5maWx0ZXJBbGdvcml0aG0gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgdGhpcy5kYXRhID0gdGhpcy5vcHRpb25zLmRhdGEuZmlsdGVyKChpdGVtLCBpKSA9PiB0aGlzLmZpbHRlck9wdGlvbnMuZmlsdGVyQWxnb3JpdGhtLmFwcGx5KG51bGwsIFtpdGVtLCBmXSkpXG4gICAgICB9IGVsc2UgaWYgKHR5cGVvZiB0aGlzLmZpbHRlck9wdGlvbnMuZmlsdGVyQWxnb3JpdGhtID09PSAnc3RyaW5nJykge1xuICAgICAgICB0aGlzLmRhdGEgPSBmID8gdGhpcy5vcHRpb25zLmRhdGEuZmlsdGVyKChpdGVtLCBpKSA9PiB7XG4gICAgICAgICAgY29uc3QgZmlsdGVyQWxnb3JpdGhtID0gdGhpcy5maWx0ZXJPcHRpb25zLmZpbHRlckFsZ29yaXRobVxuICAgICAgICAgIGlmIChmaWx0ZXJBbGdvcml0aG0gPT09ICdhbmQnKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiBmKSB7XG4gICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAoQXJyYXkuaXNBcnJheShmW2tleV0pICYmXG4gICAgICAgICAgICAgICAgICAhZltrZXldLmluY2x1ZGVzKGl0ZW1ba2V5XSkpIHx8XG4gICAgICAgICAgICAgICAgKCFBcnJheS5pc0FycmF5KGZba2V5XSkgJiZcbiAgICAgICAgICAgICAgICAgIGl0ZW1ba2V5XSAhPT0gZltrZXldKVxuICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSBpZiAoZmlsdGVyQWxnb3JpdGhtID09PSAnb3InKSB7XG4gICAgICAgICAgICBsZXQgbWF0Y2ggPSBmYWxzZVxuICAgICAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gZikge1xuICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgKEFycmF5LmlzQXJyYXkoZltrZXldKSAmJlxuICAgICAgICAgICAgICAgICAgZltrZXldLmluY2x1ZGVzKGl0ZW1ba2V5XSkpIHx8XG4gICAgICAgICAgICAgICAgKCFBcnJheS5pc0FycmF5KGZba2V5XSkgJiZcbiAgICAgICAgICAgICAgICAgIGl0ZW1ba2V5XSA9PT0gZltrZXldKVxuICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICBtYXRjaCA9IHRydWVcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gbWF0Y2hcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgICB9KSA6IHRoaXMub3B0aW9ucy5kYXRhXG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHZpc2libGVGaWVsZHMgPSB0aGlzLmdldFZpc2libGVGaWVsZHMoKVxuICAgICAgdGhpcy5kYXRhID0gcyA/IHRoaXMuZGF0YS5maWx0ZXIoKGl0ZW0sIGkpID0+IHtcbiAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCB0aGlzLmhlYWRlci5maWVsZHMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICBpZiAoIXRoaXMuaGVhZGVyLnNlYXJjaGFibGVzW2pdIHx8ICh0aGlzLm9wdGlvbnMudmlzaWJsZVNlYXJjaCAmJiB2aXNpYmxlRmllbGRzLmluZGV4T2YodGhpcy5oZWFkZXIuZmllbGRzW2pdKSA9PT0gLTEpKSB7XG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnN0IGtleSA9IFV0aWxzLmlzTnVtZXJpYyh0aGlzLmhlYWRlci5maWVsZHNbal0pID8gcGFyc2VJbnQodGhpcy5oZWFkZXIuZmllbGRzW2pdLCAxMCkgOiB0aGlzLmhlYWRlci5maWVsZHNbal1cbiAgICAgICAgICBjb25zdCBjb2x1bW4gPSB0aGlzLmNvbHVtbnNbdGhpcy5maWVsZHNDb2x1bW5zSW5kZXhba2V5XV1cbiAgICAgICAgICBsZXQgdmFsdWVcblxuICAgICAgICAgIGlmICh0eXBlb2Yga2V5ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgdmFsdWUgPSBpdGVtXG4gICAgICAgICAgICBjb25zdCBwcm9wcyA9IGtleS5zcGxpdCgnLicpXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgIGlmICh2YWx1ZVtwcm9wc1tpXV0gIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IHZhbHVlW3Byb3BzW2ldXVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHZhbHVlID0gaXRlbVtrZXldXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLy8gRml4ICMxNDI6IHJlc3BlY3Qgc2VhcmNoRm9ybWF0dGVyIGJvb2xlYW5cbiAgICAgICAgICBpZiAoY29sdW1uICYmIGNvbHVtbi5zZWFyY2hGb3JtYXR0ZXIpIHtcbiAgICAgICAgICAgIHZhbHVlID0gVXRpbHMuY2FsY3VsYXRlT2JqZWN0VmFsdWUoY29sdW1uLFxuICAgICAgICAgICAgICB0aGlzLmhlYWRlci5mb3JtYXR0ZXJzW2pdLCBbdmFsdWUsIGl0ZW0sIGksIGNvbHVtbi5maWVsZF0sIHZhbHVlKVxuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnIHx8IHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMuc3RyaWN0U2VhcmNoKSB7XG4gICAgICAgICAgICAgIGlmICgoYCR7dmFsdWV9YCkudG9Mb3dlckNhc2UoKSA9PT0gcykge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGNvbnN0IGxhcmdlclNtYWxsZXJFcXVhbHNSZWdleCA9IC8oPzooPD18PT58PTx8Pj18Pnw8KSg/OlxccyspPyhcXGQrKT98KFxcZCspPyhcXHMrKT8oPD18PT58PTx8Pj18Pnw8KSkvZ21cbiAgICAgICAgICAgICAgY29uc3QgbWF0Y2hlcyA9IGxhcmdlclNtYWxsZXJFcXVhbHNSZWdleC5leGVjKHMpXG4gICAgICAgICAgICAgIGxldCBjb21wYXJpc29uQ2hlY2sgPSBmYWxzZVxuXG4gICAgICAgICAgICAgIGlmIChtYXRjaGVzKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgb3BlcmF0b3IgPSBtYXRjaGVzWzFdIHx8IGAke21hdGNoZXNbNV19bGBcbiAgICAgICAgICAgICAgICBjb25zdCBjb21wYXJpc29uVmFsdWUgPSBtYXRjaGVzWzJdIHx8IG1hdGNoZXNbM11cbiAgICAgICAgICAgICAgICBjb25zdCBpbnQgPSBwYXJzZUludCh2YWx1ZSwgMTApXG4gICAgICAgICAgICAgICAgY29uc3QgY29tcGFyaXNvbkludCA9IHBhcnNlSW50KGNvbXBhcmlzb25WYWx1ZSwgMTApXG5cbiAgICAgICAgICAgICAgICBzd2l0Y2ggKG9wZXJhdG9yKSB7XG4gICAgICAgICAgICAgICAgICBjYXNlICc+JzpcbiAgICAgICAgICAgICAgICAgIGNhc2UgJzxsJzpcbiAgICAgICAgICAgICAgICAgICAgY29tcGFyaXNvbkNoZWNrID0gaW50ID4gY29tcGFyaXNvbkludFxuICAgICAgICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgICAgICAgY2FzZSAnPCc6XG4gICAgICAgICAgICAgICAgICBjYXNlICc+bCc6XG4gICAgICAgICAgICAgICAgICAgIGNvbXBhcmlzb25DaGVjayA9IGludCA8IGNvbXBhcmlzb25JbnRcbiAgICAgICAgICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgICAgICAgICAgIGNhc2UgJzw9JzpcbiAgICAgICAgICAgICAgICAgIGNhc2UgJz08JzpcbiAgICAgICAgICAgICAgICAgIGNhc2UgJz49bCc6XG4gICAgICAgICAgICAgICAgICBjYXNlICc9PmwnOlxuICAgICAgICAgICAgICAgICAgICBjb21wYXJpc29uQ2hlY2sgPSBpbnQgPD0gY29tcGFyaXNvbkludFxuICAgICAgICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgICAgICAgY2FzZSAnPj0nOlxuICAgICAgICAgICAgICAgICAgY2FzZSAnPT4nOlxuICAgICAgICAgICAgICAgICAgY2FzZSAnPD1sJzpcbiAgICAgICAgICAgICAgICAgIGNhc2UgJz08bCc6XG4gICAgICAgICAgICAgICAgICAgIGNvbXBhcmlzb25DaGVjayA9IGludCA+PSBjb21wYXJpc29uSW50XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmIChjb21wYXJpc29uQ2hlY2sgfHwgKGAke3ZhbHVlfWApLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMocykpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgfSkgOiB0aGlzLmRhdGFcbiAgICB9XG4gIH1cblxuICBpbml0UGFnaW5hdGlvbiAoKSB7XG4gICAgY29uc3QgbyA9IHRoaXMub3B0aW9uc1xuICAgIGlmICghby5wYWdpbmF0aW9uKSB7XG4gICAgICB0aGlzLiRwYWdpbmF0aW9uLmhpZGUoKVxuICAgICAgcmV0dXJuXG4gICAgfVxuICAgIHRoaXMuJHBhZ2luYXRpb24uc2hvdygpXG5cbiAgICBjb25zdCBodG1sID0gW11cbiAgICBsZXQgJGFsbFNlbGVjdGVkID0gZmFsc2VcbiAgICBsZXQgaVxuICAgIGxldCBmcm9tXG4gICAgbGV0IHRvXG4gICAgbGV0ICRwYWdlTGlzdFxuICAgIGxldCAkcHJlXG4gICAgbGV0ICRuZXh0XG4gICAgbGV0ICRudW1iZXJcbiAgICBjb25zdCBkYXRhID0gdGhpcy5nZXREYXRhKHtpbmNsdWRlSGlkZGVuUm93czogZmFsc2V9KVxuICAgIGxldCBwYWdlTGlzdCA9IG8ucGFnZUxpc3RcblxuICAgIGlmIChvLnNpZGVQYWdpbmF0aW9uICE9PSAnc2VydmVyJykge1xuICAgICAgby50b3RhbFJvd3MgPSBkYXRhLmxlbmd0aFxuICAgIH1cblxuICAgIHRoaXMudG90YWxQYWdlcyA9IDBcbiAgICBpZiAoby50b3RhbFJvd3MpIHtcbiAgICAgIGlmIChvLnBhZ2VTaXplID09PSBvLmZvcm1hdEFsbFJvd3MoKSkge1xuICAgICAgICBvLnBhZ2VTaXplID0gby50b3RhbFJvd3NcbiAgICAgICAgJGFsbFNlbGVjdGVkID0gdHJ1ZVxuICAgICAgfSBlbHNlIGlmIChvLnBhZ2VTaXplID09PSBvLnRvdGFsUm93cykge1xuICAgICAgICAvLyBGaXggIzY2NyBUYWJsZSB3aXRoIHBhZ2luYXRpb24sXG4gICAgICAgIC8vIG11bHRpcGxlIHBhZ2VzIGFuZCBhIHNlYXJjaCB0aGlzIG1hdGNoZXMgdG8gb25lIHBhZ2UgdGhyb3dzIGV4Y2VwdGlvblxuICAgICAgICBjb25zdCBwYWdlTHN0ID0gdHlwZW9mIG8ucGFnZUxpc3QgPT09ICdzdHJpbmcnXG4gICAgICAgICAgPyBvLnBhZ2VMaXN0LnJlcGxhY2UoJ1snLCAnJykucmVwbGFjZSgnXScsICcnKVxuICAgICAgICAgICAgLnJlcGxhY2UoLyAvZywgJycpLnRvTG93ZXJDYXNlKCkuc3BsaXQoJywnKSA6IG8ucGFnZUxpc3RcbiAgICAgICAgaWYgKHBhZ2VMc3QuaW5jbHVkZXMoby5mb3JtYXRBbGxSb3dzKCkudG9Mb3dlckNhc2UoKSkpIHtcbiAgICAgICAgICAkYWxsU2VsZWN0ZWQgPSB0cnVlXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdGhpcy50b3RhbFBhZ2VzID0gfn4oKG8udG90YWxSb3dzIC0gMSkgLyBvLnBhZ2VTaXplKSArIDFcblxuICAgICAgby50b3RhbFBhZ2VzID0gdGhpcy50b3RhbFBhZ2VzXG4gICAgfVxuICAgIGlmICh0aGlzLnRvdGFsUGFnZXMgPiAwICYmIG8ucGFnZU51bWJlciA+IHRoaXMudG90YWxQYWdlcykge1xuICAgICAgby5wYWdlTnVtYmVyID0gdGhpcy50b3RhbFBhZ2VzXG4gICAgfVxuXG4gICAgdGhpcy5wYWdlRnJvbSA9IChvLnBhZ2VOdW1iZXIgLSAxKSAqIG8ucGFnZVNpemUgKyAxXG4gICAgdGhpcy5wYWdlVG8gPSBvLnBhZ2VOdW1iZXIgKiBvLnBhZ2VTaXplXG4gICAgaWYgKHRoaXMucGFnZVRvID4gby50b3RhbFJvd3MpIHtcbiAgICAgIHRoaXMucGFnZVRvID0gby50b3RhbFJvd3NcbiAgICB9XG5cbiAgICBpZiAodGhpcy5vcHRpb25zLnBhZ2luYXRpb24gJiYgdGhpcy5vcHRpb25zLnNpZGVQYWdpbmF0aW9uICE9PSAnc2VydmVyJykge1xuICAgICAgdGhpcy5vcHRpb25zLnRvdGFsTm90RmlsdGVyZWQgPSB0aGlzLm9wdGlvbnMuZGF0YS5sZW5ndGhcbiAgICB9XG5cbiAgICBpZiAoIXRoaXMub3B0aW9ucy5zaG93RXh0ZW5kZWRQYWdpbmF0aW9uKSB7XG4gICAgICB0aGlzLm9wdGlvbnMudG90YWxOb3RGaWx0ZXJlZCA9IHVuZGVmaW5lZFxuICAgIH1cblxuICAgIGNvbnN0IHBhZ2luYXRpb25JbmZvID0gby5vbmx5SW5mb1BhZ2luYXRpb24gP1xuICAgICAgby5mb3JtYXREZXRhaWxQYWdpbmF0aW9uKG8udG90YWxSb3dzKSA6XG4gICAgICBvLmZvcm1hdFNob3dpbmdSb3dzKHRoaXMucGFnZUZyb20sIHRoaXMucGFnZVRvLCBvLnRvdGFsUm93cywgby50b3RhbE5vdEZpbHRlcmVkKVxuXG4gICAgaHRtbC5wdXNoKGA8ZGl2IGNsYXNzPVwiJHt0aGlzLmNvbnN0YW50cy5jbGFzc2VzLnB1bGx9LSR7by5wYWdpbmF0aW9uRGV0YWlsSEFsaWdufSBwYWdpbmF0aW9uLWRldGFpbFwiPlxuICAgICAgPHNwYW4gY2xhc3M9XCJwYWdpbmF0aW9uLWluZm9cIj5cbiAgICAgICR7cGFnaW5hdGlvbkluZm99XG4gICAgICA8L3NwYW4+YClcblxuICAgIGlmICghby5vbmx5SW5mb1BhZ2luYXRpb24pIHtcbiAgICAgIGh0bWwucHVzaCgnPHNwYW4gY2xhc3M9XCJwYWdlLWxpc3RcIj4nKVxuXG4gICAgICBjb25zdCBwYWdlTnVtYmVyID0gW1xuICAgICAgICBgPHNwYW4gY2xhc3M9XCIke3RoaXMuY29uc3RhbnRzLmNsYXNzZXMucGFnaW5hdGlvbkRyb3Bkb3dufVwiPlxuICAgICAgICA8YnV0dG9uIGNsYXNzPVwiJHt0aGlzLmNvbnN0YW50cy5idXR0b25zQ2xhc3N9IGRyb3Bkb3duLXRvZ2dsZVwiIHR5cGU9XCJidXR0b25cIiBkYXRhLXRvZ2dsZT1cImRyb3Bkb3duXCI+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwicGFnZS1zaXplXCI+XG4gICAgICAgICR7JGFsbFNlbGVjdGVkID8gby5mb3JtYXRBbGxSb3dzKCkgOiBvLnBhZ2VTaXplfVxuICAgICAgICA8L3NwYW4+XG4gICAgICAgICR7dGhpcy5jb25zdGFudHMuaHRtbC5kcm9wZG93bkNhcmV0fVxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgJHt0aGlzLmNvbnN0YW50cy5odG1sLnBhZ2VEcm9wZG93blswXX1gXVxuXG4gICAgICBpZiAodHlwZW9mIG8ucGFnZUxpc3QgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGNvbnN0IGxpc3QgPSBvLnBhZ2VMaXN0LnJlcGxhY2UoJ1snLCAnJykucmVwbGFjZSgnXScsICcnKVxuICAgICAgICAgIC5yZXBsYWNlKC8gL2csICcnKS5zcGxpdCgnLCcpXG5cbiAgICAgICAgcGFnZUxpc3QgPSBbXVxuICAgICAgICBmb3IgKGNvbnN0IHZhbHVlIG9mIGxpc3QpIHtcbiAgICAgICAgICBwYWdlTGlzdC5wdXNoKFxuICAgICAgICAgICAgKHZhbHVlLnRvTG93ZXJDYXNlKCkgPT09IG8uZm9ybWF0QWxsUm93cygpLnRvTG93ZXJDYXNlKCkgfHxcbiAgICAgICAgICAgICAgWydhbGwnLCAndW5saW1pdGVkJ10uaW5jbHVkZXModmFsdWUudG9Mb3dlckNhc2UoKSkpXG4gICAgICAgICAgICAgID8gby5mb3JtYXRBbGxSb3dzKCkgOiArdmFsdWUpXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcGFnZUxpc3QuZm9yRWFjaCgocGFnZSwgaSkgPT4ge1xuICAgICAgICBpZiAoIW8uc21hcnREaXNwbGF5IHx8IGkgPT09IDAgfHwgcGFnZUxpc3RbaSAtIDFdIDwgby50b3RhbFJvd3MpIHtcbiAgICAgICAgICBsZXQgYWN0aXZlXG4gICAgICAgICAgaWYgKCRhbGxTZWxlY3RlZCkge1xuICAgICAgICAgICAgYWN0aXZlID0gcGFnZSA9PT0gby5mb3JtYXRBbGxSb3dzKCkgPyB0aGlzLmNvbnN0YW50cy5jbGFzc2VzLmRyb3Bkb3duQWN0aXZlIDogJydcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYWN0aXZlID0gcGFnZSA9PT0gby5wYWdlU2l6ZSA/IHRoaXMuY29uc3RhbnRzLmNsYXNzZXMuZHJvcGRvd25BY3RpdmUgOiAnJ1xuICAgICAgICAgIH1cbiAgICAgICAgICBwYWdlTnVtYmVyLnB1c2goVXRpbHMuc3ByaW50Zih0aGlzLmNvbnN0YW50cy5odG1sLnBhZ2VEcm9wZG93bkl0ZW0sIGFjdGl2ZSwgcGFnZSkpXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICBwYWdlTnVtYmVyLnB1c2goYCR7dGhpcy5jb25zdGFudHMuaHRtbC5wYWdlRHJvcGRvd25bMV19PC9zcGFuPmApXG5cbiAgICAgIGh0bWwucHVzaChvLmZvcm1hdFJlY29yZHNQZXJQYWdlKHBhZ2VOdW1iZXIuam9pbignJykpKVxuICAgICAgaHRtbC5wdXNoKCc8L3NwYW4+PC9kaXY+JylcblxuICAgICAgaHRtbC5wdXNoKGA8ZGl2IGNsYXNzPVwiJHt0aGlzLmNvbnN0YW50cy5jbGFzc2VzLnB1bGx9LSR7by5wYWdpbmF0aW9uSEFsaWdufSBwYWdpbmF0aW9uXCI+YCxcbiAgICAgICAgVXRpbHMuc3ByaW50Zih0aGlzLmNvbnN0YW50cy5odG1sLnBhZ2luYXRpb25bMF0sIFV0aWxzLnNwcmludGYoJyBwYWdpbmF0aW9uLSVzJywgby5pY29uU2l6ZSkpLFxuICAgICAgICBVdGlscy5zcHJpbnRmKHRoaXMuY29uc3RhbnRzLmh0bWwucGFnaW5hdGlvbkl0ZW0sICcgcGFnZS1wcmUnLCBvLmZvcm1hdFNSUGFnaW5hdGlvblByZVRleHQoKSwgby5wYWdpbmF0aW9uUHJlVGV4dCkpXG5cbiAgICAgIGlmICh0aGlzLnRvdGFsUGFnZXMgPCBvLnBhZ2luYXRpb25TdWNjZXNzaXZlbHlTaXplKSB7XG4gICAgICAgIGZyb20gPSAxXG4gICAgICAgIHRvID0gdGhpcy50b3RhbFBhZ2VzXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBmcm9tID0gby5wYWdlTnVtYmVyIC0gby5wYWdpbmF0aW9uUGFnZXNCeVNpZGVcbiAgICAgICAgdG8gPSBmcm9tICsgKG8ucGFnaW5hdGlvblBhZ2VzQnlTaWRlICogMilcbiAgICAgIH1cblxuICAgICAgaWYgKG8ucGFnZU51bWJlciA8IChvLnBhZ2luYXRpb25TdWNjZXNzaXZlbHlTaXplIC0gMSkpIHtcbiAgICAgICAgdG8gPSBvLnBhZ2luYXRpb25TdWNjZXNzaXZlbHlTaXplXG4gICAgICB9XG5cbiAgICAgIGlmIChvLnBhZ2luYXRpb25TdWNjZXNzaXZlbHlTaXplID4gdGhpcy50b3RhbFBhZ2VzIC0gZnJvbSkge1xuICAgICAgICBmcm9tID0gZnJvbSAtIChvLnBhZ2luYXRpb25TdWNjZXNzaXZlbHlTaXplIC0gKHRoaXMudG90YWxQYWdlcyAtIGZyb20pKSArIDFcbiAgICAgIH1cblxuICAgICAgaWYgKGZyb20gPCAxKSB7XG4gICAgICAgIGZyb20gPSAxXG4gICAgICB9XG5cbiAgICAgIGlmICh0byA+IHRoaXMudG90YWxQYWdlcykge1xuICAgICAgICB0byA9IHRoaXMudG90YWxQYWdlc1xuICAgICAgfVxuXG4gICAgICBjb25zdCBtaWRkbGVTaXplID0gTWF0aC5yb3VuZChvLnBhZ2luYXRpb25QYWdlc0J5U2lkZSAvIDIpXG4gICAgICBjb25zdCBwYWdlSXRlbSA9IChpLCBjbGFzc2VzID0gJycpID0+IFV0aWxzLnNwcmludGYodGhpcy5jb25zdGFudHMuaHRtbC5wYWdpbmF0aW9uSXRlbSxcbiAgICAgICAgY2xhc3NlcyArIChpID09PSBvLnBhZ2VOdW1iZXIgPyBgICR7dGhpcy5jb25zdGFudHMuY2xhc3Nlcy5wYWdpbmF0aW9uQWN0aXZlfWAgOiAnJyksIG8uZm9ybWF0U1JQYWdpbmF0aW9uUGFnZVRleHQoaSksIGkpXG5cbiAgICAgIGlmIChmcm9tID4gMSkge1xuICAgICAgICBsZXQgbWF4ID0gby5wYWdpbmF0aW9uUGFnZXNCeVNpZGVcbiAgICAgICAgaWYgKG1heCA+PSBmcm9tKSBtYXggPSBmcm9tIC0gMVxuICAgICAgICBmb3IgKGkgPSAxOyBpIDw9IG1heDsgaSsrKSB7XG4gICAgICAgICAgaHRtbC5wdXNoKHBhZ2VJdGVtKGkpKVxuICAgICAgICB9XG4gICAgICAgIGlmICgoZnJvbSAtIDEpID09PSBtYXggKyAxKSB7XG4gICAgICAgICAgaSA9IGZyb20gLSAxXG4gICAgICAgICAgaHRtbC5wdXNoKHBhZ2VJdGVtKGkpKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmICgoZnJvbSAtIDEpID4gbWF4KSB7XG4gICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgIChmcm9tIC0gby5wYWdpbmF0aW9uUGFnZXNCeVNpZGUgKiAyKSA+IG8ucGFnaW5hdGlvblBhZ2VzQnlTaWRlICYmXG4gICAgICAgICAgICAgIG8ucGFnaW5hdGlvblVzZUludGVybWVkaWF0ZVxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgIGkgPSBNYXRoLnJvdW5kKCgoZnJvbSAtIG1pZGRsZVNpemUpIC8gMikgKyBtaWRkbGVTaXplKVxuICAgICAgICAgICAgICBodG1sLnB1c2gocGFnZUl0ZW0oaSwgJyBwYWdlLWludGVybWVkaWF0ZScpKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgaHRtbC5wdXNoKFV0aWxzLnNwcmludGYodGhpcy5jb25zdGFudHMuaHRtbC5wYWdpbmF0aW9uSXRlbSxcbiAgICAgICAgICAgICAgICAnIHBhZ2UtZmlyc3Qtc2VwYXJhdG9yIGRpc2FibGVkJywgJycsICcuLi4nKSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgZm9yIChpID0gZnJvbTsgaSA8PSB0bzsgaSsrKSB7XG4gICAgICAgIGh0bWwucHVzaChwYWdlSXRlbShpKSlcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMudG90YWxQYWdlcyA+IHRvKSB7XG4gICAgICAgIGxldCBtaW4gPSB0aGlzLnRvdGFsUGFnZXMgLSAoby5wYWdpbmF0aW9uUGFnZXNCeVNpZGUgLSAxKVxuICAgICAgICBpZiAodG8gPj0gbWluKSBtaW4gPSB0byArIDFcbiAgICAgICAgaWYgKCh0byArIDEpID09PSBtaW4gLSAxKSB7XG4gICAgICAgICAgaSA9IHRvICsgMVxuICAgICAgICAgIGh0bWwucHVzaChwYWdlSXRlbShpKSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAobWluID4gKHRvICsgMSkpIHtcbiAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgKHRoaXMudG90YWxQYWdlcyAtIHRvKSA+IG8ucGFnaW5hdGlvblBhZ2VzQnlTaWRlICogMiAmJlxuICAgICAgICAgICAgICBvLnBhZ2luYXRpb25Vc2VJbnRlcm1lZGlhdGVcbiAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICBpID0gTWF0aC5yb3VuZCgoKHRoaXMudG90YWxQYWdlcyAtIG1pZGRsZVNpemUgLSB0bykgLyAyKSArIHRvKVxuICAgICAgICAgICAgICBodG1sLnB1c2gocGFnZUl0ZW0oaSwgJyBwYWdlLWludGVybWVkaWF0ZScpKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgaHRtbC5wdXNoKFV0aWxzLnNwcmludGYodGhpcy5jb25zdGFudHMuaHRtbC5wYWdpbmF0aW9uSXRlbSxcbiAgICAgICAgICAgICAgICAnIHBhZ2UtbGFzdC1zZXBhcmF0b3IgZGlzYWJsZWQnLCAnJywgJy4uLicpKVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAoaSA9IG1pbjsgaSA8PSB0aGlzLnRvdGFsUGFnZXM7IGkrKykge1xuICAgICAgICAgIGh0bWwucHVzaChwYWdlSXRlbShpKSlcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBodG1sLnB1c2goVXRpbHMuc3ByaW50Zih0aGlzLmNvbnN0YW50cy5odG1sLnBhZ2luYXRpb25JdGVtLCAnIHBhZ2UtbmV4dCcsIG8uZm9ybWF0U1JQYWdpbmF0aW9uTmV4dFRleHQoKSwgby5wYWdpbmF0aW9uTmV4dFRleHQpKVxuICAgICAgaHRtbC5wdXNoKHRoaXMuY29uc3RhbnRzLmh0bWwucGFnaW5hdGlvblsxXSwgJzwvZGl2PicpXG4gICAgfVxuICAgIHRoaXMuJHBhZ2luYXRpb24uaHRtbChodG1sLmpvaW4oJycpKVxuXG4gICAgY29uc3QgZHJvcHVwQ2xhc3MgPSBbJ2JvdHRvbScsICdib3RoJ10uaW5jbHVkZXMoby5wYWdpbmF0aW9uVkFsaWduKSA/XG4gICAgICBgICR7dGhpcy5jb25zdGFudHMuY2xhc3Nlcy5kcm9wdXB9YCA6ICcnXG4gICAgdGhpcy4kcGFnaW5hdGlvbi5sYXN0KCkuZmluZCgnLnBhZ2UtbGlzdCA+IHNwYW4nKS5hZGRDbGFzcyhkcm9wdXBDbGFzcylcblxuICAgIGlmICghby5vbmx5SW5mb1BhZ2luYXRpb24pIHtcbiAgICAgICRwYWdlTGlzdCA9IHRoaXMuJHBhZ2luYXRpb24uZmluZCgnLnBhZ2UtbGlzdCBhJylcbiAgICAgICRwcmUgPSB0aGlzLiRwYWdpbmF0aW9uLmZpbmQoJy5wYWdlLXByZScpXG4gICAgICAkbmV4dCA9IHRoaXMuJHBhZ2luYXRpb24uZmluZCgnLnBhZ2UtbmV4dCcpXG4gICAgICAkbnVtYmVyID0gdGhpcy4kcGFnaW5hdGlvbi5maW5kKCcucGFnZS1pdGVtJykubm90KCcucGFnZS1uZXh0LCAucGFnZS1wcmUsIC5wYWdlLWxhc3Qtc2VwYXJhdG9yLCAucGFnZS1maXJzdC1zZXBhcmF0b3InKVxuXG4gICAgICBpZiAodGhpcy50b3RhbFBhZ2VzIDw9IDEpIHtcbiAgICAgICAgdGhpcy4kcGFnaW5hdGlvbi5maW5kKCdkaXYucGFnaW5hdGlvbicpLmhpZGUoKVxuICAgICAgfVxuXG4gICAgICBpZiAoby5zbWFydERpc3BsYXkpIHtcbiAgICAgICAgaWYgKHBhZ2VMaXN0Lmxlbmd0aCA8IDIgfHwgby50b3RhbFJvd3MgPD0gcGFnZUxpc3RbMF0pIHtcbiAgICAgICAgICB0aGlzLiRwYWdpbmF0aW9uLmZpbmQoJ3NwYW4ucGFnZS1saXN0JykuaGlkZSgpXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gd2hlbiBkYXRhIGlzIGVtcHR5LCBoaWRlIHRoZSBwYWdpbmF0aW9uXG4gICAgICB0aGlzLiRwYWdpbmF0aW9uW3RoaXMuZ2V0RGF0YSgpLmxlbmd0aCA/ICdzaG93JyA6ICdoaWRlJ10oKVxuXG4gICAgICBpZiAoIW8ucGFnaW5hdGlvbkxvb3ApIHtcbiAgICAgICAgaWYgKG8ucGFnZU51bWJlciA9PT0gMSkge1xuICAgICAgICAgICRwcmUuYWRkQ2xhc3MoJ2Rpc2FibGVkJylcbiAgICAgICAgfVxuICAgICAgICBpZiAoby5wYWdlTnVtYmVyID09PSB0aGlzLnRvdGFsUGFnZXMpIHtcbiAgICAgICAgICAkbmV4dC5hZGRDbGFzcygnZGlzYWJsZWQnKVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmICgkYWxsU2VsZWN0ZWQpIHtcbiAgICAgICAgby5wYWdlU2l6ZSA9IG8uZm9ybWF0QWxsUm93cygpXG4gICAgICB9XG4gICAgICAvLyByZW1vdmVkIHRoZSBldmVudHMgZm9yIGxhc3QgYW5kIGZpcnN0LCBvblBhZ2VOdW1iZXIgZXhlY3V0ZWRzIHRoZSBzYW1lIGxvZ2ljXG4gICAgICAkcGFnZUxpc3Qub2ZmKCdjbGljaycpLm9uKCdjbGljaycsIGUgPT4gdGhpcy5vblBhZ2VMaXN0Q2hhbmdlKGUpKVxuICAgICAgJHByZS5vZmYoJ2NsaWNrJykub24oJ2NsaWNrJywgZSA9PiB0aGlzLm9uUGFnZVByZShlKSlcbiAgICAgICRuZXh0Lm9mZignY2xpY2snKS5vbignY2xpY2snLCBlID0+IHRoaXMub25QYWdlTmV4dChlKSlcbiAgICAgICRudW1iZXIub2ZmKCdjbGljaycpLm9uKCdjbGljaycsIGUgPT4gdGhpcy5vblBhZ2VOdW1iZXIoZSkpXG4gICAgfVxuICB9XG5cbiAgdXBkYXRlUGFnaW5hdGlvbiAoZXZlbnQpIHtcbiAgICAvLyBGaXggIzE3MTogSUUgZGlzYWJsZWQgYnV0dG9uIGNhbiBiZSBjbGlja2VkIGJ1Zy5cbiAgICBpZiAoZXZlbnQgJiYgJChldmVudC5jdXJyZW50VGFyZ2V0KS5oYXNDbGFzcygnZGlzYWJsZWQnKSkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgaWYgKCF0aGlzLm9wdGlvbnMubWFpbnRhaW5NZXRhRGF0YSkge1xuICAgICAgdGhpcy5yZXNldFJvd3MoKVxuICAgIH1cblxuICAgIHRoaXMuaW5pdFBhZ2luYXRpb24oKVxuICAgIGlmICh0aGlzLm9wdGlvbnMuc2lkZVBhZ2luYXRpb24gPT09ICdzZXJ2ZXInKSB7XG4gICAgICB0aGlzLmluaXRTZXJ2ZXIoKVxuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmluaXRCb2R5KClcbiAgICB9XG5cbiAgICB0aGlzLnRyaWdnZXIoJ3BhZ2UtY2hhbmdlJywgdGhpcy5vcHRpb25zLnBhZ2VOdW1iZXIsIHRoaXMub3B0aW9ucy5wYWdlU2l6ZSlcbiAgfVxuXG4gIG9uUGFnZUxpc3RDaGFuZ2UgKGV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKVxuICAgIGNvbnN0ICR0aGlzID0gJChldmVudC5jdXJyZW50VGFyZ2V0KVxuXG4gICAgJHRoaXMucGFyZW50KCkuYWRkQ2xhc3ModGhpcy5jb25zdGFudHMuY2xhc3Nlcy5kcm9wZG93bkFjdGl2ZSlcbiAgICAgIC5zaWJsaW5ncygpLnJlbW92ZUNsYXNzKHRoaXMuY29uc3RhbnRzLmNsYXNzZXMuZHJvcGRvd25BY3RpdmUpXG4gICAgdGhpcy5vcHRpb25zLnBhZ2VTaXplID0gJHRoaXMudGV4dCgpLnRvVXBwZXJDYXNlKCkgPT09IHRoaXMub3B0aW9ucy5mb3JtYXRBbGxSb3dzKCkudG9VcHBlckNhc2UoKVxuICAgICAgPyB0aGlzLm9wdGlvbnMuZm9ybWF0QWxsUm93cygpIDogKyR0aGlzLnRleHQoKVxuICAgIHRoaXMuJHRvb2xiYXIuZmluZCgnLnBhZ2Utc2l6ZScpLnRleHQodGhpcy5vcHRpb25zLnBhZ2VTaXplKVxuXG4gICAgdGhpcy51cGRhdGVQYWdpbmF0aW9uKGV2ZW50KVxuICAgIHJldHVybiBmYWxzZVxuICB9XG5cbiAgb25QYWdlUHJlIChldmVudCkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KClcbiAgICBpZiAoKHRoaXMub3B0aW9ucy5wYWdlTnVtYmVyIC0gMSkgPT09IDApIHtcbiAgICAgIHRoaXMub3B0aW9ucy5wYWdlTnVtYmVyID0gdGhpcy5vcHRpb25zLnRvdGFsUGFnZXNcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5vcHRpb25zLnBhZ2VOdW1iZXItLVxuICAgIH1cbiAgICB0aGlzLnVwZGF0ZVBhZ2luYXRpb24oZXZlbnQpXG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICBvblBhZ2VOZXh0IChldmVudCkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KClcbiAgICBpZiAoKHRoaXMub3B0aW9ucy5wYWdlTnVtYmVyICsgMSkgPiB0aGlzLm9wdGlvbnMudG90YWxQYWdlcykge1xuICAgICAgdGhpcy5vcHRpb25zLnBhZ2VOdW1iZXIgPSAxXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMub3B0aW9ucy5wYWdlTnVtYmVyKytcbiAgICB9XG4gICAgdGhpcy51cGRhdGVQYWdpbmF0aW9uKGV2ZW50KVxuICAgIHJldHVybiBmYWxzZVxuICB9XG5cbiAgb25QYWdlTnVtYmVyIChldmVudCkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KClcbiAgICBpZiAodGhpcy5vcHRpb25zLnBhZ2VOdW1iZXIgPT09ICskKGV2ZW50LmN1cnJlbnRUYXJnZXQpLnRleHQoKSkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuICAgIHRoaXMub3B0aW9ucy5wYWdlTnVtYmVyID0gKyQoZXZlbnQuY3VycmVudFRhcmdldCkudGV4dCgpXG4gICAgdGhpcy51cGRhdGVQYWdpbmF0aW9uKGV2ZW50KVxuICAgIHJldHVybiBmYWxzZVxuICB9XG5cbiAgaW5pdFJvdyAoaXRlbSwgaSwgZGF0YSwgdHJGcmFnbWVudHMpIHtcbiAgICBjb25zdCBodG1sID0gW11cbiAgICBsZXQgc3R5bGUgPSB7fVxuICAgIGNvbnN0IGNzc2VzID0gW11cbiAgICBsZXQgZGF0YV8gPSAnJ1xuICAgIGxldCBhdHRyaWJ1dGVzID0ge31cbiAgICBjb25zdCBodG1sQXR0cmlidXRlcyA9IFtdXG5cbiAgICBpZiAoVXRpbHMuZmluZEluZGV4KHRoaXMuaGlkZGVuUm93cywgaXRlbSkgPiAtMSkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgc3R5bGUgPSBVdGlscy5jYWxjdWxhdGVPYmplY3RWYWx1ZSh0aGlzLm9wdGlvbnMsIHRoaXMub3B0aW9ucy5yb3dTdHlsZSwgW2l0ZW0sIGldLCBzdHlsZSlcblxuICAgIGlmIChzdHlsZSAmJiBzdHlsZS5jc3MpIHtcbiAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHN0eWxlLmNzcykpIHtcbiAgICAgICAgY3NzZXMucHVzaChgJHtrZXl9OiAke3ZhbHVlfWApXG4gICAgICB9XG4gICAgfVxuXG4gICAgYXR0cmlidXRlcyA9IFV0aWxzLmNhbGN1bGF0ZU9iamVjdFZhbHVlKHRoaXMub3B0aW9ucyxcbiAgICAgIHRoaXMub3B0aW9ucy5yb3dBdHRyaWJ1dGVzLCBbaXRlbSwgaV0sIGF0dHJpYnV0ZXMpXG5cbiAgICBpZiAoYXR0cmlidXRlcykge1xuICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMoYXR0cmlidXRlcykpIHtcbiAgICAgICAgaHRtbEF0dHJpYnV0ZXMucHVzaChgJHtrZXl9PVwiJHtVdGlscy5lc2NhcGVIVE1MKHZhbHVlKX1cImApXG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGl0ZW0uX2RhdGEgJiYgIVV0aWxzLmlzRW1wdHlPYmplY3QoaXRlbS5fZGF0YSkpIHtcbiAgICAgIGZvciAoY29uc3QgW2ssIHZdIG9mIE9iamVjdC5lbnRyaWVzKGl0ZW0uX2RhdGEpKSB7XG4gICAgICAgIC8vIGlnbm9yZSBkYXRhLWluZGV4XG4gICAgICAgIGlmIChrID09PSAnaW5kZXgnKSB7XG4gICAgICAgICAgcmV0dXJuXG4gICAgICAgIH1cbiAgICAgICAgZGF0YV8gKz0gYCBkYXRhLSR7a309JyR7dHlwZW9mIHYgPT09ICdvYmplY3QnID8gSlNPTi5zdHJpbmdpZnkodikgOiB2fSdgXG4gICAgICB9XG4gICAgfVxuXG4gICAgaHRtbC5wdXNoKCc8dHInLFxuICAgICAgVXRpbHMuc3ByaW50ZignICVzJywgaHRtbEF0dHJpYnV0ZXMubGVuZ3RoID8gaHRtbEF0dHJpYnV0ZXMuam9pbignICcpIDogdW5kZWZpbmVkKSxcbiAgICAgIFV0aWxzLnNwcmludGYoJyBpZD1cIiVzXCInLCBBcnJheS5pc0FycmF5KGl0ZW0pID8gdW5kZWZpbmVkIDogaXRlbS5faWQpLFxuICAgICAgVXRpbHMuc3ByaW50ZignIGNsYXNzPVwiJXNcIicsIHN0eWxlLmNsYXNzZXMgfHwgKEFycmF5LmlzQXJyYXkoaXRlbSkgPyB1bmRlZmluZWQgOiBpdGVtLl9jbGFzcykpLFxuICAgICAgYCBkYXRhLWluZGV4PVwiJHtpfVwiYCxcbiAgICAgIFV0aWxzLnNwcmludGYoJyBkYXRhLXVuaXF1ZWlkPVwiJXNcIicsIFV0aWxzLmdldEl0ZW1GaWVsZChpdGVtLCB0aGlzLm9wdGlvbnMudW5pcXVlSWQsIGZhbHNlKSksXG4gICAgICBVdGlscy5zcHJpbnRmKCcgZGF0YS1oYXMtZGV0YWlsLXZpZXc9XCIlc1wiJywgKCF0aGlzLm9wdGlvbnMuY2FyZFZpZXcgJiYgdGhpcy5vcHRpb25zLmRldGFpbFZpZXcgJiYgVXRpbHMuY2FsY3VsYXRlT2JqZWN0VmFsdWUobnVsbCwgdGhpcy5vcHRpb25zLmRldGFpbEZpbHRlciwgW2ksIGl0ZW1dKSkgPyAndHJ1ZScgOiB1bmRlZmluZWQpLFxuICAgICAgVXRpbHMuc3ByaW50ZignJXMnLCBkYXRhXyksXG4gICAgICAnPidcbiAgICApXG5cbiAgICBpZiAodGhpcy5vcHRpb25zLmNhcmRWaWV3KSB7XG4gICAgICBodG1sLnB1c2goYDx0ZCBjb2xzcGFuPVwiJHt0aGlzLmhlYWRlci5maWVsZHMubGVuZ3RofVwiPjxkaXYgY2xhc3M9XCJjYXJkLXZpZXdzXCI+YClcbiAgICB9XG5cbiAgICBpZiAoIXRoaXMub3B0aW9ucy5jYXJkVmlldyAmJiB0aGlzLm9wdGlvbnMuZGV0YWlsVmlldyAmJiB0aGlzLm9wdGlvbnMuZGV0YWlsVmlld0ljb24pIHtcbiAgICAgIGh0bWwucHVzaCgnPHRkPicpXG5cbiAgICAgIGlmIChVdGlscy5jYWxjdWxhdGVPYmplY3RWYWx1ZShudWxsLCB0aGlzLm9wdGlvbnMuZGV0YWlsRmlsdGVyLCBbaSwgaXRlbV0pKSB7XG4gICAgICAgIGh0bWwucHVzaChgXG4gICAgICAgICAgPGEgY2xhc3M9XCJkZXRhaWwtaWNvblwiIGhyZWY9XCIjXCI+XG4gICAgICAgICAgJHtVdGlscy5zcHJpbnRmKHRoaXMuY29uc3RhbnRzLmh0bWwuaWNvbiwgdGhpcy5vcHRpb25zLmljb25zUHJlZml4LCB0aGlzLm9wdGlvbnMuaWNvbnMuZGV0YWlsT3Blbil9XG4gICAgICAgICAgPC9hPlxuICAgICAgICBgKVxuICAgICAgfVxuXG4gICAgICBodG1sLnB1c2goJzwvdGQ+JylcbiAgICB9XG5cbiAgICB0aGlzLmhlYWRlci5maWVsZHMuZm9yRWFjaCgoZmllbGQsIGopID0+IHtcbiAgICAgIGxldCB0ZXh0ID0gJydcbiAgICAgIGxldCB2YWx1ZV8gPSBVdGlscy5nZXRJdGVtRmllbGQoaXRlbSwgZmllbGQsIHRoaXMub3B0aW9ucy5lc2NhcGUpXG4gICAgICBsZXQgdmFsdWUgPSAnJ1xuICAgICAgbGV0IHR5cGUgPSAnJ1xuICAgICAgbGV0IGNlbGxTdHlsZSA9IHt9XG4gICAgICBsZXQgaWRfID0gJydcbiAgICAgIGxldCBjbGFzc18gPSB0aGlzLmhlYWRlci5jbGFzc2VzW2pdXG4gICAgICBsZXQgc3R5bGVfID0gJydcbiAgICAgIGxldCBkYXRhXyA9ICcnXG4gICAgICBsZXQgcm93c3Bhbl8gPSAnJ1xuICAgICAgbGV0IGNvbHNwYW5fID0gJydcbiAgICAgIGxldCB0aXRsZV8gPSAnJ1xuICAgICAgY29uc3QgY29sdW1uID0gdGhpcy5jb2x1bW5zW2pdXG5cbiAgICAgIGlmICh0aGlzLmZyb21IdG1sICYmIHR5cGVvZiB2YWx1ZV8gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGlmICgoIWNvbHVtbi5jaGVja2JveCkgJiYgKCFjb2x1bW4ucmFkaW8pKSB7XG4gICAgICAgICAgcmV0dXJuXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKCFjb2x1bW4udmlzaWJsZSkge1xuICAgICAgICByZXR1cm5cbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMub3B0aW9ucy5jYXJkVmlldyAmJiAoIWNvbHVtbi5jYXJkVmlzaWJsZSkpIHtcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG5cbiAgICAgIGlmIChjb2x1bW4uZXNjYXBlKSB7XG4gICAgICAgIHZhbHVlXyA9IFV0aWxzLmVzY2FwZUhUTUwodmFsdWVfKVxuICAgICAgfVxuXG4gICAgICBpZiAoY3NzZXMuY29uY2F0KFt0aGlzLmhlYWRlci5zdHlsZXNbal1dKS5sZW5ndGgpIHtcbiAgICAgICAgc3R5bGVfID0gYCBzdHlsZT1cIiR7Y3NzZXMuY29uY2F0KFt0aGlzLmhlYWRlci5zdHlsZXNbal1dKS5qb2luKCc7ICcpfVwiYFxuICAgICAgfVxuICAgICAgLy8gaGFuZGxlIHRkJ3MgaWQgYW5kIGNsYXNzXG4gICAgICBpZiAoaXRlbVtgXyR7ZmllbGR9X2lkYF0pIHtcbiAgICAgICAgaWRfID0gVXRpbHMuc3ByaW50ZignIGlkPVwiJXNcIicsIGl0ZW1bYF8ke2ZpZWxkfV9pZGBdKVxuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bYF8ke2ZpZWxkfV9jbGFzc2BdKSB7XG4gICAgICAgIGNsYXNzXyA9IFV0aWxzLnNwcmludGYoJyBjbGFzcz1cIiVzXCInLCBpdGVtW2BfJHtmaWVsZH1fY2xhc3NgXSlcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtW2BfJHtmaWVsZH1fcm93c3BhbmBdKSB7XG4gICAgICAgIHJvd3NwYW5fID0gVXRpbHMuc3ByaW50ZignIHJvd3NwYW49XCIlc1wiJywgaXRlbVtgXyR7ZmllbGR9X3Jvd3NwYW5gXSlcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtW2BfJHtmaWVsZH1fY29sc3BhbmBdKSB7XG4gICAgICAgIGNvbHNwYW5fID0gVXRpbHMuc3ByaW50ZignIGNvbHNwYW49XCIlc1wiJywgaXRlbVtgXyR7ZmllbGR9X2NvbHNwYW5gXSlcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtW2BfJHtmaWVsZH1fdGl0bGVgXSkge1xuICAgICAgICB0aXRsZV8gPSBVdGlscy5zcHJpbnRmKCcgdGl0bGU9XCIlc1wiJywgaXRlbVtgXyR7ZmllbGR9X3RpdGxlYF0pXG4gICAgICB9XG4gICAgICBjZWxsU3R5bGUgPSBVdGlscy5jYWxjdWxhdGVPYmplY3RWYWx1ZSh0aGlzLmhlYWRlcixcbiAgICAgICAgdGhpcy5oZWFkZXIuY2VsbFN0eWxlc1tqXSwgW3ZhbHVlXywgaXRlbSwgaSwgZmllbGRdLCBjZWxsU3R5bGUpXG4gICAgICBpZiAoY2VsbFN0eWxlLmNsYXNzZXMpIHtcbiAgICAgICAgY2xhc3NfID0gYCBjbGFzcz1cIiR7Y2VsbFN0eWxlLmNsYXNzZXN9XCJgXG4gICAgICB9XG4gICAgICBpZiAoY2VsbFN0eWxlLmNzcykge1xuICAgICAgICBjb25zdCBjc3Nlc18gPSBbXVxuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhjZWxsU3R5bGUuY3NzKSkge1xuICAgICAgICAgIGNzc2VzXy5wdXNoKGAke2tleX06ICR7dmFsdWV9YClcbiAgICAgICAgfVxuICAgICAgICBzdHlsZV8gPSBgIHN0eWxlPVwiJHtjc3Nlc18uY29uY2F0KHRoaXMuaGVhZGVyLnN0eWxlc1tqXSkuam9pbignOyAnKX1cImBcbiAgICAgIH1cblxuICAgICAgdmFsdWUgPSBVdGlscy5jYWxjdWxhdGVPYmplY3RWYWx1ZShjb2x1bW4sXG4gICAgICAgIHRoaXMuaGVhZGVyLmZvcm1hdHRlcnNbal0sIFt2YWx1ZV8sIGl0ZW0sIGksIGZpZWxkXSwgdmFsdWVfKVxuXG4gICAgICBpZiAoaXRlbVtgXyR7ZmllbGR9X2RhdGFgXSAmJiAhVXRpbHMuaXNFbXB0eU9iamVjdChpdGVtW2BfJHtmaWVsZH1fZGF0YWBdKSkge1xuICAgICAgICBmb3IgKGNvbnN0IFtrLCB2XSBvZiBPYmplY3QuZW50cmllcyhpdGVtW2BfJHtmaWVsZH1fZGF0YWBdKSkge1xuICAgICAgICAgIC8vIGlnbm9yZSBkYXRhLWluZGV4XG4gICAgICAgICAgaWYgKGsgPT09ICdpbmRleCcpIHtcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgIH1cbiAgICAgICAgICBkYXRhXyArPSBgIGRhdGEtJHtrfT1cIiR7dn1cImBcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoY29sdW1uLmNoZWNrYm94IHx8IGNvbHVtbi5yYWRpbykge1xuICAgICAgICB0eXBlID0gY29sdW1uLmNoZWNrYm94ID8gJ2NoZWNrYm94JyA6IHR5cGVcbiAgICAgICAgdHlwZSA9IGNvbHVtbi5yYWRpbyA/ICdyYWRpbycgOiB0eXBlXG5cbiAgICAgICAgY29uc3QgYyA9IGNvbHVtblsnY2xhc3MnXSB8fCAnJ1xuICAgICAgICBjb25zdCBpc0NoZWNrZWQgPSAodmFsdWUgPT09IHRydWUgfHwgdmFsdWVfIHx8ICh2YWx1ZSAmJiB2YWx1ZS5jaGVja2VkKSkgJiYgdmFsdWUgIT09IGZhbHNlXG4gICAgICAgIGNvbnN0IGlzRGlzYWJsZWQgPSAhY29sdW1uLmNoZWNrYm94RW5hYmxlZCB8fCAodmFsdWUgJiYgdmFsdWUuZGlzYWJsZWQpXG5cbiAgICAgICAgdGV4dCA9IFtcbiAgICAgICAgICB0aGlzLm9wdGlvbnMuY2FyZFZpZXdcbiAgICAgICAgICAgID8gYDxkaXYgY2xhc3M9XCJjYXJkLXZpZXcgJHtjfVwiPmBcbiAgICAgICAgICAgIDogYDx0ZCBjbGFzcz1cImJzLWNoZWNrYm94ICR7Y31cIiR7Y2xhc3NffSR7c3R5bGVffT5gLFxuICAgICAgICAgIGA8bGFiZWw+XG4gICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgIGRhdGEtaW5kZXg9XCIke2l9XCJcbiAgICAgICAgICAgIG5hbWU9XCIke3RoaXMub3B0aW9ucy5zZWxlY3RJdGVtTmFtZX1cIlxuICAgICAgICAgICAgdHlwZT1cIiR7dHlwZX1cIlxuICAgICAgICAgICAgJHtVdGlscy5zcHJpbnRmKCd2YWx1ZT1cIiVzXCInLCBpdGVtW3RoaXMub3B0aW9ucy5pZEZpZWxkXSl9XG4gICAgICAgICAgICAke1V0aWxzLnNwcmludGYoJ2NoZWNrZWQ9XCIlc1wiJywgaXNDaGVja2VkID8gJ2NoZWNrZWQnIDogdW5kZWZpbmVkKX1cbiAgICAgICAgICAgICR7VXRpbHMuc3ByaW50ZignZGlzYWJsZWQ9XCIlc1wiJywgaXNEaXNhYmxlZCA/ICdkaXNhYmxlZCcgOiB1bmRlZmluZWQpfSAvPlxuICAgICAgICAgICAgPHNwYW4+PC9zcGFuPlxuICAgICAgICAgICAgPC9sYWJlbD5gLFxuICAgICAgICAgIHRoaXMuaGVhZGVyLmZvcm1hdHRlcnNbal0gJiYgdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyA/IHZhbHVlIDogJycsXG4gICAgICAgICAgdGhpcy5vcHRpb25zLmNhcmRWaWV3ID8gJzwvZGl2PicgOiAnPC90ZD4nXG4gICAgICAgIF0uam9pbignJylcblxuICAgICAgICBpdGVtW3RoaXMuaGVhZGVyLnN0YXRlRmllbGRdID0gdmFsdWUgPT09IHRydWUgfHwgKCEhdmFsdWVfIHx8ICh2YWx1ZSAmJiB2YWx1ZS5jaGVja2VkKSlcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhbHVlID0gdHlwZW9mIHZhbHVlID09PSAndW5kZWZpbmVkJyB8fCB2YWx1ZSA9PT0gbnVsbFxuICAgICAgICAgID8gdGhpcy5vcHRpb25zLnVuZGVmaW5lZFRleHQgOiB2YWx1ZVxuXG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMuY2FyZFZpZXcpIHtcbiAgICAgICAgICBjb25zdCBjYXJkVGl0bGUgPSB0aGlzLm9wdGlvbnMuc2hvd0hlYWRlclxuICAgICAgICAgICAgPyBgPHNwYW4gY2xhc3M9XCJjYXJkLXZpZXctdGl0bGVcIiR7c3R5bGVffT4ke1V0aWxzLmdldEZpZWxkVGl0bGUodGhpcy5jb2x1bW5zLCBmaWVsZCl9PC9zcGFuPmAgOiAnJ1xuXG4gICAgICAgICAgdGV4dCA9IGA8ZGl2IGNsYXNzPVwiY2FyZC12aWV3XCI+JHtjYXJkVGl0bGV9PHNwYW4gY2xhc3M9XCJjYXJkLXZpZXctdmFsdWVcIj4ke3ZhbHVlfTwvc3Bhbj48L2Rpdj5gXG5cbiAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLnNtYXJ0RGlzcGxheSAmJiB2YWx1ZSA9PT0gJycpIHtcbiAgICAgICAgICAgIHRleHQgPSAnPGRpdiBjbGFzcz1cImNhcmQtdmlld1wiPjwvZGl2PidcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGV4dCA9IGA8dGQke2lkX30ke2NsYXNzX30ke3N0eWxlX30ke2RhdGFffSR7cm93c3Bhbl99JHtjb2xzcGFuX30ke3RpdGxlX30+JHt2YWx1ZX08L3RkPmBcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBodG1sLnB1c2godGV4dClcbiAgICB9KVxuXG4gICAgaWYgKHRoaXMub3B0aW9ucy5jYXJkVmlldykge1xuICAgICAgaHRtbC5wdXNoKCc8L2Rpdj48L3RkPicpXG4gICAgfVxuICAgIGh0bWwucHVzaCgnPC90cj4nKVxuXG4gICAgcmV0dXJuIGh0bWwuam9pbignJylcbiAgfVxuXG4gIGluaXRCb2R5IChmaXhlZFNjcm9sbCkge1xuICAgIGNvbnN0IGRhdGEgPSB0aGlzLmdldERhdGEoKVxuXG4gICAgdGhpcy50cmlnZ2VyKCdwcmUtYm9keScsIGRhdGEpXG5cbiAgICB0aGlzLiRib2R5ID0gdGhpcy4kZWwuZmluZCgnPnRib2R5JylcbiAgICBpZiAoIXRoaXMuJGJvZHkubGVuZ3RoKSB7XG4gICAgICB0aGlzLiRib2R5ID0gJCgnPHRib2R5PjwvdGJvZHk+JykuYXBwZW5kVG8odGhpcy4kZWwpXG4gICAgfVxuXG4gICAgLy8gRml4ICMzODkgQm9vdHN0cmFwLXRhYmxlLWZsYXRKU09OIGlzIG5vdCB3b3JraW5nXG4gICAgaWYgKCF0aGlzLm9wdGlvbnMucGFnaW5hdGlvbiB8fCB0aGlzLm9wdGlvbnMuc2lkZVBhZ2luYXRpb24gPT09ICdzZXJ2ZXInKSB7XG4gICAgICB0aGlzLnBhZ2VGcm9tID0gMVxuICAgICAgdGhpcy5wYWdlVG8gPSBkYXRhLmxlbmd0aFxuICAgIH1cblxuICAgIGNvbnN0IHJvd3MgPSBbXVxuICAgIGNvbnN0IHRyRnJhZ21lbnRzID0gJChkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCkpXG4gICAgbGV0IGhhc1RyID0gZmFsc2VcblxuICAgIGZvciAobGV0IGkgPSB0aGlzLnBhZ2VGcm9tIC0gMTsgaSA8IHRoaXMucGFnZVRvOyBpKyspIHtcbiAgICAgIGNvbnN0IGl0ZW0gPSBkYXRhW2ldXG4gICAgICBjb25zdCB0ciA9IHRoaXMuaW5pdFJvdyhpdGVtLCBpLCBkYXRhLCB0ckZyYWdtZW50cylcbiAgICAgIGhhc1RyID0gaGFzVHIgfHwgISF0clxuICAgICAgaWYgKHRyICYmIHR5cGVvZiB0ciA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgaWYgKCF0aGlzLm9wdGlvbnMudmlydHVhbFNjcm9sbCkge1xuICAgICAgICAgIHRyRnJhZ21lbnRzLmFwcGVuZCh0cilcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByb3dzLnB1c2godHIpXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBzaG93IG5vIHJlY29yZHNcbiAgICBpZiAoIWhhc1RyKSB7XG4gICAgICB0aGlzLiRib2R5Lmh0bWwoYDx0ciBjbGFzcz1cIm5vLXJlY29yZHMtZm91bmRcIj4ke1V0aWxzLnNwcmludGYoJzx0ZCBjb2xzcGFuPVwiJXNcIj4lczwvdGQ+JyxcbiAgICAgICAgdGhpcy4kaGVhZGVyLmZpbmQoJ3RoJykubGVuZ3RoLFxuICAgICAgICB0aGlzLm9wdGlvbnMuZm9ybWF0Tm9NYXRjaGVzKCkpfTwvdHI+YClcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKCF0aGlzLm9wdGlvbnMudmlydHVhbFNjcm9sbCkge1xuICAgICAgICB0aGlzLiRib2R5Lmh0bWwodHJGcmFnbWVudHMpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAodGhpcy52aXJ0dWFsU2Nyb2xsKSB7XG4gICAgICAgICAgdGhpcy52aXJ0dWFsU2Nyb2xsLmRlc3Ryb3koKVxuICAgICAgICB9XG4gICAgICAgIHRoaXMudmlydHVhbFNjcm9sbCA9IG5ldyBWaXJ0dWFsU2Nyb2xsKHtcbiAgICAgICAgICByb3dzLFxuICAgICAgICAgIHNjcm9sbEVsOiB0aGlzLiR0YWJsZUJvZHlbMF0sXG4gICAgICAgICAgY29udGVudEVsOiB0aGlzLiRib2R5WzBdLFxuICAgICAgICAgIGl0ZW1IZWlnaHQ6IHRoaXMub3B0aW9ucy52aXJ0dWFsU2Nyb2xsSXRlbUhlaWdodCxcbiAgICAgICAgICBjYWxsYmFjazogKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5maXRIZWFkZXIoKVxuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoIWZpeGVkU2Nyb2xsKSB7XG4gICAgICB0aGlzLnNjcm9sbFRvKDApXG4gICAgfVxuXG4gICAgLy8gY2xpY2sgdG8gc2VsZWN0IGJ5IGNvbHVtblxuICAgIHRoaXMuJGJvZHkuZmluZCgnPiB0cltkYXRhLWluZGV4XSA+IHRkJykub2ZmKCdjbGljayBkYmxjbGljaycpLm9uKCdjbGljayBkYmxjbGljaycsIGUgPT4ge1xuICAgICAgY29uc3QgJHRkID0gJChlLmN1cnJlbnRUYXJnZXQpXG4gICAgICBjb25zdCAkdHIgPSAkdGQucGFyZW50KClcbiAgICAgIGNvbnN0ICRjYXJkVmlld0FyciA9ICQoZS50YXJnZXQpLnBhcmVudHMoJy5jYXJkLXZpZXdzJykuY2hpbGRyZW4oKVxuICAgICAgY29uc3QgJGNhcmRWaWV3VGFyZ2V0ID0gJChlLnRhcmdldCkucGFyZW50cygnLmNhcmQtdmlldycpXG4gICAgICBjb25zdCByb3dJbmRleCA9ICR0ci5kYXRhKCdpbmRleCcpXG4gICAgICBjb25zdCBpdGVtID0gdGhpcy5kYXRhW3Jvd0luZGV4XVxuICAgICAgY29uc3QgaW5kZXggPSB0aGlzLm9wdGlvbnMuY2FyZFZpZXcgPyAkY2FyZFZpZXdBcnIuaW5kZXgoJGNhcmRWaWV3VGFyZ2V0KSA6ICR0ZFswXS5jZWxsSW5kZXhcbiAgICAgIGNvbnN0IGZpZWxkcyA9IHRoaXMuZ2V0VmlzaWJsZUZpZWxkcygpXG4gICAgICBjb25zdCBmaWVsZCA9IGZpZWxkc1t0aGlzLm9wdGlvbnMuZGV0YWlsVmlldyAmJiB0aGlzLmRldGFpbFZpZXdJY29uICYmICF0aGlzLm9wdGlvbnMuY2FyZFZpZXcgPyBpbmRleCAtIDEgOiBpbmRleF1cbiAgICAgIGNvbnN0IGNvbHVtbiA9IHRoaXMuY29sdW1uc1t0aGlzLmZpZWxkc0NvbHVtbnNJbmRleFtmaWVsZF1dXG4gICAgICBjb25zdCB2YWx1ZSA9IFV0aWxzLmdldEl0ZW1GaWVsZChpdGVtLCBmaWVsZCwgdGhpcy5vcHRpb25zLmVzY2FwZSlcblxuICAgICAgaWYgKCR0ZC5maW5kKCcuZGV0YWlsLWljb24nKS5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG5cbiAgICAgIHRoaXMudHJpZ2dlcihlLnR5cGUgPT09ICdjbGljaycgPyAnY2xpY2stY2VsbCcgOiAnZGJsLWNsaWNrLWNlbGwnLCBmaWVsZCwgdmFsdWUsIGl0ZW0sICR0ZClcbiAgICAgIHRoaXMudHJpZ2dlcihlLnR5cGUgPT09ICdjbGljaycgPyAnY2xpY2stcm93JyA6ICdkYmwtY2xpY2stcm93JywgaXRlbSwgJHRyLCBmaWVsZClcblxuICAgICAgLy8gaWYgY2xpY2sgdG8gc2VsZWN0IC0gdGhlbiB0cmlnZ2VyIHRoZSBjaGVja2JveC9yYWRpbyBjbGlja1xuICAgICAgaWYgKFxuICAgICAgICBlLnR5cGUgPT09ICdjbGljaycgJiZcbiAgICAgICAgdGhpcy5vcHRpb25zLmNsaWNrVG9TZWxlY3QgJiZcbiAgICAgICAgY29sdW1uLmNsaWNrVG9TZWxlY3QgJiZcbiAgICAgICAgIVV0aWxzLmNhbGN1bGF0ZU9iamVjdFZhbHVlKHRoaXMub3B0aW9ucywgdGhpcy5vcHRpb25zLmlnbm9yZUNsaWNrVG9TZWxlY3RPbiwgW2UudGFyZ2V0XSlcbiAgICAgICkge1xuICAgICAgICBjb25zdCAkc2VsZWN0SXRlbSA9ICR0ci5maW5kKFV0aWxzLnNwcmludGYoJ1tuYW1lPVwiJXNcIl0nLCB0aGlzLm9wdGlvbnMuc2VsZWN0SXRlbU5hbWUpKVxuICAgICAgICBpZiAoJHNlbGVjdEl0ZW0ubGVuZ3RoKSB7XG4gICAgICAgICAgJHNlbGVjdEl0ZW1bMF0uY2xpY2soKVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChlLnR5cGUgPT09ICdjbGljaycgJiYgdGhpcy5vcHRpb25zLmRldGFpbFZpZXdCeUNsaWNrKSB7XG4gICAgICAgIHRoaXMudG9nZ2xlRGV0YWlsVmlldyhyb3dJbmRleCwgdGhpcy5oZWFkZXIuZGV0YWlsRm9ybWF0dGVyc1t0aGlzLmZpZWxkc0NvbHVtbnNJbmRleFtmaWVsZF1dKVxuICAgICAgfVxuICAgIH0pLm9mZignbW91c2Vkb3duJykub24oJ21vdXNlZG93bicsIGUgPT4ge1xuICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2pxdWVyeS9qcXVlcnkvaXNzdWVzLzE3NDFcbiAgICAgIHRoaXMubXVsdGlwbGVTZWxlY3RSb3dDdHJsS2V5ID0gZS5jdHJsS2V5IHx8IGUubWV0YUtleVxuICAgICAgdGhpcy5tdWx0aXBsZVNlbGVjdFJvd1NoaWZ0S2V5ID0gZS5zaGlmdEtleVxuICAgIH0pXG5cbiAgICB0aGlzLiRib2R5LmZpbmQoJz4gdHJbZGF0YS1pbmRleF0gPiB0ZCA+IC5kZXRhaWwtaWNvbicpLm9mZignY2xpY2snKS5vbignY2xpY2snLCBlID0+IHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgICAgdGhpcy50b2dnbGVEZXRhaWxWaWV3KCQoZS5jdXJyZW50VGFyZ2V0KS5wYXJlbnQoKS5wYXJlbnQoKS5kYXRhKCdpbmRleCcpKVxuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfSlcblxuICAgIHRoaXMuJHNlbGVjdEl0ZW0gPSB0aGlzLiRib2R5LmZpbmQoVXRpbHMuc3ByaW50ZignW25hbWU9XCIlc1wiXScsIHRoaXMub3B0aW9ucy5zZWxlY3RJdGVtTmFtZSkpXG4gICAgdGhpcy4kc2VsZWN0SXRlbS5vZmYoJ2NsaWNrJykub24oJ2NsaWNrJywgZSA9PiB7XG4gICAgICBlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpXG5cbiAgICAgIGNvbnN0ICR0aGlzID0gJChlLmN1cnJlbnRUYXJnZXQpXG4gICAgICB0aGlzLl90b2dnbGVDaGVjaygkdGhpcy5wcm9wKCdjaGVja2VkJyksICR0aGlzLmRhdGEoJ2luZGV4JykpXG4gICAgfSlcblxuICAgIHRoaXMuaGVhZGVyLmV2ZW50cy5mb3JFYWNoKChfZXZlbnRzLCBpKSA9PiB7XG4gICAgICBsZXQgZXZlbnRzID0gX2V2ZW50c1xuICAgICAgaWYgKCFldmVudHMpIHtcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgICAvLyBmaXggYnVnLCBpZiBldmVudHMgaXMgZGVmaW5lZCB3aXRoIG5hbWVzcGFjZVxuICAgICAgaWYgKHR5cGVvZiBldmVudHMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGV2ZW50cyA9IFV0aWxzLmNhbGN1bGF0ZU9iamVjdFZhbHVlKG51bGwsIGV2ZW50cylcbiAgICAgIH1cblxuICAgICAgY29uc3QgZmllbGQgPSB0aGlzLmhlYWRlci5maWVsZHNbaV1cbiAgICAgIGxldCBmaWVsZEluZGV4ID0gdGhpcy5nZXRWaXNpYmxlRmllbGRzKCkuaW5kZXhPZihmaWVsZClcblxuICAgICAgaWYgKGZpZWxkSW5kZXggPT09IC0xKSB7XG4gICAgICAgIHJldHVyblxuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5vcHRpb25zLmRldGFpbFZpZXcgJiYgIXRoaXMub3B0aW9ucy5jYXJkVmlldykge1xuICAgICAgICBmaWVsZEluZGV4ICs9IDFcbiAgICAgIH1cblxuICAgICAgZm9yIChjb25zdCBrZXkgaW4gZXZlbnRzKSB7XG4gICAgICAgIGlmICghZXZlbnRzLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGV2ZW50ID0gZXZlbnRzW2tleV1cbiAgICAgICAgdGhpcy4kYm9keS5maW5kKCc+dHI6bm90KC5uby1yZWNvcmRzLWZvdW5kKScpLmVhY2goKGksIHRyKSA9PiB7XG4gICAgICAgICAgY29uc3QgJHRyID0gJCh0cilcbiAgICAgICAgICBjb25zdCAkdGQgPSAkdHIuZmluZCh0aGlzLm9wdGlvbnMuY2FyZFZpZXcgPyAnLmNhcmQtdmlld3M+LmNhcmQtdmlldycgOiAnPnRkJykuZXEoZmllbGRJbmRleClcbiAgICAgICAgICBjb25zdCBpbmRleCA9IGtleS5pbmRleE9mKCcgJylcbiAgICAgICAgICBjb25zdCBuYW1lID0ga2V5LnN1YnN0cmluZygwLCBpbmRleClcbiAgICAgICAgICBjb25zdCBlbCA9IGtleS5zdWJzdHJpbmcoaW5kZXggKyAxKVxuXG4gICAgICAgICAgJHRkLmZpbmQoZWwpLm9mZihuYW1lKS5vbihuYW1lLCBlID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gJHRyLmRhdGEoJ2luZGV4JylcbiAgICAgICAgICAgIGNvbnN0IHJvdyA9IHRoaXMuZGF0YVtpbmRleF1cbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gcm93W2ZpZWxkXVxuXG4gICAgICAgICAgICBldmVudC5hcHBseSh0aGlzLCBbZSwgdmFsdWUsIHJvdywgaW5kZXhdKVxuICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgfSlcblxuICAgIHRoaXMudXBkYXRlU2VsZWN0ZWQoKVxuICAgIHRoaXMuaW5pdEZvb3RlcigpXG4gICAgdGhpcy5yZXNldFZpZXcoKVxuXG4gICAgaWYgKHRoaXMub3B0aW9ucy5zaWRlUGFnaW5hdGlvbiAhPT0gJ3NlcnZlcicpIHtcbiAgICAgIHRoaXMub3B0aW9ucy50b3RhbFJvd3MgPSBkYXRhLmxlbmd0aFxuICAgIH1cblxuICAgIHRoaXMudHJpZ2dlcigncG9zdC1ib2R5JywgZGF0YSlcbiAgfVxuXG4gIGluaXRTZXJ2ZXIgKHNpbGVudCwgcXVlcnksIHVybCkge1xuICAgIGxldCBkYXRhID0ge31cbiAgICBjb25zdCBpbmRleCA9IHRoaXMuaGVhZGVyLmZpZWxkcy5pbmRleE9mKHRoaXMub3B0aW9ucy5zb3J0TmFtZSlcblxuICAgIGxldCBwYXJhbXMgPSB7XG4gICAgICBzZWFyY2hUZXh0OiB0aGlzLnNlYXJjaFRleHQsXG4gICAgICBzb3J0TmFtZTogdGhpcy5vcHRpb25zLnNvcnROYW1lLFxuICAgICAgc29ydE9yZGVyOiB0aGlzLm9wdGlvbnMuc29ydE9yZGVyXG4gICAgfVxuXG4gICAgaWYgKHRoaXMuaGVhZGVyLnNvcnROYW1lc1tpbmRleF0pIHtcbiAgICAgIHBhcmFtcy5zb3J0TmFtZSA9IHRoaXMuaGVhZGVyLnNvcnROYW1lc1tpbmRleF1cbiAgICB9XG5cbiAgICBpZiAodGhpcy5vcHRpb25zLnBhZ2luYXRpb24gJiYgdGhpcy5vcHRpb25zLnNpZGVQYWdpbmF0aW9uID09PSAnc2VydmVyJykge1xuICAgICAgcGFyYW1zLnBhZ2VTaXplID0gdGhpcy5vcHRpb25zLnBhZ2VTaXplID09PSB0aGlzLm9wdGlvbnMuZm9ybWF0QWxsUm93cygpXG4gICAgICAgID8gdGhpcy5vcHRpb25zLnRvdGFsUm93cyA6IHRoaXMub3B0aW9ucy5wYWdlU2l6ZVxuICAgICAgcGFyYW1zLnBhZ2VOdW1iZXIgPSB0aGlzLm9wdGlvbnMucGFnZU51bWJlclxuICAgIH1cblxuICAgIGlmICghKHVybCB8fCB0aGlzLm9wdGlvbnMudXJsKSAmJiAhdGhpcy5vcHRpb25zLmFqYXgpIHtcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGlmICh0aGlzLm9wdGlvbnMucXVlcnlQYXJhbXNUeXBlID09PSAnbGltaXQnKSB7XG4gICAgICBwYXJhbXMgPSB7XG4gICAgICAgIHNlYXJjaDogcGFyYW1zLnNlYXJjaFRleHQsXG4gICAgICAgIHNvcnQ6IHBhcmFtcy5zb3J0TmFtZSxcbiAgICAgICAgb3JkZXI6IHBhcmFtcy5zb3J0T3JkZXJcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMub3B0aW9ucy5wYWdpbmF0aW9uICYmIHRoaXMub3B0aW9ucy5zaWRlUGFnaW5hdGlvbiA9PT0gJ3NlcnZlcicpIHtcbiAgICAgICAgcGFyYW1zLm9mZnNldCA9IHRoaXMub3B0aW9ucy5wYWdlU2l6ZSA9PT0gdGhpcy5vcHRpb25zLmZvcm1hdEFsbFJvd3MoKVxuICAgICAgICAgID8gMCA6IHRoaXMub3B0aW9ucy5wYWdlU2l6ZSAqICh0aGlzLm9wdGlvbnMucGFnZU51bWJlciAtIDEpXG4gICAgICAgIHBhcmFtcy5saW1pdCA9IHRoaXMub3B0aW9ucy5wYWdlU2l6ZSA9PT0gdGhpcy5vcHRpb25zLmZvcm1hdEFsbFJvd3MoKVxuICAgICAgICAgID8gdGhpcy5vcHRpb25zLnRvdGFsUm93cyA6IHRoaXMub3B0aW9ucy5wYWdlU2l6ZVxuICAgICAgICBpZiAocGFyYW1zLmxpbWl0ID09PSAwKSB7XG4gICAgICAgICAgZGVsZXRlIHBhcmFtcy5saW1pdFxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKCEoVXRpbHMuaXNFbXB0eU9iamVjdCh0aGlzLmZpbHRlckNvbHVtbnNQYXJ0aWFsKSkpIHtcbiAgICAgIHBhcmFtcy5maWx0ZXIgPSBKU09OLnN0cmluZ2lmeSh0aGlzLmZpbHRlckNvbHVtbnNQYXJ0aWFsLCBudWxsKVxuICAgIH1cblxuICAgICQuZXh0ZW5kKHBhcmFtcywgcXVlcnkgfHwge30pXG5cbiAgICBkYXRhID0gVXRpbHMuY2FsY3VsYXRlT2JqZWN0VmFsdWUodGhpcy5vcHRpb25zLCB0aGlzLm9wdGlvbnMucXVlcnlQYXJhbXMsIFtwYXJhbXNdLCBkYXRhKVxuXG4gICAgLy8gZmFsc2UgdG8gc3RvcCByZXF1ZXN0XG4gICAgaWYgKGRhdGEgPT09IGZhbHNlKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBpZiAoIXNpbGVudCkge1xuICAgICAgdGhpcy5zaG93TG9hZGluZygpXG4gICAgfVxuICAgIGNvbnN0IHJlcXVlc3QgPSAkLmV4dGVuZCh7fSwgVXRpbHMuY2FsY3VsYXRlT2JqZWN0VmFsdWUobnVsbCwgdGhpcy5vcHRpb25zLmFqYXhPcHRpb25zKSwge1xuICAgICAgdHlwZTogdGhpcy5vcHRpb25zLm1ldGhvZCxcbiAgICAgIHVybDogdXJsIHx8IHRoaXMub3B0aW9ucy51cmwsXG4gICAgICBkYXRhOiB0aGlzLm9wdGlvbnMuY29udGVudFR5cGUgPT09ICdhcHBsaWNhdGlvbi9qc29uJyAmJiB0aGlzLm9wdGlvbnMubWV0aG9kID09PSAncG9zdCdcbiAgICAgICAgPyBKU09OLnN0cmluZ2lmeShkYXRhKSA6IGRhdGEsXG4gICAgICBjYWNoZTogdGhpcy5vcHRpb25zLmNhY2hlLFxuICAgICAgY29udGVudFR5cGU6IHRoaXMub3B0aW9ucy5jb250ZW50VHlwZSxcbiAgICAgIGRhdGFUeXBlOiB0aGlzLm9wdGlvbnMuZGF0YVR5cGUsXG4gICAgICBzdWNjZXNzOiBfcmVzID0+IHtcbiAgICAgICAgY29uc3QgcmVzID0gVXRpbHMuY2FsY3VsYXRlT2JqZWN0VmFsdWUodGhpcy5vcHRpb25zLFxuICAgICAgICAgIHRoaXMub3B0aW9ucy5yZXNwb25zZUhhbmRsZXIsIFtfcmVzXSwgX3JlcylcblxuICAgICAgICB0aGlzLmxvYWQocmVzKVxuICAgICAgICB0aGlzLnRyaWdnZXIoJ2xvYWQtc3VjY2VzcycsIHJlcylcbiAgICAgICAgaWYgKCFzaWxlbnQpIHtcbiAgICAgICAgICB0aGlzLmhpZGVMb2FkaW5nKClcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGVycm9yOiBqcVhIUiA9PiB7XG4gICAgICAgIGxldCBkYXRhID0gW11cbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5zaWRlUGFnaW5hdGlvbiA9PT0gJ3NlcnZlcicpIHtcbiAgICAgICAgICBkYXRhID0ge31cbiAgICAgICAgICBkYXRhW3RoaXMub3B0aW9ucy50b3RhbEZpZWxkXSA9IDBcbiAgICAgICAgICBkYXRhW3RoaXMub3B0aW9ucy5kYXRhRmllbGRdID0gW11cbiAgICAgICAgfVxuICAgICAgICB0aGlzLmxvYWQoZGF0YSlcbiAgICAgICAgdGhpcy50cmlnZ2VyKCdsb2FkLWVycm9yJywganFYSFIuc3RhdHVzLCBqcVhIUilcbiAgICAgICAgaWYgKCFzaWxlbnQpIHRoaXMuJHRhYmxlTG9hZGluZy5oaWRlKClcbiAgICAgIH1cbiAgICB9KVxuXG4gICAgaWYgKHRoaXMub3B0aW9ucy5hamF4KSB7XG4gICAgICBVdGlscy5jYWxjdWxhdGVPYmplY3RWYWx1ZSh0aGlzLCB0aGlzLm9wdGlvbnMuYWpheCwgW3JlcXVlc3RdLCBudWxsKVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAodGhpcy5feGhyICYmIHRoaXMuX3hoci5yZWFkeVN0YXRlICE9PSA0KSB7XG4gICAgICAgIHRoaXMuX3hoci5hYm9ydCgpXG4gICAgICB9XG4gICAgICB0aGlzLl94aHIgPSAkLmFqYXgocmVxdWVzdClcbiAgICB9XG5cbiAgICByZXR1cm4gZGF0YVxuICB9XG5cbiAgaW5pdFNlYXJjaFRleHQgKCkge1xuICAgIGlmICh0aGlzLm9wdGlvbnMuc2VhcmNoKSB7XG4gICAgICB0aGlzLnNlYXJjaFRleHQgPSAnJ1xuICAgICAgaWYgKHRoaXMub3B0aW9ucy5zZWFyY2hUZXh0ICE9PSAnJykge1xuICAgICAgICBjb25zdCAkc2VhcmNoID0gdGhpcy4kdG9vbGJhci5maW5kKCcuc2VhcmNoIGlucHV0JylcbiAgICAgICAgJHNlYXJjaC52YWwodGhpcy5vcHRpb25zLnNlYXJjaFRleHQpXG4gICAgICAgIHRoaXMub25TZWFyY2goe2N1cnJlbnRUYXJnZXQ6ICRzZWFyY2gsIGZpcmVkQnlJbml0U2VhcmNoVGV4dDogdHJ1ZX0pXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZ2V0Q2FyZXQgKCkge1xuICAgIHRoaXMuJGhlYWRlci5maW5kKCd0aCcpLmVhY2goKGksIHRoKSA9PiB7XG4gICAgICAkKHRoKS5maW5kKCcuc29ydGFibGUnKS5yZW1vdmVDbGFzcygnZGVzYyBhc2MnKVxuICAgICAgICAuYWRkQ2xhc3MoJCh0aCkuZGF0YSgnZmllbGQnKSA9PT0gdGhpcy5vcHRpb25zLnNvcnROYW1lXG4gICAgICAgICAgPyB0aGlzLm9wdGlvbnMuc29ydE9yZGVyIDogJ2JvdGgnKVxuICAgIH0pXG4gIH1cblxuICB1cGRhdGVTZWxlY3RlZCAoKSB7XG4gICAgY29uc3QgY2hlY2tBbGwgPSB0aGlzLiRzZWxlY3RJdGVtLmZpbHRlcignOmVuYWJsZWQnKS5sZW5ndGggJiZcbiAgICAgIHRoaXMuJHNlbGVjdEl0ZW0uZmlsdGVyKCc6ZW5hYmxlZCcpLmxlbmd0aCA9PT1cbiAgICAgIHRoaXMuJHNlbGVjdEl0ZW0uZmlsdGVyKCc6ZW5hYmxlZCcpLmZpbHRlcignOmNoZWNrZWQnKS5sZW5ndGhcblxuICAgIHRoaXMuJHNlbGVjdEFsbC5hZGQodGhpcy4kc2VsZWN0QWxsXykucHJvcCgnY2hlY2tlZCcsIGNoZWNrQWxsKVxuXG4gICAgdGhpcy4kc2VsZWN0SXRlbS5lYWNoKChpLCBlbCkgPT4ge1xuICAgICAgJChlbCkuY2xvc2VzdCgndHInKVskKGVsKS5wcm9wKCdjaGVja2VkJykgPyAnYWRkQ2xhc3MnIDogJ3JlbW92ZUNsYXNzJ10oJ3NlbGVjdGVkJylcbiAgICB9KVxuICB9XG5cbiAgdXBkYXRlUm93cyAoKSB7XG4gICAgdGhpcy4kc2VsZWN0SXRlbS5lYWNoKChpLCBlbCkgPT4ge1xuICAgICAgdGhpcy5kYXRhWyQoZWwpLmRhdGEoJ2luZGV4JyldW3RoaXMuaGVhZGVyLnN0YXRlRmllbGRdID0gJChlbCkucHJvcCgnY2hlY2tlZCcpXG4gICAgfSlcbiAgfVxuXG4gIHJlc2V0Um93cyAoKSB7XG4gICAgZm9yIChjb25zdCByb3cgb2YgdGhpcy5kYXRhKSB7XG4gICAgICB0aGlzLiRzZWxlY3RBbGwucHJvcCgnY2hlY2tlZCcsIGZhbHNlKVxuICAgICAgdGhpcy4kc2VsZWN0SXRlbS5wcm9wKCdjaGVja2VkJywgZmFsc2UpXG4gICAgICBpZiAodGhpcy5oZWFkZXIuc3RhdGVGaWVsZCkge1xuICAgICAgICByb3dbdGhpcy5oZWFkZXIuc3RhdGVGaWVsZF0gPSBmYWxzZVxuICAgICAgfVxuICAgIH1cbiAgICB0aGlzLmluaXRIaWRkZW5Sb3dzKClcbiAgfVxuXG4gIHRyaWdnZXIgKF9uYW1lLCAuLi5hcmdzKSB7XG4gICAgY29uc3QgbmFtZSA9IGAke19uYW1lfS5icy50YWJsZWBcbiAgICB0aGlzLm9wdGlvbnNbQm9vdHN0cmFwVGFibGUuRVZFTlRTW25hbWVdXSguLi5hcmdzKVxuICAgIHRoaXMuJGVsLnRyaWdnZXIoJC5FdmVudChuYW1lKSwgYXJncylcblxuICAgIHRoaXMub3B0aW9ucy5vbkFsbChuYW1lLCBhcmdzKVxuICAgIHRoaXMuJGVsLnRyaWdnZXIoJC5FdmVudCgnYWxsLmJzLnRhYmxlJyksIFtuYW1lLCBhcmdzXSlcbiAgfVxuXG4gIHJlc2V0SGVhZGVyICgpIHtcbiAgICAvLyBmaXggIzYxOiB0aGUgaGlkZGVuIHRhYmxlIHJlc2V0IGhlYWRlciBidWcuXG4gICAgLy8gZml4IGJ1ZzogZ2V0ICRlbC5jc3MoJ3dpZHRoJykgZXJyb3Igc29tZXRpbWUgKGhlaWdodCA9IDUwMClcbiAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lb3V0SWRfKVxuICAgIHRoaXMudGltZW91dElkXyA9IHNldFRpbWVvdXQoKCkgPT4gdGhpcy5maXRIZWFkZXIoKSwgdGhpcy4kZWwuaXMoJzpoaWRkZW4nKSA/IDEwMCA6IDApXG4gIH1cblxuICBmaXRIZWFkZXIgKCkge1xuICAgIGlmICh0aGlzLiRlbC5pcygnOmhpZGRlbicpKSB7XG4gICAgICB0aGlzLnRpbWVvdXRJZF8gPSBzZXRUaW1lb3V0KCgpID0+IHRoaXMuZml0SGVhZGVyKCksIDEwMClcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGNvbnN0IGZpeGVkQm9keSA9IHRoaXMuJHRhYmxlQm9keS5nZXQoMClcbiAgICBjb25zdCBzY3JvbGxXaWR0aCA9IGZpeGVkQm9keS5zY3JvbGxXaWR0aCA+IGZpeGVkQm9keS5jbGllbnRXaWR0aCAmJlxuICAgIGZpeGVkQm9keS5zY3JvbGxIZWlnaHQgPiBmaXhlZEJvZHkuY2xpZW50SGVpZ2h0ICsgdGhpcy4kaGVhZGVyLm91dGVySGVpZ2h0KClcbiAgICAgID8gVXRpbHMuZ2V0U2Nyb2xsQmFyV2lkdGgoKSA6IDBcblxuICAgIHRoaXMuJGVsLmNzcygnbWFyZ2luLXRvcCcsIC10aGlzLiRoZWFkZXIub3V0ZXJIZWlnaHQoKSlcblxuICAgIGNvbnN0IGZvY3VzZWQgPSAkKCc6Zm9jdXMnKVxuICAgIGlmIChmb2N1c2VkLmxlbmd0aCA+IDApIHtcbiAgICAgIGNvbnN0ICR0aCA9IGZvY3VzZWQucGFyZW50cygndGgnKVxuICAgICAgaWYgKCR0aC5sZW5ndGggPiAwKSB7XG4gICAgICAgIGNvbnN0IGRhdGFGaWVsZCA9ICR0aC5hdHRyKCdkYXRhLWZpZWxkJylcbiAgICAgICAgaWYgKGRhdGFGaWVsZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgY29uc3QgJGhlYWRlclRoID0gdGhpcy4kaGVhZGVyLmZpbmQoYFtkYXRhLWZpZWxkPScke2RhdGFGaWVsZH0nXWApXG4gICAgICAgICAgaWYgKCRoZWFkZXJUaC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAkaGVhZGVyVGguZmluZCgnOmlucHV0JykuYWRkQ2xhc3MoJ2ZvY3VzLXRlbXAnKVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMuJGhlYWRlcl8gPSB0aGlzLiRoZWFkZXIuY2xvbmUodHJ1ZSwgdHJ1ZSlcbiAgICB0aGlzLiRzZWxlY3RBbGxfID0gdGhpcy4kaGVhZGVyXy5maW5kKCdbbmFtZT1cImJ0U2VsZWN0QWxsXCJdJylcbiAgICB0aGlzLiR0YWJsZUhlYWRlclxuICAgICAgLmNzcygnbWFyZ2luLXJpZ2h0Jywgc2Nyb2xsV2lkdGgpXG4gICAgICAuZmluZCgndGFibGUnKS5jc3MoJ3dpZHRoJywgdGhpcy4kZWwub3V0ZXJXaWR0aCgpKVxuICAgICAgLmh0bWwoJycpLmF0dHIoJ2NsYXNzJywgdGhpcy4kZWwuYXR0cignY2xhc3MnKSlcbiAgICAgIC5hcHBlbmQodGhpcy4kaGVhZGVyXylcblxuICAgIHRoaXMuJHRhYmxlTG9hZGluZy5jc3MoJ3dpZHRoJywgdGhpcy4kZWwub3V0ZXJXaWR0aCgpKVxuXG4gICAgY29uc3QgZm9jdXNlZFRlbXAgPSAkKCcuZm9jdXMtdGVtcDp2aXNpYmxlOmVxKDApJylcbiAgICBpZiAoZm9jdXNlZFRlbXAubGVuZ3RoID4gMCkge1xuICAgICAgZm9jdXNlZFRlbXAuZm9jdXMoKVxuICAgICAgdGhpcy4kaGVhZGVyLmZpbmQoJy5mb2N1cy10ZW1wJykucmVtb3ZlQ2xhc3MoJ2ZvY3VzLXRlbXAnKVxuICAgIH1cblxuICAgIC8vIGZpeCBidWc6ICQuZGF0YSgpIGlzIG5vdCB3b3JraW5nIGFzIGV4cGVjdGVkIGFmdGVyICQuYXBwZW5kKClcbiAgICB0aGlzLiRoZWFkZXIuZmluZCgndGhbZGF0YS1maWVsZF0nKS5lYWNoKChpLCBlbCkgPT4ge1xuICAgICAgdGhpcy4kaGVhZGVyXy5maW5kKFV0aWxzLnNwcmludGYoJ3RoW2RhdGEtZmllbGQ9XCIlc1wiXScsICQoZWwpLmRhdGEoJ2ZpZWxkJykpKS5kYXRhKCQoZWwpLmRhdGEoKSlcbiAgICB9KVxuXG4gICAgY29uc3QgdmlzaWJsZUZpZWxkcyA9IHRoaXMuZ2V0VmlzaWJsZUZpZWxkcygpXG4gICAgY29uc3QgJHRocyA9IHRoaXMuJGhlYWRlcl8uZmluZCgndGgnKVxuICAgIGxldCAkdHIgPSB0aGlzLiRib2R5LmZpbmQoJz50cjpub3QoLm5vLXJlY29yZHMtZm91bmQsLnZpcnR1YWwtc2Nyb2xsLXRvcCknKS5lcSgwKVxuXG4gICAgd2hpbGUgKCR0ci5sZW5ndGggJiYgJHRyLmZpbmQoJz50ZFtjb2xzcGFuXTpub3QoW2NvbHNwYW49XCIxXCJdKScpLmxlbmd0aCkge1xuICAgICAgJHRyID0gJHRyLm5leHQoKVxuICAgIH1cblxuICAgICR0ci5maW5kKCc+IConKS5lYWNoKChpLCBlbCkgPT4ge1xuICAgICAgY29uc3QgJHRoaXMgPSAkKGVsKVxuICAgICAgbGV0IGluZGV4ID0gaVxuXG4gICAgICBpZiAodGhpcy5vcHRpb25zLmRldGFpbFZpZXcgJiYgdGhpcy5vcHRpb25zLmRldGFpbFZpZXdJY29uICYmICF0aGlzLm9wdGlvbnMuY2FyZFZpZXcpIHtcbiAgICAgICAgaWYgKGkgPT09IDApIHtcbiAgICAgICAgICBjb25zdCAkdGhEZXRhaWwgPSAkdGhzLmZpbHRlcignLmRldGFpbCcpXG4gICAgICAgICAgY29uc3Qgem9vbVdpZHRoID0gJHRoRGV0YWlsLmlubmVyV2lkdGgoKSAtICR0aERldGFpbC5maW5kKCcuZmh0LWNlbGwnKS53aWR0aCgpXG4gICAgICAgICAgJHRoRGV0YWlsLmZpbmQoJy5maHQtY2VsbCcpLndpZHRoKCR0aGlzLmlubmVyV2lkdGgoKSAtIHpvb21XaWR0aClcbiAgICAgICAgfVxuICAgICAgICBpbmRleCA9IGkgLSAxXG4gICAgICB9XG5cbiAgICAgIGlmIChpbmRleCA9PT0gLTEpIHtcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG5cbiAgICAgIGxldCAkdGggPSB0aGlzLiRoZWFkZXJfLmZpbmQoVXRpbHMuc3ByaW50ZigndGhbZGF0YS1maWVsZD1cIiVzXCJdJywgdmlzaWJsZUZpZWxkc1tpbmRleF0pKVxuICAgICAgaWYgKCR0aC5sZW5ndGggPiAxKSB7XG4gICAgICAgICR0aCA9ICQoJHRoc1skdGhpc1swXS5jZWxsSW5kZXhdKVxuICAgICAgfVxuXG4gICAgICBjb25zdCB6b29tV2lkdGggPSAkdGguaW5uZXJXaWR0aCgpIC0gJHRoLmZpbmQoJy5maHQtY2VsbCcpLndpZHRoKClcbiAgICAgICR0aC5maW5kKCcuZmh0LWNlbGwnKS53aWR0aCgkdGhpcy5pbm5lcldpZHRoKCkgLSB6b29tV2lkdGgpXG4gICAgfSlcblxuICAgIHRoaXMuaG9yaXpvbnRhbFNjcm9sbCgpXG4gICAgdGhpcy50cmlnZ2VyKCdwb3N0LWhlYWRlcicpXG4gIH1cblxuICBpbml0Rm9vdGVyICgpIHtcbiAgICBpZiAoIXRoaXMub3B0aW9ucy5zaG93Rm9vdGVyIHx8IHRoaXMub3B0aW9ucy5jYXJkVmlldykgeyAvLyBkbyBub3RoaW5nXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBjb25zdCBkYXRhID0gdGhpcy5nZXREYXRhKClcbiAgICBjb25zdCBodG1sID0gW11cblxuICAgIGlmICghdGhpcy5vcHRpb25zLmNhcmRWaWV3ICYmIHRoaXMub3B0aW9ucy5kZXRhaWxWaWV3ICYmIHRoaXMub3B0aW9ucy5kZXRhaWxWaWV3SWNvbikge1xuICAgICAgaHRtbC5wdXNoKCc8dGggY2xhc3M9XCJkZXRhaWxcIj48ZGl2IGNsYXNzPVwidGgtaW5uZXJcIj48L2Rpdj48ZGl2IGNsYXNzPVwiZmh0LWNlbGxcIj48L2Rpdj48L3RoPicpXG4gICAgfVxuXG4gICAgZm9yIChjb25zdCBjb2x1bW4gb2YgdGhpcy5jb2x1bW5zKSB7XG4gICAgICBsZXQgZmFsaWduID0gJydcblxuICAgICAgbGV0IHZhbGlnbiA9ICcnXG4gICAgICBjb25zdCBjc3NlcyA9IFtdXG4gICAgICBsZXQgc3R5bGUgPSB7fVxuICAgICAgbGV0IGNsYXNzXyA9IFV0aWxzLnNwcmludGYoJyBjbGFzcz1cIiVzXCInLCBjb2x1bW5bJ2NsYXNzJ10pXG5cbiAgICAgIGlmICghY29sdW1uLnZpc2libGUpIHtcbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMub3B0aW9ucy5jYXJkVmlldyAmJiAoIWNvbHVtbi5jYXJkVmlzaWJsZSkpIHtcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG5cbiAgICAgIGZhbGlnbiA9IFV0aWxzLnNwcmludGYoJ3RleHQtYWxpZ246ICVzOyAnLCBjb2x1bW4uZmFsaWduID8gY29sdW1uLmZhbGlnbiA6IGNvbHVtbi5hbGlnbilcbiAgICAgIHZhbGlnbiA9IFV0aWxzLnNwcmludGYoJ3ZlcnRpY2FsLWFsaWduOiAlczsgJywgY29sdW1uLnZhbGlnbilcblxuICAgICAgc3R5bGUgPSBVdGlscy5jYWxjdWxhdGVPYmplY3RWYWx1ZShudWxsLCB0aGlzLm9wdGlvbnMuZm9vdGVyU3R5bGUsIFtjb2x1bW5dKVxuXG4gICAgICBpZiAoc3R5bGUgJiYgc3R5bGUuY3NzKSB7XG4gICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHN0eWxlLmNzcykpIHtcbiAgICAgICAgICBjc3Nlcy5wdXNoKGAke2tleX06ICR7dmFsdWV9YClcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN0eWxlICYmIHN0eWxlLmNsYXNzZXMpIHtcbiAgICAgICAgY2xhc3NfID0gVXRpbHMuc3ByaW50ZignIGNsYXNzPVwiJXNcIicsIGNvbHVtblsnY2xhc3MnXSA/XG4gICAgICAgICAgW2NvbHVtblsnY2xhc3MnXSwgc3R5bGUuY2xhc3Nlc10uam9pbignICcpIDogc3R5bGUuY2xhc3NlcylcbiAgICAgIH1cblxuICAgICAgaHRtbC5wdXNoKCc8dGgnLCBjbGFzc18sIFV0aWxzLnNwcmludGYoJyBzdHlsZT1cIiVzXCInLCBmYWxpZ24gKyB2YWxpZ24gKyBjc3Nlcy5jb25jYXQoKS5qb2luKCc7ICcpKSwgJz4nKVxuICAgICAgaHRtbC5wdXNoKCc8ZGl2IGNsYXNzPVwidGgtaW5uZXJcIj4nKVxuXG4gICAgICBodG1sLnB1c2goVXRpbHMuY2FsY3VsYXRlT2JqZWN0VmFsdWUoY29sdW1uLCBjb2x1bW4uZm9vdGVyRm9ybWF0dGVyLFxuICAgICAgICBbZGF0YV0sIHRoaXMuZm9vdGVyRGF0YVswXSAmJiB0aGlzLmZvb3RlckRhdGFbMF1bY29sdW1uLmZpZWxkXSB8fCAnJykpXG5cbiAgICAgIGh0bWwucHVzaCgnPC9kaXY+JylcbiAgICAgIGh0bWwucHVzaCgnPGRpdiBjbGFzcz1cImZodC1jZWxsXCI+PC9kaXY+JylcbiAgICAgIGh0bWwucHVzaCgnPC9kaXY+JylcbiAgICAgIGh0bWwucHVzaCgnPC90aD4nKVxuICAgIH1cblxuICAgIHRoaXMuJHRhYmxlRm9vdGVyLmZpbmQoJ3RyJykuaHRtbChodG1sLmpvaW4oJycpKVxuXG4gICAgdGhpcy50cmlnZ2VyKCdwb3N0LWZvb3RlcicsIHRoaXMuJHRhYmxlRm9vdGVyKVxuICB9XG5cbiAgZml0Rm9vdGVyICgpIHtcbiAgICBpZiAodGhpcy4kZWwuaXMoJzpoaWRkZW4nKSkge1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB0aGlzLmZpdEZvb3RlcigpLCAxMDApXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBjb25zdCBmaXhlZEJvZHkgPSB0aGlzLiR0YWJsZUJvZHkuZ2V0KDApXG4gICAgY29uc3Qgc2Nyb2xsV2lkdGggPSBmaXhlZEJvZHkuc2Nyb2xsV2lkdGggPiBmaXhlZEJvZHkuY2xpZW50V2lkdGggJiZcbiAgICBmaXhlZEJvZHkuc2Nyb2xsSGVpZ2h0ID4gZml4ZWRCb2R5LmNsaWVudEhlaWdodCArIHRoaXMuJGhlYWRlci5vdXRlckhlaWdodCgpXG4gICAgICA/IFV0aWxzLmdldFNjcm9sbEJhcldpZHRoKCkgOiAwXG5cbiAgICB0aGlzLiR0YWJsZUZvb3RlclxuICAgICAgLmNzcygnbWFyZ2luLXJpZ2h0Jywgc2Nyb2xsV2lkdGgpXG4gICAgICAuZmluZCgndGFibGUnKS5jc3MoJ3dpZHRoJywgdGhpcy4kZWwub3V0ZXJXaWR0aCgpKVxuICAgICAgLmF0dHIoJ2NsYXNzJywgdGhpcy4kZWwuYXR0cignY2xhc3MnKSlcblxuICAgIGNvbnN0IHZpc2libGVGaWVsZHMgPSB0aGlzLmdldFZpc2libGVGaWVsZHMoKVxuICAgIGNvbnN0ICR0aHMgPSB0aGlzLiR0YWJsZUZvb3Rlci5maW5kKCd0aCcpXG4gICAgbGV0ICR0ciA9IHRoaXMuJGJvZHkuZmluZCgnPnRyOmZpcnN0LWNoaWxkOm5vdCgubm8tcmVjb3Jkcy1mb3VuZCknKVxuXG4gICAgd2hpbGUgKCR0ci5sZW5ndGggJiYgJHRyLmZpbmQoJz50ZFtjb2xzcGFuXTpub3QoW2NvbHNwYW49XCIxXCJdKScpLmxlbmd0aCkge1xuICAgICAgJHRyID0gJHRyLm5leHQoKVxuICAgIH1cblxuICAgICR0ci5maW5kKCc+IConKS5lYWNoKChpLCBlbCkgPT4ge1xuICAgICAgY29uc3QgJHRoaXMgPSAkKGVsKVxuICAgICAgbGV0IGluZGV4ID0gaVxuXG4gICAgICBpZiAodGhpcy5vcHRpb25zLmRldGFpbFZpZXcgJiYgIXRoaXMub3B0aW9ucy5jYXJkVmlldykge1xuICAgICAgICBpZiAoaSA9PT0gMCkge1xuICAgICAgICAgIGNvbnN0ICR0aERldGFpbCA9ICR0aHMuZmlsdGVyKCcuZGV0YWlsJylcbiAgICAgICAgICBjb25zdCB6b29tV2lkdGggPSAkdGhEZXRhaWwuaW5uZXJXaWR0aCgpIC0gJHRoRGV0YWlsLmZpbmQoJy5maHQtY2VsbCcpLndpZHRoKClcbiAgICAgICAgICAkdGhEZXRhaWwuZmluZCgnLmZodC1jZWxsJykud2lkdGgoJHRoaXMuaW5uZXJXaWR0aCgpIC0gem9vbVdpZHRoKVxuICAgICAgICB9XG4gICAgICAgIGluZGV4ID0gaSAtIDFcbiAgICAgIH1cblxuICAgICAgaWYgKGluZGV4ID09PSAtMSkge1xuICAgICAgICByZXR1cm5cbiAgICAgIH1cblxuICAgICAgY29uc3QgJHRoID0gJHRocy5lcShpKVxuICAgICAgY29uc3Qgem9vbVdpZHRoID0gJHRoLmlubmVyV2lkdGgoKSAtICR0aC5maW5kKCcuZmh0LWNlbGwnKS53aWR0aCgpXG4gICAgICAkdGguZmluZCgnLmZodC1jZWxsJykud2lkdGgoJHRoaXMuaW5uZXJXaWR0aCgpIC0gem9vbVdpZHRoKVxuICAgIH0pXG5cbiAgICB0aGlzLmhvcml6b250YWxTY3JvbGwoKVxuICB9XG5cbiAgaG9yaXpvbnRhbFNjcm9sbCAoKSB7XG4gICAgLy8gaG9yaXpvbnRhbCBzY3JvbGwgZXZlbnRcbiAgICAvLyBUT0RPOiBpdCdzIHByb2JhYmx5IGJldHRlciBpbXByb3ZpbmcgdGhlIGxheW91dCB0aGFuIGJpbmRpbmcgdG8gc2Nyb2xsIGV2ZW50XG5cbiAgICB0aGlzLnRyaWdnZXIoJ3Njcm9sbC1ib2R5JylcbiAgICB0aGlzLiR0YWJsZUJvZHkub2ZmKCdzY3JvbGwnKS5vbignc2Nyb2xsJywgKHtjdXJyZW50VGFyZ2V0fSkgPT4ge1xuICAgICAgaWYgKHRoaXMub3B0aW9ucy5zaG93SGVhZGVyICYmIHRoaXMub3B0aW9ucy5oZWlnaHQpIHtcbiAgICAgICAgdGhpcy4kdGFibGVIZWFkZXIuc2Nyb2xsTGVmdCgkKGN1cnJlbnRUYXJnZXQpLnNjcm9sbExlZnQoKSlcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMub3B0aW9ucy5zaG93Rm9vdGVyICYmICF0aGlzLm9wdGlvbnMuY2FyZFZpZXcpIHtcbiAgICAgICAgdGhpcy4kdGFibGVGb290ZXIuc2Nyb2xsTGVmdCgkKGN1cnJlbnRUYXJnZXQpLnNjcm9sbExlZnQoKSlcbiAgICAgIH1cbiAgICB9KVxuICB9XG5cbiAgZ2V0VmlzaWJsZUZpZWxkcyAoKSB7XG4gICAgY29uc3QgdmlzaWJsZUZpZWxkcyA9IFtdXG5cbiAgICBmb3IgKGNvbnN0IGZpZWxkIG9mIHRoaXMuaGVhZGVyLmZpZWxkcykge1xuICAgICAgY29uc3QgY29sdW1uID0gdGhpcy5jb2x1bW5zW3RoaXMuZmllbGRzQ29sdW1uc0luZGV4W2ZpZWxkXV1cblxuICAgICAgaWYgKCFjb2x1bW4gfHwgIWNvbHVtbi52aXNpYmxlKSB7XG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG4gICAgICB2aXNpYmxlRmllbGRzLnB1c2goZmllbGQpXG4gICAgfVxuICAgIHJldHVybiB2aXNpYmxlRmllbGRzXG4gIH1cblxuICBpbml0SGlkZGVuUm93cyAoKSB7XG4gICAgdGhpcy5oaWRkZW5Sb3dzID0gW11cbiAgfVxuXG4gIC8vIFBVQkxJQyBGVU5DVElPTiBERUZJTklUSU9OXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgZ2V0T3B0aW9ucyAoKSB7XG4gICAgLy8gZGVlcCBjb3B5IGFuZCByZW1vdmUgZGF0YVxuICAgIGNvbnN0IG9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgdGhpcy5vcHRpb25zKVxuICAgIGRlbGV0ZSBvcHRpb25zLmRhdGFcbiAgICByZXR1cm4gJC5leHRlbmQodHJ1ZSwge30sIG9wdGlvbnMpXG4gIH1cblxuICByZWZyZXNoT3B0aW9ucyAob3B0aW9ucykge1xuICAgIC8vIElmIHRoZSBvYmplY3RzIGFyZSBlcXVpdmFsZW50IHRoZW4gYXZvaWQgdGhlIGNhbGwgb2YgZGVzdHJveSAvIGluaXQgbWV0aG9kc1xuICAgIGlmIChVdGlscy5jb21wYXJlT2JqZWN0cyh0aGlzLm9wdGlvbnMsIG9wdGlvbnMsIHRydWUpKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG4gICAgdGhpcy5vcHRpb25zID0gJC5leHRlbmQodGhpcy5vcHRpb25zLCBvcHRpb25zKVxuICAgIHRoaXMudHJpZ2dlcigncmVmcmVzaC1vcHRpb25zJywgdGhpcy5vcHRpb25zKVxuICAgIHRoaXMuZGVzdHJveSgpXG4gICAgdGhpcy5pbml0KClcbiAgfVxuXG4gIGdldERhdGEgKHBhcmFtcykge1xuICAgIGxldCBkYXRhID0gdGhpcy5vcHRpb25zLmRhdGFcbiAgICBpZiAodGhpcy5zZWFyY2hUZXh0IHx8IHRoaXMub3B0aW9ucy5zb3J0TmFtZSB8fCAhVXRpbHMuaXNFbXB0eU9iamVjdCh0aGlzLmZpbHRlckNvbHVtbnMpIHx8ICFVdGlscy5pc0VtcHR5T2JqZWN0KHRoaXMuZmlsdGVyQ29sdW1uc1BhcnRpYWwpKSB7XG4gICAgICBkYXRhID0gdGhpcy5kYXRhXG4gICAgfVxuXG4gICAgaWYgKHBhcmFtcyAmJiBwYXJhbXMudXNlQ3VycmVudFBhZ2UpIHtcbiAgICAgIGRhdGEgPSBkYXRhLnNsaWNlKHRoaXMucGFnZUZyb20gLSAxLCB0aGlzLnBhZ2VUbylcbiAgICB9XG5cbiAgICBpZiAocGFyYW1zICYmICFwYXJhbXMuaW5jbHVkZUhpZGRlblJvd3MpIHtcbiAgICAgIGNvbnN0IGhpZGRlblJvd3MgPSB0aGlzLmdldEhpZGRlblJvd3MoKVxuICAgICAgZGF0YSA9IGRhdGEuZmlsdGVyKGZ1bmN0aW9uIChyb3cpIHtcbiAgICAgICAgcmV0dXJuIFV0aWxzLmZpbmRJbmRleChoaWRkZW5Sb3dzLCByb3cpID09PSAtMVxuICAgICAgfSlcbiAgICB9XG5cbiAgICByZXR1cm4gZGF0YVxuICB9XG5cbiAgZ2V0U2VsZWN0aW9ucyAoKSB7XG4gICAgLy8gZml4ICMyNDI0OiBmcm9tIGh0bWwgd2l0aCBjaGVja2JveFxuICAgIHJldHVybiB0aGlzLmRhdGEuZmlsdGVyKHJvdyA9PiByb3dbdGhpcy5oZWFkZXIuc3RhdGVGaWVsZF0gPT09IHRydWUpXG4gIH1cblxuICBnZXRBbGxTZWxlY3Rpb25zICgpIHtcbiAgICByZXR1cm4gdGhpcy5vcHRpb25zLmRhdGEuZmlsdGVyKHJvdyA9PiByb3dbdGhpcy5oZWFkZXIuc3RhdGVGaWVsZF0gPT09IHRydWUpXG4gIH1cblxuICBsb2FkIChfZGF0YSkge1xuICAgIGxldCBmaXhlZFNjcm9sbCA9IGZhbHNlXG4gICAgbGV0IGRhdGEgPSBfZGF0YVxuXG4gICAgLy8gIzQzMTogc3VwcG9ydCBwYWdpbmF0aW9uXG4gICAgaWYgKHRoaXMub3B0aW9ucy5wYWdpbmF0aW9uICYmIHRoaXMub3B0aW9ucy5zaWRlUGFnaW5hdGlvbiA9PT0gJ3NlcnZlcicpIHtcbiAgICAgIHRoaXMub3B0aW9ucy50b3RhbFJvd3MgPSBkYXRhW3RoaXMub3B0aW9ucy50b3RhbEZpZWxkXVxuICAgIH1cblxuICAgIGlmICh0aGlzLm9wdGlvbnMucGFnaW5hdGlvbiAmJiB0aGlzLm9wdGlvbnMuc2lkZVBhZ2luYXRpb24gPT09ICdzZXJ2ZXInKSB7XG4gICAgICB0aGlzLm9wdGlvbnMudG90YWxOb3RGaWx0ZXJlZCA9IGRhdGFbdGhpcy5vcHRpb25zLnRvdGFsTm90RmlsdGVyZWRGaWVsZF1cbiAgICB9XG5cbiAgICBmaXhlZFNjcm9sbCA9IGRhdGEuZml4ZWRTY3JvbGxcbiAgICBkYXRhID0gQXJyYXkuaXNBcnJheShkYXRhKSA/IGRhdGEgOiBkYXRhW3RoaXMub3B0aW9ucy5kYXRhRmllbGRdXG5cbiAgICB0aGlzLmluaXREYXRhKGRhdGEpXG4gICAgdGhpcy5pbml0U2VhcmNoKClcbiAgICB0aGlzLmluaXRQYWdpbmF0aW9uKClcbiAgICB0aGlzLmluaXRCb2R5KGZpeGVkU2Nyb2xsKVxuICB9XG5cbiAgYXBwZW5kIChkYXRhKSB7XG4gICAgdGhpcy5pbml0RGF0YShkYXRhLCAnYXBwZW5kJylcbiAgICB0aGlzLmluaXRTZWFyY2goKVxuICAgIHRoaXMuaW5pdFBhZ2luYXRpb24oKVxuICAgIHRoaXMuaW5pdFNvcnQoKVxuICAgIHRoaXMuaW5pdEJvZHkodHJ1ZSlcbiAgfVxuXG4gIHByZXBlbmQgKGRhdGEpIHtcbiAgICB0aGlzLmluaXREYXRhKGRhdGEsICdwcmVwZW5kJylcbiAgICB0aGlzLmluaXRTZWFyY2goKVxuICAgIHRoaXMuaW5pdFBhZ2luYXRpb24oKVxuICAgIHRoaXMuaW5pdFNvcnQoKVxuICAgIHRoaXMuaW5pdEJvZHkodHJ1ZSlcbiAgfVxuXG4gIHJlbW92ZSAocGFyYW1zKSB7XG4gICAgY29uc3QgbGVuID0gdGhpcy5vcHRpb25zLmRhdGEubGVuZ3RoXG4gICAgbGV0IGlcbiAgICBsZXQgcm93XG5cbiAgICBpZiAoIXBhcmFtcy5oYXNPd25Qcm9wZXJ0eSgnZmllbGQnKSB8fCAhcGFyYW1zLmhhc093blByb3BlcnR5KCd2YWx1ZXMnKSkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgZm9yIChpID0gbGVuIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgIHJvdyA9IHRoaXMub3B0aW9ucy5kYXRhW2ldXG5cbiAgICAgIGlmICghcm93Lmhhc093blByb3BlcnR5KHBhcmFtcy5maWVsZCkpIHtcbiAgICAgICAgY29udGludWVcbiAgICAgIH1cbiAgICAgIGlmIChwYXJhbXMudmFsdWVzLmluY2x1ZGVzKHJvd1twYXJhbXMuZmllbGRdKSkge1xuICAgICAgICB0aGlzLm9wdGlvbnMuZGF0YS5zcGxpY2UoaSwgMSlcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5zaWRlUGFnaW5hdGlvbiA9PT0gJ3NlcnZlcicpIHtcbiAgICAgICAgICB0aGlzLm9wdGlvbnMudG90YWxSb3dzIC09IDFcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChsZW4gPT09IHRoaXMub3B0aW9ucy5kYXRhLmxlbmd0aCkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgdGhpcy5pbml0U2VhcmNoKClcbiAgICB0aGlzLmluaXRQYWdpbmF0aW9uKClcbiAgICB0aGlzLmluaXRTb3J0KClcbiAgICB0aGlzLmluaXRCb2R5KHRydWUpXG4gIH1cblxuICByZW1vdmVBbGwgKCkge1xuICAgIGlmICh0aGlzLm9wdGlvbnMuZGF0YS5sZW5ndGggPiAwKSB7XG4gICAgICB0aGlzLm9wdGlvbnMuZGF0YS5zcGxpY2UoMCwgdGhpcy5vcHRpb25zLmRhdGEubGVuZ3RoKVxuICAgICAgdGhpcy5pbml0U2VhcmNoKClcbiAgICAgIHRoaXMuaW5pdFBhZ2luYXRpb24oKVxuICAgICAgdGhpcy5pbml0Qm9keSh0cnVlKVxuICAgIH1cbiAgfVxuXG4gIGluc2VydFJvdyAocGFyYW1zKSB7XG4gICAgaWYgKCFwYXJhbXMuaGFzT3duUHJvcGVydHkoJ2luZGV4JykgfHwgIXBhcmFtcy5oYXNPd25Qcm9wZXJ0eSgncm93JykpIHtcbiAgICAgIHJldHVyblxuICAgIH1cbiAgICB0aGlzLm9wdGlvbnMuZGF0YS5zcGxpY2UocGFyYW1zLmluZGV4LCAwLCBwYXJhbXMucm93KVxuICAgIHRoaXMuaW5pdFNlYXJjaCgpXG4gICAgdGhpcy5pbml0UGFnaW5hdGlvbigpXG4gICAgdGhpcy5pbml0U29ydCgpXG4gICAgdGhpcy5pbml0Qm9keSh0cnVlKVxuICB9XG5cbiAgdXBkYXRlUm93IChwYXJhbXMpIHtcbiAgICBjb25zdCBhbGxQYXJhbXMgPSBBcnJheS5pc0FycmF5KHBhcmFtcykgPyBwYXJhbXMgOiBbcGFyYW1zXVxuXG4gICAgZm9yIChjb25zdCBwYXJhbXMgb2YgYWxsUGFyYW1zKSB7XG4gICAgICBpZiAoIXBhcmFtcy5oYXNPd25Qcm9wZXJ0eSgnaW5kZXgnKSB8fCAhcGFyYW1zLmhhc093blByb3BlcnR5KCdyb3cnKSkge1xuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICAkLmV4dGVuZCh0aGlzLm9wdGlvbnMuZGF0YVtwYXJhbXMuaW5kZXhdLCBwYXJhbXMucm93KVxuICAgICAgaWYgKHBhcmFtcy5oYXNPd25Qcm9wZXJ0eSgncmVwbGFjZScpICYmIHBhcmFtcy5yZXBsYWNlKSB7XG4gICAgICAgIHRoaXMub3B0aW9ucy5kYXRhW3BhcmFtcy5pbmRleF0gPSBwYXJhbXMucm93XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAkLmV4dGVuZCh0aGlzLm9wdGlvbnMuZGF0YVtwYXJhbXMuaW5kZXhdLCBwYXJhbXMucm93KVxuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMuaW5pdFNlYXJjaCgpXG4gICAgdGhpcy5pbml0UGFnaW5hdGlvbigpXG4gICAgdGhpcy5pbml0U29ydCgpXG4gICAgdGhpcy5pbml0Qm9keSh0cnVlKVxuICB9XG5cbiAgZ2V0Um93QnlVbmlxdWVJZCAoX2lkKSB7XG4gICAgY29uc3QgdW5pcXVlSWQgPSB0aGlzLm9wdGlvbnMudW5pcXVlSWRcbiAgICBjb25zdCBsZW4gPSB0aGlzLm9wdGlvbnMuZGF0YS5sZW5ndGhcbiAgICBsZXQgaWQgPSBfaWRcbiAgICBsZXQgZGF0YVJvdyA9IG51bGxcbiAgICBsZXQgaVxuICAgIGxldCByb3dcbiAgICBsZXQgcm93VW5pcXVlSWRcblxuICAgIGZvciAoaSA9IGxlbiAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICByb3cgPSB0aGlzLm9wdGlvbnMuZGF0YVtpXVxuXG4gICAgICBpZiAocm93Lmhhc093blByb3BlcnR5KHVuaXF1ZUlkKSkgeyAvLyB1bmlxdWVJZCBpcyBhIGNvbHVtblxuICAgICAgICByb3dVbmlxdWVJZCA9IHJvd1t1bmlxdWVJZF1cbiAgICAgIH0gZWxzZSBpZiAocm93Ll9kYXRhICYmIHJvdy5fZGF0YS5oYXNPd25Qcm9wZXJ0eSh1bmlxdWVJZCkpIHsgLy8gdW5pcXVlSWQgaXMgYSByb3cgZGF0YSBwcm9wZXJ0eVxuICAgICAgICByb3dVbmlxdWVJZCA9IHJvdy5fZGF0YVt1bmlxdWVJZF1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2Ygcm93VW5pcXVlSWQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGlkID0gaWQudG9TdHJpbmcoKVxuICAgICAgfSBlbHNlIGlmICh0eXBlb2Ygcm93VW5pcXVlSWQgPT09ICdudW1iZXInKSB7XG4gICAgICAgIGlmICgoTnVtYmVyKHJvd1VuaXF1ZUlkKSA9PT0gcm93VW5pcXVlSWQpICYmIChyb3dVbmlxdWVJZCAlIDEgPT09IDApKSB7XG4gICAgICAgICAgaWQgPSBwYXJzZUludChpZClcbiAgICAgICAgfSBlbHNlIGlmICgocm93VW5pcXVlSWQgPT09IE51bWJlcihyb3dVbmlxdWVJZCkpICYmIChyb3dVbmlxdWVJZCAhPT0gMCkpIHtcbiAgICAgICAgICBpZCA9IHBhcnNlRmxvYXQoaWQpXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHJvd1VuaXF1ZUlkID09PSBpZCkge1xuICAgICAgICBkYXRhUm93ID0gcm93XG4gICAgICAgIGJyZWFrXG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGRhdGFSb3dcbiAgfVxuXG4gIHVwZGF0ZUJ5VW5pcXVlSWQgKHBhcmFtcykge1xuICAgIGNvbnN0IGFsbFBhcmFtcyA9IEFycmF5LmlzQXJyYXkocGFyYW1zKSA/IHBhcmFtcyA6IFtwYXJhbXNdXG5cbiAgICBmb3IgKGNvbnN0IHBhcmFtcyBvZiBhbGxQYXJhbXMpIHtcbiAgICAgIGlmICghcGFyYW1zLmhhc093blByb3BlcnR5KCdpZCcpIHx8ICFwYXJhbXMuaGFzT3duUHJvcGVydHkoJ3JvdycpKSB7XG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHJvd0lkID0gdGhpcy5vcHRpb25zLmRhdGEuaW5kZXhPZih0aGlzLmdldFJvd0J5VW5pcXVlSWQocGFyYW1zLmlkKSlcbiAgICAgIGlmIChyb3dJZCA9PT0gLTEpIHtcbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgaWYgKHBhcmFtcy5oYXNPd25Qcm9wZXJ0eSgncmVwbGFjZScpICYmIHBhcmFtcy5yZXBsYWNlKSB7XG4gICAgICAgIHRoaXMub3B0aW9ucy5kYXRhW3Jvd0lkXSA9IHBhcmFtcy5yb3dcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgICQuZXh0ZW5kKHRoaXMub3B0aW9ucy5kYXRhW3Jvd0lkXSwgcGFyYW1zLnJvdylcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLmluaXRTZWFyY2goKVxuICAgIHRoaXMuaW5pdFBhZ2luYXRpb24oKVxuICAgIHRoaXMuaW5pdFNvcnQoKVxuICAgIHRoaXMuaW5pdEJvZHkodHJ1ZSlcbiAgfVxuXG4gIHJlbW92ZUJ5VW5pcXVlSWQgKGlkKSB7XG4gICAgY29uc3QgbGVuID0gdGhpcy5vcHRpb25zLmRhdGEubGVuZ3RoXG4gICAgY29uc3Qgcm93ID0gdGhpcy5nZXRSb3dCeVVuaXF1ZUlkKGlkKVxuXG4gICAgaWYgKHJvdykge1xuICAgICAgdGhpcy5vcHRpb25zLmRhdGEuc3BsaWNlKHRoaXMub3B0aW9ucy5kYXRhLmluZGV4T2Yocm93KSwgMSlcbiAgICB9XG5cbiAgICBpZiAobGVuID09PSB0aGlzLm9wdGlvbnMuZGF0YS5sZW5ndGgpIHtcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIHRoaXMuaW5pdFNlYXJjaCgpXG4gICAgdGhpcy5pbml0UGFnaW5hdGlvbigpXG4gICAgdGhpcy5pbml0Qm9keSh0cnVlKVxuICB9XG5cbiAgdXBkYXRlQ2VsbCAocGFyYW1zKSB7XG4gICAgaWYgKCFwYXJhbXMuaGFzT3duUHJvcGVydHkoJ2luZGV4JykgfHxcbiAgICAgICFwYXJhbXMuaGFzT3duUHJvcGVydHkoJ2ZpZWxkJykgfHxcbiAgICAgICFwYXJhbXMuaGFzT3duUHJvcGVydHkoJ3ZhbHVlJykpIHtcbiAgICAgIHJldHVyblxuICAgIH1cbiAgICB0aGlzLmRhdGFbcGFyYW1zLmluZGV4XVtwYXJhbXMuZmllbGRdID0gcGFyYW1zLnZhbHVlXG5cbiAgICBpZiAocGFyYW1zLnJlaW5pdCA9PT0gZmFsc2UpIHtcbiAgICAgIHJldHVyblxuICAgIH1cbiAgICB0aGlzLmluaXRTb3J0KClcbiAgICB0aGlzLmluaXRCb2R5KHRydWUpXG4gIH1cblxuICB1cGRhdGVDZWxsQnlVbmlxdWVJZCAocGFyYW1zKSB7XG4gICAgaWYgKCFwYXJhbXMuaGFzT3duUHJvcGVydHkoJ2lkJykgfHxcbiAgICAgICFwYXJhbXMuaGFzT3duUHJvcGVydHkoJ2ZpZWxkJykgfHxcbiAgICAgICFwYXJhbXMuaGFzT3duUHJvcGVydHkoJ3ZhbHVlJykpIHtcbiAgICAgIHJldHVyblxuICAgIH1cbiAgICBjb25zdCBhbGxQYXJhbXMgPSBBcnJheS5pc0FycmF5KHBhcmFtcykgPyBwYXJhbXMgOiBbcGFyYW1zXVxuXG4gICAgYWxsUGFyYW1zLmZvckVhY2goKHtpZCwgZmllbGQsIHZhbHVlfSkgPT4ge1xuICAgICAgY29uc3Qgcm93SWQgPSB0aGlzLm9wdGlvbnMuZGF0YS5pbmRleE9mKHRoaXMuZ2V0Um93QnlVbmlxdWVJZChpZCkpXG5cbiAgICAgIGlmIChyb3dJZCA9PT0gLTEpIHtcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgICB0aGlzLm9wdGlvbnMuZGF0YVtyb3dJZF1bZmllbGRdID0gdmFsdWVcbiAgICB9KVxuXG4gICAgaWYgKHBhcmFtcy5yZWluaXQgPT09IGZhbHNlKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG4gICAgdGhpcy5pbml0U29ydCgpXG4gICAgdGhpcy5pbml0Qm9keSh0cnVlKVxuICB9XG5cbiAgc2hvd1JvdyAocGFyYW1zKSB7XG4gICAgdGhpcy5fdG9nZ2xlUm93KHBhcmFtcywgdHJ1ZSlcbiAgfVxuXG4gIGhpZGVSb3cgKHBhcmFtcykge1xuICAgIHRoaXMuX3RvZ2dsZVJvdyhwYXJhbXMsIGZhbHNlKVxuICB9XG5cbiAgX3RvZ2dsZVJvdyAocGFyYW1zLCB2aXNpYmxlKSB7XG4gICAgbGV0IHJvd1xuXG4gICAgaWYgKHBhcmFtcy5oYXNPd25Qcm9wZXJ0eSgnaW5kZXgnKSkge1xuICAgICAgcm93ID0gdGhpcy5nZXREYXRhKClbcGFyYW1zLmluZGV4XVxuICAgIH0gZWxzZSBpZiAocGFyYW1zLmhhc093blByb3BlcnR5KCd1bmlxdWVJZCcpKSB7XG4gICAgICByb3cgPSB0aGlzLmdldFJvd0J5VW5pcXVlSWQocGFyYW1zLnVuaXF1ZUlkKVxuICAgIH1cblxuICAgIGlmICghcm93KSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBjb25zdCBpbmRleCA9IFV0aWxzLmZpbmRJbmRleCh0aGlzLmhpZGRlblJvd3MsIHJvdylcblxuICAgIGlmICghdmlzaWJsZSAmJiBpbmRleCA9PT0gLTEpIHtcbiAgICAgIHRoaXMuaGlkZGVuUm93cy5wdXNoKHJvdylcbiAgICB9IGVsc2UgaWYgKHZpc2libGUgJiYgaW5kZXggPiAtMSkge1xuICAgICAgdGhpcy5oaWRkZW5Sb3dzLnNwbGljZShpbmRleCwgMSlcbiAgICB9XG4gICAgaWYgKHZpc2libGUpIHtcbiAgICAgIHRoaXMudXBkYXRlUGFnaW5hdGlvbigpXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuaW5pdEJvZHkodHJ1ZSlcbiAgICAgIHRoaXMuaW5pdFBhZ2luYXRpb24oKVxuICAgIH1cbiAgfVxuXG4gIGdldEhpZGRlblJvd3MgKHNob3cpIHtcbiAgICBpZiAoc2hvdykge1xuICAgICAgdGhpcy5pbml0SGlkZGVuUm93cygpXG4gICAgICB0aGlzLmluaXRCb2R5KHRydWUpXG4gICAgICByZXR1cm5cbiAgICB9XG4gICAgY29uc3QgZGF0YSA9IHRoaXMuZ2V0RGF0YSgpXG4gICAgY29uc3Qgcm93cyA9IFtdXG5cbiAgICBmb3IgKGNvbnN0IHJvdyBvZiBkYXRhKSB7XG4gICAgICBpZiAodGhpcy5oaWRkZW5Sb3dzLmluY2x1ZGVzKHJvdykpIHtcbiAgICAgICAgcm93cy5wdXNoKHJvdylcbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5oaWRkZW5Sb3dzID0gcm93c1xuICAgIHJldHVybiByb3dzXG4gIH1cblxuICBzaG93Q29sdW1uIChmaWVsZCkge1xuICAgIGNvbnN0IGZpZWxkcyA9IEFycmF5LmlzQXJyYXkoZmllbGQpID8gZmllbGQgOiBbZmllbGRdXG4gICAgZmllbGRzLmZvckVhY2goZmllbGQgPT4ge1xuICAgICAgdGhpcy5fdG9nZ2xlQ29sdW1uKHRoaXMuZmllbGRzQ29sdW1uc0luZGV4W2ZpZWxkXSwgdHJ1ZSwgdHJ1ZSlcbiAgICB9KVxuICB9XG5cbiAgaGlkZUNvbHVtbiAoZmllbGQpIHtcbiAgICBjb25zdCBmaWVsZHMgPSBBcnJheS5pc0FycmF5KGZpZWxkKSA/IGZpZWxkIDogW2ZpZWxkXVxuICAgIGZpZWxkcy5mb3JFYWNoKGZpZWxkID0+IHtcbiAgICAgIHRoaXMuX3RvZ2dsZUNvbHVtbih0aGlzLmZpZWxkc0NvbHVtbnNJbmRleFtmaWVsZF0sIGZhbHNlLCB0cnVlKVxuICAgIH0pXG4gIH1cblxuICBfdG9nZ2xlQ29sdW1uIChpbmRleCwgY2hlY2tlZCwgbmVlZFVwZGF0ZSkge1xuICAgIGlmIChpbmRleCA9PT0gLTEgfHwgdGhpcy5jb2x1bW5zW2luZGV4XS52aXNpYmxlID09PSBjaGVja2VkKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG4gICAgdGhpcy5jb2x1bW5zW2luZGV4XS52aXNpYmxlID0gY2hlY2tlZFxuICAgIHRoaXMuaW5pdEhlYWRlcigpXG4gICAgdGhpcy5pbml0U2VhcmNoKClcbiAgICB0aGlzLmluaXRQYWdpbmF0aW9uKClcbiAgICB0aGlzLmluaXRCb2R5KClcblxuICAgIGlmICh0aGlzLm9wdGlvbnMuc2hvd0NvbHVtbnMpIHtcbiAgICAgIGNvbnN0ICRpdGVtcyA9IHRoaXMuJHRvb2xiYXIuZmluZCgnLmtlZXAtb3BlbiBpbnB1dCcpLnByb3AoJ2Rpc2FibGVkJywgZmFsc2UpXG5cbiAgICAgIGlmIChuZWVkVXBkYXRlKSB7XG4gICAgICAgICRpdGVtcy5maWx0ZXIoVXRpbHMuc3ByaW50ZignW3ZhbHVlPVwiJXNcIl0nLCBpbmRleCkpLnByb3AoJ2NoZWNrZWQnLCBjaGVja2VkKVxuICAgICAgfVxuXG4gICAgICBpZiAoJGl0ZW1zLmZpbHRlcignOmNoZWNrZWQnKS5sZW5ndGggPD0gdGhpcy5vcHRpb25zLm1pbmltdW1Db3VudENvbHVtbnMpIHtcbiAgICAgICAgJGl0ZW1zLmZpbHRlcignOmNoZWNrZWQnKS5wcm9wKCdkaXNhYmxlZCcsIHRydWUpXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZ2V0VmlzaWJsZUNvbHVtbnMgKCkge1xuICAgIHJldHVybiB0aGlzLmNvbHVtbnMuZmlsdGVyKCh7dmlzaWJsZX0pID0+IHZpc2libGUpXG4gIH1cblxuICBnZXRIaWRkZW5Db2x1bW5zICgpIHtcbiAgICByZXR1cm4gdGhpcy5jb2x1bW5zLmZpbHRlcigoe3Zpc2libGV9KSA9PiAhdmlzaWJsZSlcbiAgfVxuXG4gIHNob3dBbGxDb2x1bW5zICgpIHtcbiAgICB0aGlzLl90b2dnbGVBbGxDb2x1bW5zKHRydWUpXG4gIH1cblxuICBoaWRlQWxsQ29sdW1ucyAoKSB7XG4gICAgdGhpcy5fdG9nZ2xlQWxsQ29sdW1ucyhmYWxzZSlcbiAgfVxuXG4gIF90b2dnbGVBbGxDb2x1bW5zICh2aXNpYmxlKSB7XG4gICAgZm9yIChjb25zdCBjb2x1bW4gb2YgdGhpcy5jb2x1bW5zLnNsaWNlKCkucmV2ZXJzZSgpKSB7XG4gICAgICBpZiAoY29sdW1uLnN3aXRjaGFibGUpIHtcbiAgICAgICAgaWYgKCF2aXNpYmxlICYmIHRoaXMub3B0aW9ucy5zaG93Q29sdW1ucyAmJiB0aGlzLmdldFZpc2libGVDb2x1bW5zKCkubGVuZ3RoID09PSB0aGlzLm9wdGlvbnMubWluaW11bUNvdW50Q29sdW1ucykge1xuICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH1cbiAgICAgICAgY29sdW1uLnZpc2libGUgPSB2aXNpYmxlXG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5pbml0SGVhZGVyKClcbiAgICB0aGlzLmluaXRTZWFyY2goKVxuICAgIHRoaXMuaW5pdFBhZ2luYXRpb24oKVxuICAgIHRoaXMuaW5pdEJvZHkoKVxuICAgIGlmICh0aGlzLm9wdGlvbnMuc2hvd0NvbHVtbnMpIHtcbiAgICAgIGNvbnN0ICRpdGVtcyA9IHRoaXMuJHRvb2xiYXIuZmluZCgnLmtlZXAtb3BlbiBpbnB1dDpub3QoXCIudG9nZ2xlLWFsbFwiKScpLnByb3AoJ2Rpc2FibGVkJywgZmFsc2UpXG5cbiAgICAgIGlmICh2aXNpYmxlKSB7XG4gICAgICAgICRpdGVtcy5wcm9wKCdjaGVja2VkJywgdmlzaWJsZSlcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgICRpdGVtcy5nZXQoKS5yZXZlcnNlKCkuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgICAgIGlmICgkaXRlbXMuZmlsdGVyKCc6Y2hlY2tlZCcpLmxlbmd0aCA+IHRoaXMub3B0aW9ucy5taW5pbXVtQ291bnRDb2x1bW5zKSB7XG4gICAgICAgICAgICAkKGl0ZW0pLnByb3AoJ2NoZWNrZWQnLCB2aXNpYmxlKVxuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgIH1cblxuICAgICAgaWYgKCRpdGVtcy5maWx0ZXIoJzpjaGVja2VkJykubGVuZ3RoIDw9IHRoaXMub3B0aW9ucy5taW5pbXVtQ291bnRDb2x1bW5zKSB7XG4gICAgICAgICRpdGVtcy5maWx0ZXIoJzpjaGVja2VkJykucHJvcCgnZGlzYWJsZWQnLCB0cnVlKVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIG1lcmdlQ2VsbHMgKG9wdGlvbnMpIHtcbiAgICBjb25zdCByb3cgPSBvcHRpb25zLmluZGV4XG4gICAgbGV0IGNvbCA9IHRoaXMuZ2V0VmlzaWJsZUZpZWxkcygpLmluZGV4T2Yob3B0aW9ucy5maWVsZClcbiAgICBjb25zdCByb3dzcGFuID0gb3B0aW9ucy5yb3dzcGFuIHx8IDFcbiAgICBjb25zdCBjb2xzcGFuID0gb3B0aW9ucy5jb2xzcGFuIHx8IDFcbiAgICBsZXQgaVxuICAgIGxldCBqXG4gICAgY29uc3QgJHRyID0gdGhpcy4kYm9keS5maW5kKCc+dHInKVxuXG4gICAgaWYgKHRoaXMub3B0aW9ucy5kZXRhaWxWaWV3ICYmICF0aGlzLm9wdGlvbnMuY2FyZFZpZXcpIHtcbiAgICAgIGNvbCArPSAxXG4gICAgfVxuXG4gICAgY29uc3QgJHRkID0gJHRyLmVxKHJvdykuZmluZCgnPnRkJykuZXEoY29sKVxuXG4gICAgaWYgKHJvdyA8IDAgfHwgY29sIDwgMCB8fCByb3cgPj0gdGhpcy5kYXRhLmxlbmd0aCkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgZm9yIChpID0gcm93OyBpIDwgcm93ICsgcm93c3BhbjsgaSsrKSB7XG4gICAgICBmb3IgKGogPSBjb2w7IGogPCBjb2wgKyBjb2xzcGFuOyBqKyspIHtcbiAgICAgICAgJHRyLmVxKGkpLmZpbmQoJz50ZCcpLmVxKGopLmhpZGUoKVxuICAgICAgfVxuICAgIH1cblxuICAgICR0ZC5hdHRyKCdyb3dzcGFuJywgcm93c3BhbikuYXR0cignY29sc3BhbicsIGNvbHNwYW4pLnNob3coKVxuICB9XG5cbiAgY2hlY2tBbGwgKCkge1xuICAgIHRoaXMuX3RvZ2dsZUNoZWNrQWxsKHRydWUpXG4gIH1cblxuICB1bmNoZWNrQWxsICgpIHtcbiAgICB0aGlzLl90b2dnbGVDaGVja0FsbChmYWxzZSlcbiAgfVxuXG4gIF90b2dnbGVDaGVja0FsbCAoY2hlY2tlZCkge1xuICAgIGNvbnN0IHJvd3NCZWZvcmUgPSB0aGlzLmdldFNlbGVjdGlvbnMoKVxuICAgIHRoaXMuJHNlbGVjdEFsbC5hZGQodGhpcy4kc2VsZWN0QWxsXykucHJvcCgnY2hlY2tlZCcsIGNoZWNrZWQpXG4gICAgdGhpcy4kc2VsZWN0SXRlbS5maWx0ZXIoJzplbmFibGVkJykucHJvcCgnY2hlY2tlZCcsIGNoZWNrZWQpXG4gICAgdGhpcy51cGRhdGVSb3dzKClcblxuICAgIGNvbnN0IHJvd3NBZnRlciA9IHRoaXMuZ2V0U2VsZWN0aW9ucygpXG4gICAgaWYgKGNoZWNrZWQpIHtcbiAgICAgIHRoaXMudHJpZ2dlcignY2hlY2stYWxsJywgcm93c0FmdGVyLCByb3dzQmVmb3JlKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgdGhpcy50cmlnZ2VyKCd1bmNoZWNrLWFsbCcsIHJvd3NBZnRlciwgcm93c0JlZm9yZSlcbiAgfVxuXG4gIGNoZWNrSW52ZXJ0ICgpIHtcbiAgICBjb25zdCAkaXRlbXMgPSB0aGlzLiRzZWxlY3RJdGVtLmZpbHRlcignOmVuYWJsZWQnKVxuICAgIGxldCBjaGVja2VkID0gJGl0ZW1zLmZpbHRlcignOmNoZWNrZWQnKVxuICAgICRpdGVtcy5lYWNoKChpLCBlbCkgPT4ge1xuICAgICAgJChlbCkucHJvcCgnY2hlY2tlZCcsICEkKGVsKS5wcm9wKCdjaGVja2VkJykpXG4gICAgfSlcbiAgICB0aGlzLnVwZGF0ZVJvd3MoKVxuICAgIHRoaXMudXBkYXRlU2VsZWN0ZWQoKVxuICAgIHRoaXMudHJpZ2dlcigndW5jaGVjay1zb21lJywgY2hlY2tlZClcbiAgICBjaGVja2VkID0gdGhpcy5nZXRTZWxlY3Rpb25zKClcbiAgICB0aGlzLnRyaWdnZXIoJ2NoZWNrLXNvbWUnLCBjaGVja2VkKVxuICB9XG5cbiAgY2hlY2sgKGluZGV4KSB7XG4gICAgdGhpcy5fdG9nZ2xlQ2hlY2sodHJ1ZSwgaW5kZXgpXG4gIH1cblxuICB1bmNoZWNrIChpbmRleCkge1xuICAgIHRoaXMuX3RvZ2dsZUNoZWNrKGZhbHNlLCBpbmRleClcbiAgfVxuXG4gIF90b2dnbGVDaGVjayAoY2hlY2tlZCwgaW5kZXgpIHtcbiAgICBjb25zdCAkZWwgPSB0aGlzLiRzZWxlY3RJdGVtLmZpbHRlcihgW2RhdGEtaW5kZXg9XCIke2luZGV4fVwiXWApXG4gICAgY29uc3Qgcm93ID0gdGhpcy5kYXRhW2luZGV4XVxuXG4gICAgaWYgKFxuICAgICAgJGVsLmlzKCc6cmFkaW8nKSB8fFxuICAgICAgdGhpcy5vcHRpb25zLnNpbmdsZVNlbGVjdCB8fFxuICAgICAgdGhpcy5vcHRpb25zLm11bHRpcGxlU2VsZWN0Um93ICYmXG4gICAgICAhdGhpcy5tdWx0aXBsZVNlbGVjdFJvd0N0cmxLZXkgJiZcbiAgICAgICF0aGlzLm11bHRpcGxlU2VsZWN0Um93U2hpZnRLZXlcbiAgICApIHtcbiAgICAgIGZvciAoY29uc3QgciBvZiB0aGlzLm9wdGlvbnMuZGF0YSkge1xuICAgICAgICByW3RoaXMuaGVhZGVyLnN0YXRlRmllbGRdID0gZmFsc2VcbiAgICAgIH1cbiAgICAgIHRoaXMuJHNlbGVjdEl0ZW0uZmlsdGVyKCc6Y2hlY2tlZCcpLm5vdCgkZWwpLnByb3AoJ2NoZWNrZWQnLCBmYWxzZSlcbiAgICB9XG5cbiAgICByb3dbdGhpcy5oZWFkZXIuc3RhdGVGaWVsZF0gPSBjaGVja2VkXG5cbiAgICBpZiAodGhpcy5vcHRpb25zLm11bHRpcGxlU2VsZWN0Um93KSB7XG4gICAgICBpZiAodGhpcy5tdWx0aXBsZVNlbGVjdFJvd1NoaWZ0S2V5ICYmIHRoaXMubXVsdGlwbGVTZWxlY3RSb3dMYXN0U2VsZWN0ZWRJbmRleCA+PSAwKSB7XG4gICAgICAgIGNvbnN0IGluZGV4ZXMgPSBbdGhpcy5tdWx0aXBsZVNlbGVjdFJvd0xhc3RTZWxlY3RlZEluZGV4LCBpbmRleF0uc29ydCgpXG5cbiAgICAgICAgZm9yIChsZXQgaSA9IGluZGV4ZXNbMF0gKyAxOyBpIDwgaW5kZXhlc1sxXTsgaSsrKSB7XG4gICAgICAgICAgdGhpcy5kYXRhW2ldW3RoaXMuaGVhZGVyLnN0YXRlRmllbGRdID0gdHJ1ZVxuICAgICAgICAgIHRoaXMuJHNlbGVjdEl0ZW0uZmlsdGVyKGBbZGF0YS1pbmRleD1cIiR7aX1cIl1gKS5wcm9wKCdjaGVja2VkJywgdHJ1ZSlcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB0aGlzLm11bHRpcGxlU2VsZWN0Um93Q3RybEtleSA9IGZhbHNlXG4gICAgICB0aGlzLm11bHRpcGxlU2VsZWN0Um93U2hpZnRLZXkgPSBmYWxzZVxuICAgICAgdGhpcy5tdWx0aXBsZVNlbGVjdFJvd0xhc3RTZWxlY3RlZEluZGV4ID0gY2hlY2tlZCA/IGluZGV4IDogLTFcbiAgICB9XG5cbiAgICAkZWwucHJvcCgnY2hlY2tlZCcsIGNoZWNrZWQpXG4gICAgdGhpcy51cGRhdGVTZWxlY3RlZCgpXG4gICAgdGhpcy50cmlnZ2VyKGNoZWNrZWQgPyAnY2hlY2snIDogJ3VuY2hlY2snLCB0aGlzLmRhdGFbaW5kZXhdLCAkZWwpXG4gIH1cblxuICBjaGVja0J5IChvYmopIHtcbiAgICB0aGlzLl90b2dnbGVDaGVja0J5KHRydWUsIG9iailcbiAgfVxuXG4gIHVuY2hlY2tCeSAob2JqKSB7XG4gICAgdGhpcy5fdG9nZ2xlQ2hlY2tCeShmYWxzZSwgb2JqKVxuICB9XG5cbiAgX3RvZ2dsZUNoZWNrQnkgKGNoZWNrZWQsIG9iaikge1xuICAgIGlmICghb2JqLmhhc093blByb3BlcnR5KCdmaWVsZCcpIHx8ICFvYmouaGFzT3duUHJvcGVydHkoJ3ZhbHVlcycpKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBjb25zdCByb3dzID0gW11cbiAgICB0aGlzLmRhdGEuZm9yRWFjaCgocm93LCBpKSA9PiB7XG4gICAgICBpZiAoIXJvdy5oYXNPd25Qcm9wZXJ0eShvYmouZmllbGQpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgfVxuICAgICAgaWYgKG9iai52YWx1ZXMuaW5jbHVkZXMocm93W29iai5maWVsZF0pKSB7XG4gICAgICAgIGxldCAkZWwgPSB0aGlzLiRzZWxlY3RJdGVtLmZpbHRlcignOmVuYWJsZWQnKVxuICAgICAgICAgIC5maWx0ZXIoVXRpbHMuc3ByaW50ZignW2RhdGEtaW5kZXg9XCIlc1wiXScsIGkpKVxuXG4gICAgICAgICRlbCA9IGNoZWNrZWQgPyAkZWwubm90KCc6Y2hlY2tlZCcpIDogJGVsLmZpbHRlcignOmNoZWNrZWQnKVxuXG4gICAgICAgIGlmICghJGVsLmxlbmd0aCkge1xuICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG5cbiAgICAgICAgJGVsLnByb3AoJ2NoZWNrZWQnLCBjaGVja2VkKVxuICAgICAgICByb3dbdGhpcy5oZWFkZXIuc3RhdGVGaWVsZF0gPSBjaGVja2VkXG4gICAgICAgIHJvd3MucHVzaChyb3cpXG4gICAgICAgIHRoaXMudHJpZ2dlcihjaGVja2VkID8gJ2NoZWNrJyA6ICd1bmNoZWNrJywgcm93LCAkZWwpXG4gICAgICB9XG4gICAgfSlcbiAgICB0aGlzLnVwZGF0ZVNlbGVjdGVkKClcbiAgICB0aGlzLnRyaWdnZXIoY2hlY2tlZCA/ICdjaGVjay1zb21lJyA6ICd1bmNoZWNrLXNvbWUnLCByb3dzKVxuICB9XG5cbiAgcmVmcmVzaCAocGFyYW1zKSB7XG4gICAgaWYgKHBhcmFtcyAmJiBwYXJhbXMudXJsKSB7XG4gICAgICB0aGlzLm9wdGlvbnMudXJsID0gcGFyYW1zLnVybFxuICAgIH1cbiAgICBpZiAocGFyYW1zICYmIHBhcmFtcy5wYWdlTnVtYmVyKSB7XG4gICAgICB0aGlzLm9wdGlvbnMucGFnZU51bWJlciA9IHBhcmFtcy5wYWdlTnVtYmVyXG4gICAgfVxuICAgIGlmIChwYXJhbXMgJiYgcGFyYW1zLnBhZ2VTaXplKSB7XG4gICAgICB0aGlzLm9wdGlvbnMucGFnZVNpemUgPSBwYXJhbXMucGFnZVNpemVcbiAgICB9XG4gICAgdGhpcy50cmlnZ2VyKCdyZWZyZXNoJywgdGhpcy5pbml0U2VydmVyKHBhcmFtcyAmJiBwYXJhbXMuc2lsZW50LFxuICAgICAgcGFyYW1zICYmIHBhcmFtcy5xdWVyeSwgcGFyYW1zICYmIHBhcmFtcy51cmwpKVxuICB9XG5cbiAgZGVzdHJveSAoKSB7XG4gICAgdGhpcy4kZWwuaW5zZXJ0QmVmb3JlKHRoaXMuJGNvbnRhaW5lcilcbiAgICAkKHRoaXMub3B0aW9ucy50b29sYmFyKS5pbnNlcnRCZWZvcmUodGhpcy4kZWwpXG4gICAgdGhpcy4kY29udGFpbmVyLm5leHQoKS5yZW1vdmUoKVxuICAgIHRoaXMuJGNvbnRhaW5lci5yZW1vdmUoKVxuICAgIHRoaXMuJGVsLmh0bWwodGhpcy4kZWxfLmh0bWwoKSlcbiAgICAgIC5jc3MoJ21hcmdpbi10b3AnLCAnMCcpXG4gICAgICAuYXR0cignY2xhc3MnLCB0aGlzLiRlbF8uYXR0cignY2xhc3MnKSB8fCAnJykgLy8gcmVzZXQgdGhlIGNsYXNzXG4gIH1cblxuICByZXNldFZpZXcgKHBhcmFtcykge1xuICAgIGxldCBwYWRkaW5nID0gMFxuXG4gICAgaWYgKHBhcmFtcyAmJiBwYXJhbXMuaGVpZ2h0KSB7XG4gICAgICB0aGlzLm9wdGlvbnMuaGVpZ2h0ID0gcGFyYW1zLmhlaWdodFxuICAgIH1cblxuICAgIHRoaXMuJHNlbGVjdEFsbC5wcm9wKCdjaGVja2VkJywgdGhpcy4kc2VsZWN0SXRlbS5sZW5ndGggPiAwICYmXG4gICAgICB0aGlzLiRzZWxlY3RJdGVtLmxlbmd0aCA9PT0gdGhpcy4kc2VsZWN0SXRlbS5maWx0ZXIoJzpjaGVja2VkJykubGVuZ3RoKVxuXG4gICAgdGhpcy4kdGFibGVDb250YWluZXIudG9nZ2xlQ2xhc3MoJ2hhcy1jYXJkLXZpZXcnLCB0aGlzLm9wdGlvbnMuY2FyZFZpZXcpXG5cbiAgICBpZiAoIXRoaXMub3B0aW9ucy5jYXJkVmlldyAmJiB0aGlzLm9wdGlvbnMuc2hvd0hlYWRlciAmJiB0aGlzLm9wdGlvbnMuaGVpZ2h0KSB7XG4gICAgICB0aGlzLiR0YWJsZUhlYWRlci5zaG93KClcbiAgICAgIHRoaXMucmVzZXRIZWFkZXIoKVxuICAgICAgcGFkZGluZyArPSB0aGlzLiRoZWFkZXIub3V0ZXJIZWlnaHQodHJ1ZSlcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy4kdGFibGVIZWFkZXIuaGlkZSgpXG4gICAgICB0aGlzLnRyaWdnZXIoJ3Bvc3QtaGVhZGVyJylcbiAgICB9XG5cbiAgICBpZiAoIXRoaXMub3B0aW9ucy5jYXJkVmlldyAmJiB0aGlzLm9wdGlvbnMuc2hvd0Zvb3Rlcikge1xuICAgICAgdGhpcy4kdGFibGVGb290ZXIuc2hvdygpXG4gICAgICB0aGlzLmZpdEZvb3RlcigpXG4gICAgICBpZiAodGhpcy5vcHRpb25zLmhlaWdodCkge1xuICAgICAgICBwYWRkaW5nICs9IHRoaXMuJHRhYmxlRm9vdGVyLm91dGVySGVpZ2h0KHRydWUpXG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHRoaXMub3B0aW9ucy5oZWlnaHQpIHtcbiAgICAgIGNvbnN0IHRvb2xiYXJIZWlnaHQgPSB0aGlzLiR0b29sYmFyLm91dGVySGVpZ2h0KHRydWUpXG4gICAgICBjb25zdCBwYWdpbmF0aW9uSGVpZ2h0ID0gdGhpcy4kcGFnaW5hdGlvbi5vdXRlckhlaWdodCh0cnVlKVxuICAgICAgY29uc3QgaGVpZ2h0ID0gdGhpcy5vcHRpb25zLmhlaWdodCAtIHRvb2xiYXJIZWlnaHQgLSBwYWdpbmF0aW9uSGVpZ2h0XG4gICAgICBjb25zdCB0YWJsZUhlaWdodCA9IHRoaXMuJHRhYmxlQm9keS5maW5kKCd0YWJsZScpLm91dGVySGVpZ2h0KHRydWUpXG4gICAgICB0aGlzLiR0YWJsZUNvbnRhaW5lci5jc3MoJ2hlaWdodCcsIGAke2hlaWdodH1weGApXG4gICAgICB0aGlzLiR0YWJsZUJvcmRlciAmJiB0aGlzLiR0YWJsZUJvcmRlci5jc3MoJ2hlaWdodCcsIGAke2hlaWdodCAtIHRhYmxlSGVpZ2h0IC0gcGFkZGluZyAtIDF9cHhgKVxuICAgIH1cblxuICAgIGlmICh0aGlzLm9wdGlvbnMuY2FyZFZpZXcpIHtcbiAgICAgIC8vIHJlbW92ZSB0aGUgZWxlbWVudCBjc3NcbiAgICAgIHRoaXMuJGVsLmNzcygnbWFyZ2luLXRvcCcsICcwJylcbiAgICAgIHRoaXMuJHRhYmxlQ29udGFpbmVyLmNzcygncGFkZGluZy1ib3R0b20nLCAnMCcpXG4gICAgICB0aGlzLiR0YWJsZUZvb3Rlci5oaWRlKClcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gQXNzaWduIHRoZSBjb3JyZWN0IHNvcnRhYmxlIGFycm93XG4gICAgICB0aGlzLmdldENhcmV0KClcbiAgICAgIHRoaXMuJHRhYmxlQ29udGFpbmVyLmNzcygncGFkZGluZy1ib3R0b20nLCBgJHtwYWRkaW5nfXB4YClcbiAgICB9XG5cbiAgICB0aGlzLnRyaWdnZXIoJ3Jlc2V0LXZpZXcnKVxuICB9XG5cbiAgcmVzZXRXaWR0aCAoKSB7XG4gICAgaWYgKHRoaXMub3B0aW9ucy5zaG93SGVhZGVyICYmIHRoaXMub3B0aW9ucy5oZWlnaHQpIHtcbiAgICAgIHRoaXMuZml0SGVhZGVyKClcbiAgICB9XG4gICAgaWYgKHRoaXMub3B0aW9ucy5zaG93Rm9vdGVyICYmICF0aGlzLm9wdGlvbnMuY2FyZFZpZXcpIHtcbiAgICAgIHRoaXMuZml0Rm9vdGVyKClcbiAgICB9XG4gIH1cblxuICBzaG93TG9hZGluZyAoKSB7XG4gICAgdGhpcy4kdGFibGVMb2FkaW5nLmNzcygnZGlzcGxheScsICdmbGV4JylcbiAgfVxuXG4gIGhpZGVMb2FkaW5nICgpIHtcbiAgICB0aGlzLiR0YWJsZUxvYWRpbmcuY3NzKCdkaXNwbGF5JywgJ25vbmUnKVxuICB9XG5cbiAgdG9nZ2xlUGFnaW5hdGlvbiAoKSB7XG4gICAgdGhpcy5vcHRpb25zLnBhZ2luYXRpb24gPSAhdGhpcy5vcHRpb25zLnBhZ2luYXRpb25cblxuICAgIGNvbnN0IGljb24gPSB0aGlzLm9wdGlvbnMuc2hvd0J1dHRvbkljb25zID8gdGhpcy5vcHRpb25zLnBhZ2luYXRpb24gPyB0aGlzLm9wdGlvbnMuaWNvbnMucGFnaW5hdGlvblN3aXRjaERvd24gOiB0aGlzLm9wdGlvbnMuaWNvbnMucGFnaW5hdGlvblN3aXRjaFVwIDogJydcbiAgICBjb25zdCB0ZXh0ID0gdGhpcy5vcHRpb25zLnNob3dCdXR0b25UZXh0ID8gdGhpcy5vcHRpb25zLnBhZ2luYXRpb24gPyB0aGlzLm9wdGlvbnMuZm9ybWF0UGFnaW5hdGlvblN3aXRjaFVwKCkgOiB0aGlzLm9wdGlvbnMuZm9ybWF0UGFnaW5hdGlvblN3aXRjaERvd24oKSA6ICcnXG4gICAgdGhpcy4kdG9vbGJhci5maW5kKCdidXR0b25bbmFtZT1cInBhZ2luYXRpb25Td2l0Y2hcIl0nKVxuICAgICAgLmh0bWwoVXRpbHMuc3ByaW50Zih0aGlzLmNvbnN0YW50cy5odG1sLmljb24sIHRoaXMub3B0aW9ucy5pY29uc1ByZWZpeCwgaWNvbikgKyAnICcgKyB0ZXh0KVxuICAgIHRoaXMudXBkYXRlUGFnaW5hdGlvbigpXG4gIH1cblxuICB0b2dnbGVGdWxsc2NyZWVuICgpIHtcbiAgICB0aGlzLiRlbC5jbG9zZXN0KCcuYm9vdHN0cmFwLXRhYmxlJykudG9nZ2xlQ2xhc3MoJ2Z1bGxzY3JlZW4nKVxuICAgIHRoaXMucmVzZXRWaWV3KClcbiAgfVxuXG4gIHRvZ2dsZVZpZXcgKCkge1xuICAgIHRoaXMub3B0aW9ucy5jYXJkVmlldyA9ICF0aGlzLm9wdGlvbnMuY2FyZFZpZXdcbiAgICB0aGlzLmluaXRIZWFkZXIoKVxuXG4gICAgY29uc3QgaWNvbiA9IHRoaXMub3B0aW9ucy5zaG93QnV0dG9uSWNvbnMgPyB0aGlzLm9wdGlvbnMuY2FyZFZpZXcgPyB0aGlzLm9wdGlvbnMuaWNvbnMudG9nZ2xlT24gOiB0aGlzLm9wdGlvbnMuaWNvbnMudG9nZ2xlT2ZmIDogJydcbiAgICBjb25zdCB0ZXh0ID0gdGhpcy5vcHRpb25zLnNob3dCdXR0b25UZXh0ID8gdGhpcy5vcHRpb25zLmNhcmRWaWV3ID8gdGhpcy5vcHRpb25zLmZvcm1hdFRvZ2dsZU9mZigpIDogdGhpcy5vcHRpb25zLmZvcm1hdFRvZ2dsZU9uKCkgOiAnJ1xuICAgIHRoaXMuJHRvb2xiYXIuZmluZCgnYnV0dG9uW25hbWU9XCJ0b2dnbGVcIl0nKVxuICAgICAgLmh0bWwoVXRpbHMuc3ByaW50Zih0aGlzLmNvbnN0YW50cy5odG1sLmljb24sIHRoaXMub3B0aW9ucy5pY29uc1ByZWZpeCwgaWNvbikgKyAnICcgKyB0ZXh0KVxuICAgIHRoaXMuaW5pdEJvZHkoKVxuICAgIHRoaXMudHJpZ2dlcigndG9nZ2xlJywgdGhpcy5vcHRpb25zLmNhcmRWaWV3KVxuICB9XG5cbiAgcmVzZXRTZWFyY2ggKHRleHQpIHtcbiAgICBjb25zdCAkc2VhcmNoID0gdGhpcy4kdG9vbGJhci5maW5kKCcuc2VhcmNoIGlucHV0JylcbiAgICAkc2VhcmNoLnZhbCh0ZXh0IHx8ICcnKVxuICAgIHRoaXMub25TZWFyY2goe2N1cnJlbnRUYXJnZXQ6ICRzZWFyY2h9KVxuICB9XG5cbiAgZmlsdGVyQnkgKGNvbHVtbnMsIG9wdGlvbnMpIHtcbiAgICB0aGlzLmZpbHRlck9wdGlvbnMgPSBVdGlscy5pc0VtcHR5T2JqZWN0KG9wdGlvbnMpID8gdGhpcy5vcHRpb25zLmZpbHRlck9wdGlvbnMgOiAkLmV4dGVuZCh0aGlzLm9wdGlvbnMuZmlsdGVyT3B0aW9ucywgb3B0aW9ucylcbiAgICB0aGlzLmZpbHRlckNvbHVtbnMgPSBVdGlscy5pc0VtcHR5T2JqZWN0KGNvbHVtbnMpID8ge30gOiBjb2x1bW5zXG4gICAgdGhpcy5vcHRpb25zLnBhZ2VOdW1iZXIgPSAxXG4gICAgdGhpcy5pbml0U2VhcmNoKClcbiAgICB0aGlzLnVwZGF0ZVBhZ2luYXRpb24oKVxuICB9XG5cbiAgc2Nyb2xsVG8gKHBhcmFtcykge1xuICAgIGlmICh0eXBlb2YgcGFyYW1zID09PSAndW5kZWZpbmVkJykge1xuICAgICAgcmV0dXJuIHRoaXMuJHRhYmxlQm9keS5zY3JvbGxUb3AoKVxuICAgIH1cblxuICAgIGxldCBvcHRpb25zID0ge3VuaXQ6ICdweCcsIHZhbHVlOiAwfVxuICAgIGlmICh0eXBlb2YgcGFyYW1zID09PSAnb2JqZWN0Jykge1xuICAgICAgb3B0aW9ucyA9IE9iamVjdC5hc3NpZ24ob3B0aW9ucywgcGFyYW1zKVxuICAgIH0gZWxzZSBpZiAodHlwZW9mIHBhcmFtcyA9PT0gJ3N0cmluZycgJiYgcGFyYW1zID09PSAnYm90dG9tJykge1xuICAgICAgb3B0aW9ucy52YWx1ZSA9IHRoaXMuJHRhYmxlQm9keVswXS5zY3JvbGxIZWlnaHRcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBwYXJhbXMgPT09ICdzdHJpbmcnKSB7XG4gICAgICBvcHRpb25zLnZhbHVlID0gcGFyYW1zXG4gICAgfVxuXG4gICAgbGV0IHNjcm9sbFRvID0gb3B0aW9ucy52YWx1ZVxuICAgIGlmIChvcHRpb25zLnVuaXQgPT09ICdyb3dzJykge1xuICAgICAgc2Nyb2xsVG8gPSAwXG4gICAgICB0aGlzLiRib2R5LmZpbmQoYD4gdHI6bHQoJHtvcHRpb25zLnZhbHVlfSlgKS5lYWNoKChpLCBlbCkgPT4ge1xuICAgICAgICBzY3JvbGxUbyArPSAkKGVsKS5vdXRlckhlaWdodCh0cnVlKVxuICAgICAgfSlcbiAgICB9XG5cbiAgICB0aGlzLiR0YWJsZUJvZHkuc2Nyb2xsVG9wKHNjcm9sbFRvKVxuICB9XG5cbiAgZ2V0U2Nyb2xsUG9zaXRpb24gKCkge1xuICAgIHJldHVybiB0aGlzLnNjcm9sbFRvKClcbiAgfVxuXG4gIHNlbGVjdFBhZ2UgKHBhZ2UpIHtcbiAgICBpZiAocGFnZSA+IDAgJiYgcGFnZSA8PSB0aGlzLm9wdGlvbnMudG90YWxQYWdlcykge1xuICAgICAgdGhpcy5vcHRpb25zLnBhZ2VOdW1iZXIgPSBwYWdlXG4gICAgICB0aGlzLnVwZGF0ZVBhZ2luYXRpb24oKVxuICAgIH1cbiAgfVxuXG4gIHByZXZQYWdlICgpIHtcbiAgICBpZiAodGhpcy5vcHRpb25zLnBhZ2VOdW1iZXIgPiAxKSB7XG4gICAgICB0aGlzLm9wdGlvbnMucGFnZU51bWJlci0tXG4gICAgICB0aGlzLnVwZGF0ZVBhZ2luYXRpb24oKVxuICAgIH1cbiAgfVxuXG4gIG5leHRQYWdlICgpIHtcbiAgICBpZiAodGhpcy5vcHRpb25zLnBhZ2VOdW1iZXIgPCB0aGlzLm9wdGlvbnMudG90YWxQYWdlcykge1xuICAgICAgdGhpcy5vcHRpb25zLnBhZ2VOdW1iZXIrK1xuICAgICAgdGhpcy51cGRhdGVQYWdpbmF0aW9uKClcbiAgICB9XG4gIH1cblxuICB0b2dnbGVEZXRhaWxWaWV3IChpbmRleCwgX2NvbHVtbkRldGFpbEZvcm1hdHRlcikge1xuICAgIGNvbnN0ICR0ciA9IHRoaXMuJGJvZHkuZmluZChVdGlscy5zcHJpbnRmKCc+IHRyW2RhdGEtaW5kZXg9XCIlc1wiXScsIGluZGV4KSlcblxuICAgIGlmICgkdHIubmV4dCgpLmlzKCd0ci5kZXRhaWwtdmlldycpKSB7XG4gICAgICB0aGlzLmNvbGxhcHNlUm93KGluZGV4KVxuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmV4cGFuZFJvdyhpbmRleCwgX2NvbHVtbkRldGFpbEZvcm1hdHRlcilcbiAgICB9XG5cbiAgICB0aGlzLnJlc2V0VmlldygpXG4gIH1cblxuICBleHBhbmRSb3cgKGluZGV4LCBfY29sdW1uRGV0YWlsRm9ybWF0dGVyKSB7XG4gICAgY29uc3Qgcm93ID0gdGhpcy5kYXRhW2luZGV4XVxuICAgIGNvbnN0ICR0ciA9IHRoaXMuJGJvZHkuZmluZChVdGlscy5zcHJpbnRmKCc+IHRyW2RhdGEtaW5kZXg9XCIlc1wiXVtkYXRhLWhhcy1kZXRhaWwtdmlld10nLCBpbmRleCkpXG4gICAgaWYgKCR0ci5uZXh0KCkuaXMoJ3RyLmRldGFpbC12aWV3JykpIHtcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGlmICh0aGlzLm9wdGlvbnMuZGV0YWlsVmlld0ljb24pIHtcbiAgICAgICR0ci5maW5kKCdhLmRldGFpbC1pY29uJykuaHRtbChVdGlscy5zcHJpbnRmKHRoaXMuY29uc3RhbnRzLmh0bWwuaWNvbiwgdGhpcy5vcHRpb25zLmljb25zUHJlZml4LCB0aGlzLm9wdGlvbnMuaWNvbnMuZGV0YWlsQ2xvc2UpKVxuICAgIH1cblxuICAgICR0ci5hZnRlcihVdGlscy5zcHJpbnRmKCc8dHIgY2xhc3M9XCJkZXRhaWwtdmlld1wiPjx0ZCBjb2xzcGFuPVwiJXNcIj48L3RkPjwvdHI+JywgJHRyLmNoaWxkcmVuKCd0ZCcpLmxlbmd0aCkpXG5cbiAgICBjb25zdCAkZWxlbWVudCA9ICR0ci5uZXh0KCkuZmluZCgndGQnKVxuXG4gICAgY29uc3QgZGV0YWlsRm9ybWF0dGVyID0gX2NvbHVtbkRldGFpbEZvcm1hdHRlciB8fCB0aGlzLm9wdGlvbnMuZGV0YWlsRm9ybWF0dGVyXG4gICAgY29uc3QgY29udGVudCA9IFV0aWxzLmNhbGN1bGF0ZU9iamVjdFZhbHVlKHRoaXMub3B0aW9ucywgZGV0YWlsRm9ybWF0dGVyLCBbaW5kZXgsIHJvdywgJGVsZW1lbnRdLCAnJylcbiAgICBpZiAoJGVsZW1lbnQubGVuZ3RoID09PSAxKSB7XG4gICAgICAkZWxlbWVudC5hcHBlbmQoY29udGVudClcbiAgICB9XG5cbiAgICB0aGlzLnRyaWdnZXIoJ2V4cGFuZC1yb3cnLCBpbmRleCwgcm93LCAkZWxlbWVudClcbiAgfVxuXG4gIGNvbGxhcHNlUm93IChpbmRleCkge1xuICAgIGNvbnN0IHJvdyA9IHRoaXMuZGF0YVtpbmRleF1cbiAgICBjb25zdCAkdHIgPSB0aGlzLiRib2R5LmZpbmQoVXRpbHMuc3ByaW50ZignPiB0cltkYXRhLWluZGV4PVwiJXNcIl1bZGF0YS1oYXMtZGV0YWlsLXZpZXddJywgaW5kZXgpKVxuICAgIGlmICghJHRyLm5leHQoKS5pcygndHIuZGV0YWlsLXZpZXcnKSkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgaWYgKHRoaXMub3B0aW9ucy5kZXRhaWxWaWV3SWNvbikge1xuICAgICAgJHRyLmZpbmQoJ2EuZGV0YWlsLWljb24nKS5odG1sKFV0aWxzLnNwcmludGYodGhpcy5jb25zdGFudHMuaHRtbC5pY29uLCB0aGlzLm9wdGlvbnMuaWNvbnNQcmVmaXgsIHRoaXMub3B0aW9ucy5pY29ucy5kZXRhaWxPcGVuKSlcbiAgICB9XG5cbiAgICB0aGlzLnRyaWdnZXIoJ2NvbGxhcHNlLXJvdycsIGluZGV4LCByb3csICR0ci5uZXh0KCkpXG4gICAgJHRyLm5leHQoKS5yZW1vdmUoKVxuICB9XG5cbiAgZXhwYW5kQWxsUm93cyAoKSB7XG4gICAgY29uc3QgdHJzID0gdGhpcy4kYm9keS5maW5kKCc+IHRyW2RhdGEtaW5kZXhdW2RhdGEtaGFzLWRldGFpbC12aWV3XScpXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0cnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHRoaXMuZXhwYW5kUm93KCQodHJzW2ldKS5kYXRhKCdpbmRleCcpKVxuICAgIH1cbiAgfVxuXG4gIGNvbGxhcHNlQWxsUm93cyAoKSB7XG4gICAgY29uc3QgdHJzID0gdGhpcy4kYm9keS5maW5kKCc+IHRyW2RhdGEtaW5kZXhdW2RhdGEtaGFzLWRldGFpbC12aWV3XScpXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0cnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHRoaXMuY29sbGFwc2VSb3coJCh0cnNbaV0pLmRhdGEoJ2luZGV4JykpXG4gICAgfVxuICB9XG5cbiAgdXBkYXRlQ29sdW1uVGl0bGUgKHBhcmFtcykge1xuICAgIGlmICghcGFyYW1zLmhhc093blByb3BlcnR5KCdmaWVsZCcpIHx8ICFwYXJhbXMuaGFzT3duUHJvcGVydHkoJ3RpdGxlJykpIHtcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIHRoaXMuY29sdW1uc1t0aGlzLmZpZWxkc0NvbHVtbnNJbmRleFtwYXJhbXMuZmllbGRdXS50aXRsZSA9XG4gICAgICB0aGlzLm9wdGlvbnMuZXNjYXBlID8gVXRpbHMuZXNjYXBlSFRNTChwYXJhbXMudGl0bGUpIDogcGFyYW1zLnRpdGxlXG5cbiAgICBpZiAodGhpcy5jb2x1bW5zW3RoaXMuZmllbGRzQ29sdW1uc0luZGV4W3BhcmFtcy5maWVsZF1dLnZpc2libGUpIHtcbiAgICAgIGNvbnN0IGhlYWRlciA9IHRoaXMub3B0aW9ucy5oZWlnaHQgIT09IHVuZGVmaW5lZCA/IHRoaXMuJHRhYmxlSGVhZGVyIDogdGhpcy4kaGVhZGVyXG4gICAgICBoZWFkZXIuZmluZCgndGhbZGF0YS1maWVsZF0nKS5lYWNoKChpLCBlbCkgPT4ge1xuICAgICAgICBpZiAoJChlbCkuZGF0YSgnZmllbGQnKSA9PT0gcGFyYW1zLmZpZWxkKSB7XG4gICAgICAgICAgJCgkKGVsKS5maW5kKCcudGgtaW5uZXInKVswXSkudGV4dChwYXJhbXMudGl0bGUpXG4gICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfVxuICB9XG5cbiAgdXBkYXRlRm9ybWF0VGV4dCAoZm9ybWF0TmFtZSwgdGV4dCkge1xuICAgIGlmICghL15mb3JtYXQvLnRlc3QoZm9ybWF0TmFtZSkgfHwgIXRoaXMub3B0aW9uc1tmb3JtYXROYW1lXSkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuICAgIGlmICh0eXBlb2YgdGV4dCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHRoaXMub3B0aW9uc1tmb3JtYXROYW1lXSA9ICgpID0+IHRleHRcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiB0ZXh0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aGlzLm9wdGlvbnNbZm9ybWF0TmFtZV0gPSB0ZXh0XG4gICAgfVxuICAgIHRoaXMuaW5pdFRvb2xiYXIoKVxuICAgIHRoaXMuaW5pdFBhZ2luYXRpb24oKVxuICAgIHRoaXMuaW5pdEJvZHkoKVxuICB9XG59XG5cbkJvb3RzdHJhcFRhYmxlLlZFUlNJT04gPSBDb25zdGFudHMuVkVSU0lPTlxuQm9vdHN0cmFwVGFibGUuREVGQVVMVFMgPSBDb25zdGFudHMuREVGQVVMVFNcbkJvb3RzdHJhcFRhYmxlLkxPQ0FMRVMgPSBDb25zdGFudHMuTE9DQUxFU1xuQm9vdHN0cmFwVGFibGUuQ09MVU1OX0RFRkFVTFRTID0gQ29uc3RhbnRzLkNPTFVNTl9ERUZBVUxUU1xuQm9vdHN0cmFwVGFibGUuTUVUSE9EUyA9IENvbnN0YW50cy5NRVRIT0RTXG5Cb290c3RyYXBUYWJsZS5FVkVOVFMgPSBDb25zdGFudHMuRVZFTlRTXG5cbi8vIEJPT1RTVFJBUCBUQUJMRSBQTFVHSU4gREVGSU5JVElPTlxuLy8gPT09PT09PT09PT09PT09PT09PT09PT1cblxuJC5Cb290c3RyYXBUYWJsZSA9IEJvb3RzdHJhcFRhYmxlXG4kLmZuLmJvb3RzdHJhcFRhYmxlID0gZnVuY3Rpb24gKG9wdGlvbiwgLi4uYXJncykge1xuICBsZXQgdmFsdWVcblxuICB0aGlzLmVhY2goKGksIGVsKSA9PiB7XG4gICAgbGV0IGRhdGEgPSAkKGVsKS5kYXRhKCdib290c3RyYXAudGFibGUnKVxuICAgIGNvbnN0IG9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgQm9vdHN0cmFwVGFibGUuREVGQVVMVFMsICQoZWwpLmRhdGEoKSxcbiAgICAgIHR5cGVvZiBvcHRpb24gPT09ICdvYmplY3QnICYmIG9wdGlvbilcblxuICAgIGlmICh0eXBlb2Ygb3B0aW9uID09PSAnc3RyaW5nJykge1xuICAgICAgaWYgKCFDb25zdGFudHMuTUVUSE9EUy5pbmNsdWRlcyhvcHRpb24pKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBtZXRob2Q6ICR7b3B0aW9ufWApXG4gICAgICB9XG5cbiAgICAgIGlmICghZGF0YSkge1xuICAgICAgICByZXR1cm5cbiAgICAgIH1cblxuICAgICAgdmFsdWUgPSBkYXRhW29wdGlvbl0oLi4uYXJncylcblxuICAgICAgaWYgKG9wdGlvbiA9PT0gJ2Rlc3Ryb3knKSB7XG4gICAgICAgICQoZWwpLnJlbW92ZURhdGEoJ2Jvb3RzdHJhcC50YWJsZScpXG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKCFkYXRhKSB7XG4gICAgICAkKGVsKS5kYXRhKCdib290c3RyYXAudGFibGUnLCAoZGF0YSA9IG5ldyAkLkJvb3RzdHJhcFRhYmxlKGVsLCBvcHRpb25zKSkpXG4gICAgfVxuICB9KVxuXG4gIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICd1bmRlZmluZWQnID8gdGhpcyA6IHZhbHVlXG59XG5cbiQuZm4uYm9vdHN0cmFwVGFibGUuQ29uc3RydWN0b3IgPSBCb290c3RyYXBUYWJsZVxuJC5mbi5ib290c3RyYXBUYWJsZS50aGVtZSA9IENvbnN0YW50cy5USEVNRVxuJC5mbi5ib290c3RyYXBUYWJsZS5WRVJTSU9OID0gQ29uc3RhbnRzLlZFUlNJT05cbiQuZm4uYm9vdHN0cmFwVGFibGUuZGVmYXVsdHMgPSBCb290c3RyYXBUYWJsZS5ERUZBVUxUU1xuJC5mbi5ib290c3RyYXBUYWJsZS5jb2x1bW5EZWZhdWx0cyA9IEJvb3RzdHJhcFRhYmxlLkNPTFVNTl9ERUZBVUxUU1xuJC5mbi5ib290c3RyYXBUYWJsZS5ldmVudHMgPSBCb290c3RyYXBUYWJsZS5FVkVOVFNcbiQuZm4uYm9vdHN0cmFwVGFibGUubG9jYWxlcyA9IEJvb3RzdHJhcFRhYmxlLkxPQ0FMRVNcbiQuZm4uYm9vdHN0cmFwVGFibGUubWV0aG9kcyA9IEJvb3RzdHJhcFRhYmxlLk1FVEhPRFNcbiQuZm4uYm9vdHN0cmFwVGFibGUudXRpbHMgPSBVdGlsc1xuXG4vLyBCT09UU1RSQVAgVEFCTEUgSU5JVFxuLy8gPT09PT09PT09PT09PT09PT09PT09PT1cblxuJCgoKSA9PiB7XG4gICQoJ1tkYXRhLXRvZ2dsZT1cInRhYmxlXCJdJykuYm9vdHN0cmFwVGFibGUoKVxufSlcblxuZXhwb3J0IGRlZmF1bHQgQm9vdHN0cmFwVGFibGVcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/bootstrap-table/src/bootstrap-table.js\n");

/***/ }),

/***/ "./node_modules/bootstrap-table/src/bootstrap-table.scss":
/*!***************************************************************!*\
  !*** ./node_modules/bootstrap-table/src/bootstrap-table.scss ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwLXRhYmxlL3NyYy9ib290c3RyYXAtdGFibGUuc2Nzcz9lN2UzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC10YWJsZS9zcmMvYm9vdHN0cmFwLXRhYmxlLnNjc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/bootstrap-table/src/bootstrap-table.scss\n");

/***/ }),

/***/ "./node_modules/bootstrap-table/src/constants/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/bootstrap-table/src/constants/index.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst VERSION = '1.15.4'\n\nlet bootstrapVersion = 4\ntry {\n  const rawVersion = $.fn.dropdown.Constructor.VERSION\n\n  // Only try to parse VERSION if it is defined.\n  // It is undefined in older versions of Bootstrap (tested with 3.1.1).\n  if (rawVersion !== undefined) {\n    bootstrapVersion = parseInt(rawVersion, 10)\n  }\n} catch (e) {\n  // ignore\n}\n\nconst CONSTANTS = {\n  3: {\n    iconsPrefix: 'glyphicon',\n    icons: {\n      paginationSwitchDown: 'glyphicon-collapse-down icon-chevron-down',\n      paginationSwitchUp: 'glyphicon-collapse-up icon-chevron-up',\n      refresh: 'glyphicon-refresh icon-refresh',\n      toggleOff: 'glyphicon-list-alt icon-list-alt',\n      toggleOn: 'glyphicon-list-alt icon-list-alt',\n      columns: 'glyphicon-th icon-th',\n      detailOpen: 'glyphicon-plus icon-plus',\n      detailClose: 'glyphicon-minus icon-minus',\n      fullscreen: 'glyphicon-fullscreen',\n      search: 'glyphicon-search',\n      clearSearch: 'glyphicon-trash'\n    },\n    classes: {\n      buttonsPrefix: 'btn',\n      buttons: 'default',\n      buttonsGroup: 'btn-group',\n      buttonsDropdown: 'btn-group',\n      pull: 'pull',\n      inputGroup: 'input-group',\n      input: 'form-control',\n      paginationDropdown: 'btn-group dropdown',\n      dropup: 'dropup',\n      dropdownActive: 'active',\n      paginationActive: 'active',\n      buttonActive: 'active'\n    },\n    html: {\n      toolbarDropdown: ['<ul class=\"dropdown-menu\" role=\"menu\">', '</ul>'],\n      toolbarDropdownItem: '<li role=\"menuitem\"><label>%s</label></li>',\n      toolbarDropdownSeperator: '<li class=\"divider\"></li>',\n      pageDropdown: ['<ul class=\"dropdown-menu\" role=\"menu\">', '</ul>'],\n      pageDropdownItem: '<li role=\"menuitem\" class=\"%s\"><a href=\"#\">%s</a></li>',\n      dropdownCaret: '<span class=\"caret\"></span>',\n      pagination: ['<ul class=\"pagination%s\">', '</ul>'],\n      paginationItem: '<li class=\"page-item%s\"><a class=\"page-link\" aria-label=\"%s\" href=\"javascript:void(0)\">%s</a></li>',\n      icon: '<i class=\"%s %s\"></i>',\n      inputGroup: '<div class=\"input-group\">%s<span class=\"input-group-btn\">%s</span></div>',\n      searchInput: '<input class=\"%s%s\" type=\"text\" placeholder=\"%s\">',\n      searchButton: '<button class=\"%s\" type=\"button\" name=\"search\" title=\"%s\">%s %s</button>',\n      searchClearButton: '<button class=\"%s\" type=\"button\" name=\"clearSearch\" title=\"%s\">%s %s</button>'\n    }\n  },\n  4: {\n    iconsPrefix: 'fa',\n    icons: {\n      paginationSwitchDown: 'fa-caret-square-down',\n      paginationSwitchUp: 'fa-caret-square-up',\n      refresh: 'fa-sync',\n      toggleOff: 'fa-toggle-off',\n      toggleOn: 'fa-toggle-on',\n      columns: 'fa-th-list',\n      detailOpen: 'fa-plus',\n      detailClose: 'fa-minus',\n      fullscreen: 'fa-arrows-alt',\n      search: 'fa-search',\n      clearSearch: 'fa-trash'\n    },\n    classes: {\n      buttonsPrefix: 'btn',\n      buttons: 'secondary',\n      buttonsGroup: 'btn-group',\n      buttonsDropdown: 'btn-group',\n      pull: 'float',\n      inputGroup: 'btn-group',\n      input: 'form-control',\n      paginationDropdown: 'btn-group dropdown',\n      dropup: 'dropup',\n      dropdownActive: 'active',\n      paginationActive: 'active',\n      buttonActive: 'active'\n    },\n    html: {\n      toolbarDropdown: ['<div class=\"dropdown-menu dropdown-menu-right\">', '</div>'],\n      toolbarDropdownItem: '<label class=\"dropdown-item\">%s</label>',\n      pageDropdown: ['<div class=\"dropdown-menu\">', '</div>'],\n      pageDropdownItem: '<a class=\"dropdown-item %s\" href=\"#\">%s</a>',\n      toolbarDropdownSeperator: '<div class=\"dropdown-divider\"></div>',\n      dropdownCaret: '<span class=\"caret\"></span>',\n      pagination: ['<ul class=\"pagination%s\">', '</ul>'],\n      paginationItem: '<li class=\"page-item%s\"><a class=\"page-link\" aria-label=\"%s\" href=\"javascript:void(0)\">%s</a></li>',\n      icon: '<i class=\"%s %s\"></i>',\n      inputGroup: '<div class=\"input-group\">%s<div class=\"input-group-append\">%s</div></div>',\n      searchInput: '<input class=\"%s%s\" type=\"text\" placeholder=\"%s\">',\n      searchButton: '<button class=\"%s\" type=\"button\" name=\"search\" title=\"%s\">%s %s</button>',\n      searchClearButton: '<button class=\"%s\" type=\"button\" name=\"clearSearch\" title=\"%s\">%s %s</button>'\n    }\n  }\n}[bootstrapVersion]\n\nconst DEFAULTS = {\n  height: undefined,\n  classes: 'table table-bordered table-hover',\n  theadClasses: '',\n  rowStyle (row, index) {\n    return {}\n  },\n  rowAttributes (row, index) {\n    return {}\n  },\n  undefinedText: '-',\n  locale: undefined,\n  virtualScroll: false,\n  virtualScrollItemHeight: undefined,\n  sortable: true,\n  sortClass: undefined,\n  silentSort: true,\n  sortName: undefined,\n  sortOrder: 'asc',\n  sortStable: false,\n  rememberOrder: false,\n  customSort: undefined,\n  columns: [\n    []\n  ],\n  data: [],\n  url: undefined,\n  method: 'get',\n  cache: true,\n  contentType: 'application/json',\n  dataType: 'json',\n  ajax: undefined,\n  ajaxOptions: {},\n  queryParams (params) {\n    return params\n  },\n  queryParamsType: 'limit', // 'limit', undefined\n  responseHandler (res) {\n    return res\n  },\n  totalField: 'total',\n  totalNotFilteredField: 'totalNotFiltered',\n  dataField: 'rows',\n  pagination: false,\n  onlyInfoPagination: false,\n  showExtendedPagination: false,\n  paginationLoop: true,\n  sidePagination: 'client', // client or server\n  totalRows: 0,\n  totalNotFiltered: 0,\n  pageNumber: 1,\n  pageSize: 10,\n  pageList: [10, 25, 50, 100],\n  paginationHAlign: 'right', // right, left\n  paginationVAlign: 'bottom', // bottom, top, both\n  paginationDetailHAlign: 'left', // right, left\n  paginationPreText: '&lsaquo;',\n  paginationNextText: '&rsaquo;',\n  paginationSuccessivelySize: 5, // Maximum successively number of pages in a row\n  paginationPagesBySide: 1, // Number of pages on each side (right, left) of the current page.\n  paginationUseIntermediate: false, // Calculate intermediate pages for quick access\n  search: false,\n  searchOnEnterKey: false,\n  strictSearch: false,\n  visibleSearch: false,\n  showButtonIcons: true,\n  showButtonText: false,\n  showSearchButton: false,\n  showSearchClearButton: false,\n  trimOnSearch: true,\n  searchAlign: 'right',\n  searchTimeOut: 500,\n  searchText: '',\n  customSearch: undefined,\n  showHeader: true,\n  showFooter: false,\n  footerStyle (row, index) {\n    return {}\n  },\n  showColumns: false,\n  showColumnsToggleAll: false,\n  minimumCountColumns: 1,\n  showPaginationSwitch: false,\n  showRefresh: false,\n  showToggle: false,\n  showFullscreen: false,\n  smartDisplay: true,\n  escape: false,\n  filterOptions: {\n    filterAlgorithm: 'and'\n  },\n  idField: undefined,\n  selectItemName: 'btSelectItem',\n  clickToSelect: false,\n  ignoreClickToSelectOn ({tagName}) {\n    return ['A', 'BUTTON'].includes(tagName)\n  },\n  singleSelect: false,\n  checkboxHeader: true,\n  maintainMetaData: false,\n  multipleSelectRow: false,\n  uniqueId: undefined,\n  cardView: false,\n  detailView: false,\n  detailViewIcon: true,\n  detailViewByClick: false,\n  detailFormatter (index, row) {\n    return ''\n  },\n  detailFilter (index, row) {\n    return true\n  },\n  toolbar: undefined,\n  toolbarAlign: 'left',\n  buttonsToolbar: undefined,\n  buttonsAlign: 'right',\n  buttonsPrefix: CONSTANTS.classes.buttonsPrefix,\n  buttonsClass: CONSTANTS.classes.buttons,\n  icons: CONSTANTS.icons,\n  html: CONSTANTS.html,\n  iconSize: undefined,\n  iconsPrefix: CONSTANTS.iconsPrefix, // glyphicon or fa(font-awesome)\n  onAll (name, args) {\n    return false\n  },\n  onClickCell (field, value, row, $element) {\n    return false\n  },\n  onDblClickCell (field, value, row, $element) {\n    return false\n  },\n  onClickRow (item, $element) {\n    return false\n  },\n  onDblClickRow (item, $element) {\n    return false\n  },\n  onSort (name, order) {\n    return false\n  },\n  onCheck (row) {\n    return false\n  },\n  onUncheck (row) {\n    return false\n  },\n  onCheckAll (rows) {\n    return false\n  },\n  onUncheckAll (rows) {\n    return false\n  },\n  onCheckSome (rows) {\n    return false\n  },\n  onUncheckSome (rows) {\n    return false\n  },\n  onLoadSuccess (data) {\n    return false\n  },\n  onLoadError (status) {\n    return false\n  },\n  onColumnSwitch (field, checked) {\n    return false\n  },\n  onPageChange (number, size) {\n    return false\n  },\n  onSearch (text) {\n    return false\n  },\n  onToggle (cardView) {\n    return false\n  },\n  onPreBody (data) {\n    return false\n  },\n  onPostBody () {\n    return false\n  },\n  onPostHeader () {\n    return false\n  },\n  onPostFooter () {\n    return false\n  },\n  onExpandRow (index, row, $detail) {\n    return false\n  },\n  onCollapseRow (index, row) {\n    return false\n  },\n  onRefreshOptions (options) {\n    return false\n  },\n  onRefresh (params) {\n    return false\n  },\n  onResetView () {\n    return false\n  },\n  onScrollBody () {\n    return false\n  }\n}\n\nconst EN = {\n  formatLoadingMessage () {\n    return 'Loading, please wait'\n  },\n  formatRecordsPerPage (pageNumber) {\n    return `${pageNumber} rows per page`\n  },\n  formatShowingRows (pageFrom, pageTo, totalRows, totalNotFiltered) {\n    if (totalNotFiltered !== undefined && totalNotFiltered > 0 && totalNotFiltered > totalRows) {\n      return `Showing ${pageFrom} to ${pageTo} of ${totalRows} rows (filtered from ${totalNotFiltered} total rows)`\n    }\n\n    return `Showing ${pageFrom} to ${pageTo} of ${totalRows} rows`\n  },\n  formatSRPaginationPreText () {\n    return 'previous page'\n  },\n  formatSRPaginationPageText (page) {\n    return `to page ${page}`\n  },\n  formatSRPaginationNextText () {\n    return 'next page'\n  },\n  formatDetailPagination (totalRows) {\n    return `Showing ${totalRows} rows`\n  },\n  formatSearch () {\n    return 'Search'\n  },\n  formatClearSearch () {\n    return 'Clear Search'\n  },\n  formatNoMatches () {\n    return 'No matching records found'\n  },\n  formatPaginationSwitch () {\n    return 'Hide/Show pagination'\n  },\n  formatPaginationSwitchDown () {\n    return 'Show pagination'\n  },\n  formatPaginationSwitchUp () {\n    return 'Hide pagination'\n  },\n  formatRefresh () {\n    return 'Refresh'\n  },\n  formatToggle () {\n    return 'Toggle'\n  },\n  formatToggleOn () {\n    return 'Show card view'\n  },\n  formatToggleOff () {\n    return 'Hide card view'\n  },\n  formatColumns () {\n    return 'Columns'\n  },\n  formatColumnsToggleAll () {\n    return 'Toggle all'\n  },\n  formatFullscreen () {\n    return 'Fullscreen'\n  },\n  formatAllRows () {\n    return 'All'\n  }\n}\n\nconst COLUMN_DEFAULTS = {\n  field: undefined,\n  title: undefined,\n  titleTooltip: undefined,\n  'class': undefined,\n  width: undefined,\n  widthUnit: 'px',\n  rowspan: undefined,\n  colspan: undefined,\n  align: undefined, // left, right, center\n  halign: undefined, // left, right, center\n  falign: undefined, // left, right, center\n  valign: undefined, // top, middle, bottom\n  cellStyle: undefined,\n  radio: false,\n  checkbox: false,\n  checkboxEnabled: true,\n  clickToSelect: true,\n  showSelectTitle: false,\n  sortable: false,\n  sortName: undefined,\n  order: 'asc', // asc, desc\n  sorter: undefined,\n  visible: true,\n  switchable: true,\n  cardVisible: true,\n  searchable: true,\n  formatter: undefined,\n  footerFormatter: undefined,\n  detailFormatter: undefined,\n  searchFormatter: true,\n  escape: false,\n  events: undefined\n}\n\nconst METHODS = [\n  'getOptions',\n  'refreshOptions',\n  'getData',\n  'getSelections', 'getAllSelections',\n  'load', 'append', 'prepend',\n  'remove', 'removeAll',\n  'insertRow', 'updateRow',\n  'getRowByUniqueId', 'updateByUniqueId', 'removeByUniqueId',\n  'updateCell', 'updateCellByUniqueId',\n  'showRow', 'hideRow', 'getHiddenRows',\n  'showColumn', 'hideColumn',\n  'getVisibleColumns', 'getHiddenColumns',\n  'showAllColumns', 'hideAllColumns',\n  'mergeCells',\n  'checkAll', 'uncheckAll', 'checkInvert',\n  'check', 'uncheck',\n  'checkBy', 'uncheckBy',\n  'refresh',\n  'destroy',\n  'resetView', 'resetWidth',\n  'showLoading', 'hideLoading',\n  'togglePagination', 'toggleFullscreen', 'toggleView',\n  'resetSearch',\n  'filterBy',\n  'scrollTo', 'getScrollPosition',\n  'selectPage', 'prevPage', 'nextPage',\n  'toggleDetailView',\n  'expandRow', 'collapseRow',\n  'expandAllRows', 'collapseAllRows',\n  'updateColumnTitle', 'updateFormatText'\n]\n\nconst EVENTS = {\n  'all.bs.table': 'onAll',\n  'click-row.bs.table': 'onClickRow',\n  'dbl-click-row.bs.table': 'onDblClickRow',\n  'click-cell.bs.table': 'onClickCell',\n  'dbl-click-cell.bs.table': 'onDblClickCell',\n  'sort.bs.table': 'onSort',\n  'check.bs.table': 'onCheck',\n  'uncheck.bs.table': 'onUncheck',\n  'check-all.bs.table': 'onCheckAll',\n  'uncheck-all.bs.table': 'onUncheckAll',\n  'check-some.bs.table': 'onCheckSome',\n  'uncheck-some.bs.table': 'onUncheckSome',\n  'load-success.bs.table': 'onLoadSuccess',\n  'load-error.bs.table': 'onLoadError',\n  'column-switch.bs.table': 'onColumnSwitch',\n  'page-change.bs.table': 'onPageChange',\n  'search.bs.table': 'onSearch',\n  'toggle.bs.table': 'onToggle',\n  'pre-body.bs.table': 'onPreBody',\n  'post-body.bs.table': 'onPostBody',\n  'post-header.bs.table': 'onPostHeader',\n  'post-footer.bs.table': 'onPostFooter',\n  'expand-row.bs.table': 'onExpandRow',\n  'collapse-row.bs.table': 'onCollapseRow',\n  'refresh-options.bs.table': 'onRefreshOptions',\n  'reset-view.bs.table': 'onResetView',\n  'refresh.bs.table': 'onRefresh',\n  'scroll-body.bs.table': 'onScrollBody'\n}\n\nObject.assign(DEFAULTS, EN)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  VERSION,\n\n  THEME: `bootstrap${bootstrapVersion}`,\n\n  CONSTANTS,\n\n  DEFAULTS,\n\n  COLUMN_DEFAULTS,\n\n  METHODS,\n\n  EVENTS,\n\n  LOCALES: {\n    en: EN,\n    'en-US': EN\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwLXRhYmxlL3NyYy9jb25zdGFudHMvaW5kZXguanM/ZjRjYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QiwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixRQUFRO0FBQ2xDO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLGNBQWMsV0FBVztBQUN6QixHQUFHO0FBQ0g7QUFDQTtBQUNBLHdCQUF3QixTQUFTLE1BQU0sT0FBTyxNQUFNLFVBQVUsdUJBQXVCLGlCQUFpQjtBQUN0Rzs7QUFFQSxzQkFBc0IsU0FBUyxNQUFNLE9BQU8sTUFBTSxVQUFVO0FBQzVELEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0Esc0JBQXNCLEtBQUs7QUFDM0IsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxzQkFBc0IsVUFBVTtBQUNoQyxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFZTtBQUNmOztBQUVBLHFCQUFxQixpQkFBaUI7O0FBRXRDOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9ib290c3RyYXAtdGFibGUvc3JjL2NvbnN0YW50cy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFZFUlNJT04gPSAnMS4xNS40J1xuXG5sZXQgYm9vdHN0cmFwVmVyc2lvbiA9IDRcbnRyeSB7XG4gIGNvbnN0IHJhd1ZlcnNpb24gPSAkLmZuLmRyb3Bkb3duLkNvbnN0cnVjdG9yLlZFUlNJT05cblxuICAvLyBPbmx5IHRyeSB0byBwYXJzZSBWRVJTSU9OIGlmIGl0IGlzIGRlZmluZWQuXG4gIC8vIEl0IGlzIHVuZGVmaW5lZCBpbiBvbGRlciB2ZXJzaW9ucyBvZiBCb290c3RyYXAgKHRlc3RlZCB3aXRoIDMuMS4xKS5cbiAgaWYgKHJhd1ZlcnNpb24gIT09IHVuZGVmaW5lZCkge1xuICAgIGJvb3RzdHJhcFZlcnNpb24gPSBwYXJzZUludChyYXdWZXJzaW9uLCAxMClcbiAgfVxufSBjYXRjaCAoZSkge1xuICAvLyBpZ25vcmVcbn1cblxuY29uc3QgQ09OU1RBTlRTID0ge1xuICAzOiB7XG4gICAgaWNvbnNQcmVmaXg6ICdnbHlwaGljb24nLFxuICAgIGljb25zOiB7XG4gICAgICBwYWdpbmF0aW9uU3dpdGNoRG93bjogJ2dseXBoaWNvbi1jb2xsYXBzZS1kb3duIGljb24tY2hldnJvbi1kb3duJyxcbiAgICAgIHBhZ2luYXRpb25Td2l0Y2hVcDogJ2dseXBoaWNvbi1jb2xsYXBzZS11cCBpY29uLWNoZXZyb24tdXAnLFxuICAgICAgcmVmcmVzaDogJ2dseXBoaWNvbi1yZWZyZXNoIGljb24tcmVmcmVzaCcsXG4gICAgICB0b2dnbGVPZmY6ICdnbHlwaGljb24tbGlzdC1hbHQgaWNvbi1saXN0LWFsdCcsXG4gICAgICB0b2dnbGVPbjogJ2dseXBoaWNvbi1saXN0LWFsdCBpY29uLWxpc3QtYWx0JyxcbiAgICAgIGNvbHVtbnM6ICdnbHlwaGljb24tdGggaWNvbi10aCcsXG4gICAgICBkZXRhaWxPcGVuOiAnZ2x5cGhpY29uLXBsdXMgaWNvbi1wbHVzJyxcbiAgICAgIGRldGFpbENsb3NlOiAnZ2x5cGhpY29uLW1pbnVzIGljb24tbWludXMnLFxuICAgICAgZnVsbHNjcmVlbjogJ2dseXBoaWNvbi1mdWxsc2NyZWVuJyxcbiAgICAgIHNlYXJjaDogJ2dseXBoaWNvbi1zZWFyY2gnLFxuICAgICAgY2xlYXJTZWFyY2g6ICdnbHlwaGljb24tdHJhc2gnXG4gICAgfSxcbiAgICBjbGFzc2VzOiB7XG4gICAgICBidXR0b25zUHJlZml4OiAnYnRuJyxcbiAgICAgIGJ1dHRvbnM6ICdkZWZhdWx0JyxcbiAgICAgIGJ1dHRvbnNHcm91cDogJ2J0bi1ncm91cCcsXG4gICAgICBidXR0b25zRHJvcGRvd246ICdidG4tZ3JvdXAnLFxuICAgICAgcHVsbDogJ3B1bGwnLFxuICAgICAgaW5wdXRHcm91cDogJ2lucHV0LWdyb3VwJyxcbiAgICAgIGlucHV0OiAnZm9ybS1jb250cm9sJyxcbiAgICAgIHBhZ2luYXRpb25Ecm9wZG93bjogJ2J0bi1ncm91cCBkcm9wZG93bicsXG4gICAgICBkcm9wdXA6ICdkcm9wdXAnLFxuICAgICAgZHJvcGRvd25BY3RpdmU6ICdhY3RpdmUnLFxuICAgICAgcGFnaW5hdGlvbkFjdGl2ZTogJ2FjdGl2ZScsXG4gICAgICBidXR0b25BY3RpdmU6ICdhY3RpdmUnXG4gICAgfSxcbiAgICBodG1sOiB7XG4gICAgICB0b29sYmFyRHJvcGRvd246IFsnPHVsIGNsYXNzPVwiZHJvcGRvd24tbWVudVwiIHJvbGU9XCJtZW51XCI+JywgJzwvdWw+J10sXG4gICAgICB0b29sYmFyRHJvcGRvd25JdGVtOiAnPGxpIHJvbGU9XCJtZW51aXRlbVwiPjxsYWJlbD4lczwvbGFiZWw+PC9saT4nLFxuICAgICAgdG9vbGJhckRyb3Bkb3duU2VwZXJhdG9yOiAnPGxpIGNsYXNzPVwiZGl2aWRlclwiPjwvbGk+JyxcbiAgICAgIHBhZ2VEcm9wZG93bjogWyc8dWwgY2xhc3M9XCJkcm9wZG93bi1tZW51XCIgcm9sZT1cIm1lbnVcIj4nLCAnPC91bD4nXSxcbiAgICAgIHBhZ2VEcm9wZG93bkl0ZW06ICc8bGkgcm9sZT1cIm1lbnVpdGVtXCIgY2xhc3M9XCIlc1wiPjxhIGhyZWY9XCIjXCI+JXM8L2E+PC9saT4nLFxuICAgICAgZHJvcGRvd25DYXJldDogJzxzcGFuIGNsYXNzPVwiY2FyZXRcIj48L3NwYW4+JyxcbiAgICAgIHBhZ2luYXRpb246IFsnPHVsIGNsYXNzPVwicGFnaW5hdGlvbiVzXCI+JywgJzwvdWw+J10sXG4gICAgICBwYWdpbmF0aW9uSXRlbTogJzxsaSBjbGFzcz1cInBhZ2UtaXRlbSVzXCI+PGEgY2xhc3M9XCJwYWdlLWxpbmtcIiBhcmlhLWxhYmVsPVwiJXNcIiBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApXCI+JXM8L2E+PC9saT4nLFxuICAgICAgaWNvbjogJzxpIGNsYXNzPVwiJXMgJXNcIj48L2k+JyxcbiAgICAgIGlucHV0R3JvdXA6ICc8ZGl2IGNsYXNzPVwiaW5wdXQtZ3JvdXBcIj4lczxzcGFuIGNsYXNzPVwiaW5wdXQtZ3JvdXAtYnRuXCI+JXM8L3NwYW4+PC9kaXY+JyxcbiAgICAgIHNlYXJjaElucHV0OiAnPGlucHV0IGNsYXNzPVwiJXMlc1wiIHR5cGU9XCJ0ZXh0XCIgcGxhY2Vob2xkZXI9XCIlc1wiPicsXG4gICAgICBzZWFyY2hCdXR0b246ICc8YnV0dG9uIGNsYXNzPVwiJXNcIiB0eXBlPVwiYnV0dG9uXCIgbmFtZT1cInNlYXJjaFwiIHRpdGxlPVwiJXNcIj4lcyAlczwvYnV0dG9uPicsXG4gICAgICBzZWFyY2hDbGVhckJ1dHRvbjogJzxidXR0b24gY2xhc3M9XCIlc1wiIHR5cGU9XCJidXR0b25cIiBuYW1lPVwiY2xlYXJTZWFyY2hcIiB0aXRsZT1cIiVzXCI+JXMgJXM8L2J1dHRvbj4nXG4gICAgfVxuICB9LFxuICA0OiB7XG4gICAgaWNvbnNQcmVmaXg6ICdmYScsXG4gICAgaWNvbnM6IHtcbiAgICAgIHBhZ2luYXRpb25Td2l0Y2hEb3duOiAnZmEtY2FyZXQtc3F1YXJlLWRvd24nLFxuICAgICAgcGFnaW5hdGlvblN3aXRjaFVwOiAnZmEtY2FyZXQtc3F1YXJlLXVwJyxcbiAgICAgIHJlZnJlc2g6ICdmYS1zeW5jJyxcbiAgICAgIHRvZ2dsZU9mZjogJ2ZhLXRvZ2dsZS1vZmYnLFxuICAgICAgdG9nZ2xlT246ICdmYS10b2dnbGUtb24nLFxuICAgICAgY29sdW1uczogJ2ZhLXRoLWxpc3QnLFxuICAgICAgZGV0YWlsT3BlbjogJ2ZhLXBsdXMnLFxuICAgICAgZGV0YWlsQ2xvc2U6ICdmYS1taW51cycsXG4gICAgICBmdWxsc2NyZWVuOiAnZmEtYXJyb3dzLWFsdCcsXG4gICAgICBzZWFyY2g6ICdmYS1zZWFyY2gnLFxuICAgICAgY2xlYXJTZWFyY2g6ICdmYS10cmFzaCdcbiAgICB9LFxuICAgIGNsYXNzZXM6IHtcbiAgICAgIGJ1dHRvbnNQcmVmaXg6ICdidG4nLFxuICAgICAgYnV0dG9uczogJ3NlY29uZGFyeScsXG4gICAgICBidXR0b25zR3JvdXA6ICdidG4tZ3JvdXAnLFxuICAgICAgYnV0dG9uc0Ryb3Bkb3duOiAnYnRuLWdyb3VwJyxcbiAgICAgIHB1bGw6ICdmbG9hdCcsXG4gICAgICBpbnB1dEdyb3VwOiAnYnRuLWdyb3VwJyxcbiAgICAgIGlucHV0OiAnZm9ybS1jb250cm9sJyxcbiAgICAgIHBhZ2luYXRpb25Ecm9wZG93bjogJ2J0bi1ncm91cCBkcm9wZG93bicsXG4gICAgICBkcm9wdXA6ICdkcm9wdXAnLFxuICAgICAgZHJvcGRvd25BY3RpdmU6ICdhY3RpdmUnLFxuICAgICAgcGFnaW5hdGlvbkFjdGl2ZTogJ2FjdGl2ZScsXG4gICAgICBidXR0b25BY3RpdmU6ICdhY3RpdmUnXG4gICAgfSxcbiAgICBodG1sOiB7XG4gICAgICB0b29sYmFyRHJvcGRvd246IFsnPGRpdiBjbGFzcz1cImRyb3Bkb3duLW1lbnUgZHJvcGRvd24tbWVudS1yaWdodFwiPicsICc8L2Rpdj4nXSxcbiAgICAgIHRvb2xiYXJEcm9wZG93bkl0ZW06ICc8bGFiZWwgY2xhc3M9XCJkcm9wZG93bi1pdGVtXCI+JXM8L2xhYmVsPicsXG4gICAgICBwYWdlRHJvcGRvd246IFsnPGRpdiBjbGFzcz1cImRyb3Bkb3duLW1lbnVcIj4nLCAnPC9kaXY+J10sXG4gICAgICBwYWdlRHJvcGRvd25JdGVtOiAnPGEgY2xhc3M9XCJkcm9wZG93bi1pdGVtICVzXCIgaHJlZj1cIiNcIj4lczwvYT4nLFxuICAgICAgdG9vbGJhckRyb3Bkb3duU2VwZXJhdG9yOiAnPGRpdiBjbGFzcz1cImRyb3Bkb3duLWRpdmlkZXJcIj48L2Rpdj4nLFxuICAgICAgZHJvcGRvd25DYXJldDogJzxzcGFuIGNsYXNzPVwiY2FyZXRcIj48L3NwYW4+JyxcbiAgICAgIHBhZ2luYXRpb246IFsnPHVsIGNsYXNzPVwicGFnaW5hdGlvbiVzXCI+JywgJzwvdWw+J10sXG4gICAgICBwYWdpbmF0aW9uSXRlbTogJzxsaSBjbGFzcz1cInBhZ2UtaXRlbSVzXCI+PGEgY2xhc3M9XCJwYWdlLWxpbmtcIiBhcmlhLWxhYmVsPVwiJXNcIiBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApXCI+JXM8L2E+PC9saT4nLFxuICAgICAgaWNvbjogJzxpIGNsYXNzPVwiJXMgJXNcIj48L2k+JyxcbiAgICAgIGlucHV0R3JvdXA6ICc8ZGl2IGNsYXNzPVwiaW5wdXQtZ3JvdXBcIj4lczxkaXYgY2xhc3M9XCJpbnB1dC1ncm91cC1hcHBlbmRcIj4lczwvZGl2PjwvZGl2PicsXG4gICAgICBzZWFyY2hJbnB1dDogJzxpbnB1dCBjbGFzcz1cIiVzJXNcIiB0eXBlPVwidGV4dFwiIHBsYWNlaG9sZGVyPVwiJXNcIj4nLFxuICAgICAgc2VhcmNoQnV0dG9uOiAnPGJ1dHRvbiBjbGFzcz1cIiVzXCIgdHlwZT1cImJ1dHRvblwiIG5hbWU9XCJzZWFyY2hcIiB0aXRsZT1cIiVzXCI+JXMgJXM8L2J1dHRvbj4nLFxuICAgICAgc2VhcmNoQ2xlYXJCdXR0b246ICc8YnV0dG9uIGNsYXNzPVwiJXNcIiB0eXBlPVwiYnV0dG9uXCIgbmFtZT1cImNsZWFyU2VhcmNoXCIgdGl0bGU9XCIlc1wiPiVzICVzPC9idXR0b24+J1xuICAgIH1cbiAgfVxufVtib290c3RyYXBWZXJzaW9uXVxuXG5jb25zdCBERUZBVUxUUyA9IHtcbiAgaGVpZ2h0OiB1bmRlZmluZWQsXG4gIGNsYXNzZXM6ICd0YWJsZSB0YWJsZS1ib3JkZXJlZCB0YWJsZS1ob3ZlcicsXG4gIHRoZWFkQ2xhc3NlczogJycsXG4gIHJvd1N0eWxlIChyb3csIGluZGV4KSB7XG4gICAgcmV0dXJuIHt9XG4gIH0sXG4gIHJvd0F0dHJpYnV0ZXMgKHJvdywgaW5kZXgpIHtcbiAgICByZXR1cm4ge31cbiAgfSxcbiAgdW5kZWZpbmVkVGV4dDogJy0nLFxuICBsb2NhbGU6IHVuZGVmaW5lZCxcbiAgdmlydHVhbFNjcm9sbDogZmFsc2UsXG4gIHZpcnR1YWxTY3JvbGxJdGVtSGVpZ2h0OiB1bmRlZmluZWQsXG4gIHNvcnRhYmxlOiB0cnVlLFxuICBzb3J0Q2xhc3M6IHVuZGVmaW5lZCxcbiAgc2lsZW50U29ydDogdHJ1ZSxcbiAgc29ydE5hbWU6IHVuZGVmaW5lZCxcbiAgc29ydE9yZGVyOiAnYXNjJyxcbiAgc29ydFN0YWJsZTogZmFsc2UsXG4gIHJlbWVtYmVyT3JkZXI6IGZhbHNlLFxuICBjdXN0b21Tb3J0OiB1bmRlZmluZWQsXG4gIGNvbHVtbnM6IFtcbiAgICBbXVxuICBdLFxuICBkYXRhOiBbXSxcbiAgdXJsOiB1bmRlZmluZWQsXG4gIG1ldGhvZDogJ2dldCcsXG4gIGNhY2hlOiB0cnVlLFxuICBjb250ZW50VHlwZTogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICBkYXRhVHlwZTogJ2pzb24nLFxuICBhamF4OiB1bmRlZmluZWQsXG4gIGFqYXhPcHRpb25zOiB7fSxcbiAgcXVlcnlQYXJhbXMgKHBhcmFtcykge1xuICAgIHJldHVybiBwYXJhbXNcbiAgfSxcbiAgcXVlcnlQYXJhbXNUeXBlOiAnbGltaXQnLCAvLyAnbGltaXQnLCB1bmRlZmluZWRcbiAgcmVzcG9uc2VIYW5kbGVyIChyZXMpIHtcbiAgICByZXR1cm4gcmVzXG4gIH0sXG4gIHRvdGFsRmllbGQ6ICd0b3RhbCcsXG4gIHRvdGFsTm90RmlsdGVyZWRGaWVsZDogJ3RvdGFsTm90RmlsdGVyZWQnLFxuICBkYXRhRmllbGQ6ICdyb3dzJyxcbiAgcGFnaW5hdGlvbjogZmFsc2UsXG4gIG9ubHlJbmZvUGFnaW5hdGlvbjogZmFsc2UsXG4gIHNob3dFeHRlbmRlZFBhZ2luYXRpb246IGZhbHNlLFxuICBwYWdpbmF0aW9uTG9vcDogdHJ1ZSxcbiAgc2lkZVBhZ2luYXRpb246ICdjbGllbnQnLCAvLyBjbGllbnQgb3Igc2VydmVyXG4gIHRvdGFsUm93czogMCxcbiAgdG90YWxOb3RGaWx0ZXJlZDogMCxcbiAgcGFnZU51bWJlcjogMSxcbiAgcGFnZVNpemU6IDEwLFxuICBwYWdlTGlzdDogWzEwLCAyNSwgNTAsIDEwMF0sXG4gIHBhZ2luYXRpb25IQWxpZ246ICdyaWdodCcsIC8vIHJpZ2h0LCBsZWZ0XG4gIHBhZ2luYXRpb25WQWxpZ246ICdib3R0b20nLCAvLyBib3R0b20sIHRvcCwgYm90aFxuICBwYWdpbmF0aW9uRGV0YWlsSEFsaWduOiAnbGVmdCcsIC8vIHJpZ2h0LCBsZWZ0XG4gIHBhZ2luYXRpb25QcmVUZXh0OiAnJmxzYXF1bzsnLFxuICBwYWdpbmF0aW9uTmV4dFRleHQ6ICcmcnNhcXVvOycsXG4gIHBhZ2luYXRpb25TdWNjZXNzaXZlbHlTaXplOiA1LCAvLyBNYXhpbXVtIHN1Y2Nlc3NpdmVseSBudW1iZXIgb2YgcGFnZXMgaW4gYSByb3dcbiAgcGFnaW5hdGlvblBhZ2VzQnlTaWRlOiAxLCAvLyBOdW1iZXIgb2YgcGFnZXMgb24gZWFjaCBzaWRlIChyaWdodCwgbGVmdCkgb2YgdGhlIGN1cnJlbnQgcGFnZS5cbiAgcGFnaW5hdGlvblVzZUludGVybWVkaWF0ZTogZmFsc2UsIC8vIENhbGN1bGF0ZSBpbnRlcm1lZGlhdGUgcGFnZXMgZm9yIHF1aWNrIGFjY2Vzc1xuICBzZWFyY2g6IGZhbHNlLFxuICBzZWFyY2hPbkVudGVyS2V5OiBmYWxzZSxcbiAgc3RyaWN0U2VhcmNoOiBmYWxzZSxcbiAgdmlzaWJsZVNlYXJjaDogZmFsc2UsXG4gIHNob3dCdXR0b25JY29uczogdHJ1ZSxcbiAgc2hvd0J1dHRvblRleHQ6IGZhbHNlLFxuICBzaG93U2VhcmNoQnV0dG9uOiBmYWxzZSxcbiAgc2hvd1NlYXJjaENsZWFyQnV0dG9uOiBmYWxzZSxcbiAgdHJpbU9uU2VhcmNoOiB0cnVlLFxuICBzZWFyY2hBbGlnbjogJ3JpZ2h0JyxcbiAgc2VhcmNoVGltZU91dDogNTAwLFxuICBzZWFyY2hUZXh0OiAnJyxcbiAgY3VzdG9tU2VhcmNoOiB1bmRlZmluZWQsXG4gIHNob3dIZWFkZXI6IHRydWUsXG4gIHNob3dGb290ZXI6IGZhbHNlLFxuICBmb290ZXJTdHlsZSAocm93LCBpbmRleCkge1xuICAgIHJldHVybiB7fVxuICB9LFxuICBzaG93Q29sdW1uczogZmFsc2UsXG4gIHNob3dDb2x1bW5zVG9nZ2xlQWxsOiBmYWxzZSxcbiAgbWluaW11bUNvdW50Q29sdW1uczogMSxcbiAgc2hvd1BhZ2luYXRpb25Td2l0Y2g6IGZhbHNlLFxuICBzaG93UmVmcmVzaDogZmFsc2UsXG4gIHNob3dUb2dnbGU6IGZhbHNlLFxuICBzaG93RnVsbHNjcmVlbjogZmFsc2UsXG4gIHNtYXJ0RGlzcGxheTogdHJ1ZSxcbiAgZXNjYXBlOiBmYWxzZSxcbiAgZmlsdGVyT3B0aW9uczoge1xuICAgIGZpbHRlckFsZ29yaXRobTogJ2FuZCdcbiAgfSxcbiAgaWRGaWVsZDogdW5kZWZpbmVkLFxuICBzZWxlY3RJdGVtTmFtZTogJ2J0U2VsZWN0SXRlbScsXG4gIGNsaWNrVG9TZWxlY3Q6IGZhbHNlLFxuICBpZ25vcmVDbGlja1RvU2VsZWN0T24gKHt0YWdOYW1lfSkge1xuICAgIHJldHVybiBbJ0EnLCAnQlVUVE9OJ10uaW5jbHVkZXModGFnTmFtZSlcbiAgfSxcbiAgc2luZ2xlU2VsZWN0OiBmYWxzZSxcbiAgY2hlY2tib3hIZWFkZXI6IHRydWUsXG4gIG1haW50YWluTWV0YURhdGE6IGZhbHNlLFxuICBtdWx0aXBsZVNlbGVjdFJvdzogZmFsc2UsXG4gIHVuaXF1ZUlkOiB1bmRlZmluZWQsXG4gIGNhcmRWaWV3OiBmYWxzZSxcbiAgZGV0YWlsVmlldzogZmFsc2UsXG4gIGRldGFpbFZpZXdJY29uOiB0cnVlLFxuICBkZXRhaWxWaWV3QnlDbGljazogZmFsc2UsXG4gIGRldGFpbEZvcm1hdHRlciAoaW5kZXgsIHJvdykge1xuICAgIHJldHVybiAnJ1xuICB9LFxuICBkZXRhaWxGaWx0ZXIgKGluZGV4LCByb3cpIHtcbiAgICByZXR1cm4gdHJ1ZVxuICB9LFxuICB0b29sYmFyOiB1bmRlZmluZWQsXG4gIHRvb2xiYXJBbGlnbjogJ2xlZnQnLFxuICBidXR0b25zVG9vbGJhcjogdW5kZWZpbmVkLFxuICBidXR0b25zQWxpZ246ICdyaWdodCcsXG4gIGJ1dHRvbnNQcmVmaXg6IENPTlNUQU5UUy5jbGFzc2VzLmJ1dHRvbnNQcmVmaXgsXG4gIGJ1dHRvbnNDbGFzczogQ09OU1RBTlRTLmNsYXNzZXMuYnV0dG9ucyxcbiAgaWNvbnM6IENPTlNUQU5UUy5pY29ucyxcbiAgaHRtbDogQ09OU1RBTlRTLmh0bWwsXG4gIGljb25TaXplOiB1bmRlZmluZWQsXG4gIGljb25zUHJlZml4OiBDT05TVEFOVFMuaWNvbnNQcmVmaXgsIC8vIGdseXBoaWNvbiBvciBmYShmb250LWF3ZXNvbWUpXG4gIG9uQWxsIChuYW1lLCBhcmdzKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH0sXG4gIG9uQ2xpY2tDZWxsIChmaWVsZCwgdmFsdWUsIHJvdywgJGVsZW1lbnQpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfSxcbiAgb25EYmxDbGlja0NlbGwgKGZpZWxkLCB2YWx1ZSwgcm93LCAkZWxlbWVudCkge1xuICAgIHJldHVybiBmYWxzZVxuICB9LFxuICBvbkNsaWNrUm93IChpdGVtLCAkZWxlbWVudCkge1xuICAgIHJldHVybiBmYWxzZVxuICB9LFxuICBvbkRibENsaWNrUm93IChpdGVtLCAkZWxlbWVudCkge1xuICAgIHJldHVybiBmYWxzZVxuICB9LFxuICBvblNvcnQgKG5hbWUsIG9yZGVyKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH0sXG4gIG9uQ2hlY2sgKHJvdykge1xuICAgIHJldHVybiBmYWxzZVxuICB9LFxuICBvblVuY2hlY2sgKHJvdykge1xuICAgIHJldHVybiBmYWxzZVxuICB9LFxuICBvbkNoZWNrQWxsIChyb3dzKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH0sXG4gIG9uVW5jaGVja0FsbCAocm93cykge1xuICAgIHJldHVybiBmYWxzZVxuICB9LFxuICBvbkNoZWNrU29tZSAocm93cykge1xuICAgIHJldHVybiBmYWxzZVxuICB9LFxuICBvblVuY2hlY2tTb21lIChyb3dzKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH0sXG4gIG9uTG9hZFN1Y2Nlc3MgKGRhdGEpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfSxcbiAgb25Mb2FkRXJyb3IgKHN0YXR1cykge1xuICAgIHJldHVybiBmYWxzZVxuICB9LFxuICBvbkNvbHVtblN3aXRjaCAoZmllbGQsIGNoZWNrZWQpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfSxcbiAgb25QYWdlQ2hhbmdlIChudW1iZXIsIHNpemUpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfSxcbiAgb25TZWFyY2ggKHRleHQpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfSxcbiAgb25Ub2dnbGUgKGNhcmRWaWV3KSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH0sXG4gIG9uUHJlQm9keSAoZGF0YSkge1xuICAgIHJldHVybiBmYWxzZVxuICB9LFxuICBvblBvc3RCb2R5ICgpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfSxcbiAgb25Qb3N0SGVhZGVyICgpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfSxcbiAgb25Qb3N0Rm9vdGVyICgpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfSxcbiAgb25FeHBhbmRSb3cgKGluZGV4LCByb3csICRkZXRhaWwpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfSxcbiAgb25Db2xsYXBzZVJvdyAoaW5kZXgsIHJvdykge1xuICAgIHJldHVybiBmYWxzZVxuICB9LFxuICBvblJlZnJlc2hPcHRpb25zIChvcHRpb25zKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH0sXG4gIG9uUmVmcmVzaCAocGFyYW1zKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH0sXG4gIG9uUmVzZXRWaWV3ICgpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfSxcbiAgb25TY3JvbGxCb2R5ICgpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxufVxuXG5jb25zdCBFTiA9IHtcbiAgZm9ybWF0TG9hZGluZ01lc3NhZ2UgKCkge1xuICAgIHJldHVybiAnTG9hZGluZywgcGxlYXNlIHdhaXQnXG4gIH0sXG4gIGZvcm1hdFJlY29yZHNQZXJQYWdlIChwYWdlTnVtYmVyKSB7XG4gICAgcmV0dXJuIGAke3BhZ2VOdW1iZXJ9IHJvd3MgcGVyIHBhZ2VgXG4gIH0sXG4gIGZvcm1hdFNob3dpbmdSb3dzIChwYWdlRnJvbSwgcGFnZVRvLCB0b3RhbFJvd3MsIHRvdGFsTm90RmlsdGVyZWQpIHtcbiAgICBpZiAodG90YWxOb3RGaWx0ZXJlZCAhPT0gdW5kZWZpbmVkICYmIHRvdGFsTm90RmlsdGVyZWQgPiAwICYmIHRvdGFsTm90RmlsdGVyZWQgPiB0b3RhbFJvd3MpIHtcbiAgICAgIHJldHVybiBgU2hvd2luZyAke3BhZ2VGcm9tfSB0byAke3BhZ2VUb30gb2YgJHt0b3RhbFJvd3N9IHJvd3MgKGZpbHRlcmVkIGZyb20gJHt0b3RhbE5vdEZpbHRlcmVkfSB0b3RhbCByb3dzKWBcbiAgICB9XG5cbiAgICByZXR1cm4gYFNob3dpbmcgJHtwYWdlRnJvbX0gdG8gJHtwYWdlVG99IG9mICR7dG90YWxSb3dzfSByb3dzYFxuICB9LFxuICBmb3JtYXRTUlBhZ2luYXRpb25QcmVUZXh0ICgpIHtcbiAgICByZXR1cm4gJ3ByZXZpb3VzIHBhZ2UnXG4gIH0sXG4gIGZvcm1hdFNSUGFnaW5hdGlvblBhZ2VUZXh0IChwYWdlKSB7XG4gICAgcmV0dXJuIGB0byBwYWdlICR7cGFnZX1gXG4gIH0sXG4gIGZvcm1hdFNSUGFnaW5hdGlvbk5leHRUZXh0ICgpIHtcbiAgICByZXR1cm4gJ25leHQgcGFnZSdcbiAgfSxcbiAgZm9ybWF0RGV0YWlsUGFnaW5hdGlvbiAodG90YWxSb3dzKSB7XG4gICAgcmV0dXJuIGBTaG93aW5nICR7dG90YWxSb3dzfSByb3dzYFxuICB9LFxuICBmb3JtYXRTZWFyY2ggKCkge1xuICAgIHJldHVybiAnU2VhcmNoJ1xuICB9LFxuICBmb3JtYXRDbGVhclNlYXJjaCAoKSB7XG4gICAgcmV0dXJuICdDbGVhciBTZWFyY2gnXG4gIH0sXG4gIGZvcm1hdE5vTWF0Y2hlcyAoKSB7XG4gICAgcmV0dXJuICdObyBtYXRjaGluZyByZWNvcmRzIGZvdW5kJ1xuICB9LFxuICBmb3JtYXRQYWdpbmF0aW9uU3dpdGNoICgpIHtcbiAgICByZXR1cm4gJ0hpZGUvU2hvdyBwYWdpbmF0aW9uJ1xuICB9LFxuICBmb3JtYXRQYWdpbmF0aW9uU3dpdGNoRG93biAoKSB7XG4gICAgcmV0dXJuICdTaG93IHBhZ2luYXRpb24nXG4gIH0sXG4gIGZvcm1hdFBhZ2luYXRpb25Td2l0Y2hVcCAoKSB7XG4gICAgcmV0dXJuICdIaWRlIHBhZ2luYXRpb24nXG4gIH0sXG4gIGZvcm1hdFJlZnJlc2ggKCkge1xuICAgIHJldHVybiAnUmVmcmVzaCdcbiAgfSxcbiAgZm9ybWF0VG9nZ2xlICgpIHtcbiAgICByZXR1cm4gJ1RvZ2dsZSdcbiAgfSxcbiAgZm9ybWF0VG9nZ2xlT24gKCkge1xuICAgIHJldHVybiAnU2hvdyBjYXJkIHZpZXcnXG4gIH0sXG4gIGZvcm1hdFRvZ2dsZU9mZiAoKSB7XG4gICAgcmV0dXJuICdIaWRlIGNhcmQgdmlldydcbiAgfSxcbiAgZm9ybWF0Q29sdW1ucyAoKSB7XG4gICAgcmV0dXJuICdDb2x1bW5zJ1xuICB9LFxuICBmb3JtYXRDb2x1bW5zVG9nZ2xlQWxsICgpIHtcbiAgICByZXR1cm4gJ1RvZ2dsZSBhbGwnXG4gIH0sXG4gIGZvcm1hdEZ1bGxzY3JlZW4gKCkge1xuICAgIHJldHVybiAnRnVsbHNjcmVlbidcbiAgfSxcbiAgZm9ybWF0QWxsUm93cyAoKSB7XG4gICAgcmV0dXJuICdBbGwnXG4gIH1cbn1cblxuY29uc3QgQ09MVU1OX0RFRkFVTFRTID0ge1xuICBmaWVsZDogdW5kZWZpbmVkLFxuICB0aXRsZTogdW5kZWZpbmVkLFxuICB0aXRsZVRvb2x0aXA6IHVuZGVmaW5lZCxcbiAgJ2NsYXNzJzogdW5kZWZpbmVkLFxuICB3aWR0aDogdW5kZWZpbmVkLFxuICB3aWR0aFVuaXQ6ICdweCcsXG4gIHJvd3NwYW46IHVuZGVmaW5lZCxcbiAgY29sc3BhbjogdW5kZWZpbmVkLFxuICBhbGlnbjogdW5kZWZpbmVkLCAvLyBsZWZ0LCByaWdodCwgY2VudGVyXG4gIGhhbGlnbjogdW5kZWZpbmVkLCAvLyBsZWZ0LCByaWdodCwgY2VudGVyXG4gIGZhbGlnbjogdW5kZWZpbmVkLCAvLyBsZWZ0LCByaWdodCwgY2VudGVyXG4gIHZhbGlnbjogdW5kZWZpbmVkLCAvLyB0b3AsIG1pZGRsZSwgYm90dG9tXG4gIGNlbGxTdHlsZTogdW5kZWZpbmVkLFxuICByYWRpbzogZmFsc2UsXG4gIGNoZWNrYm94OiBmYWxzZSxcbiAgY2hlY2tib3hFbmFibGVkOiB0cnVlLFxuICBjbGlja1RvU2VsZWN0OiB0cnVlLFxuICBzaG93U2VsZWN0VGl0bGU6IGZhbHNlLFxuICBzb3J0YWJsZTogZmFsc2UsXG4gIHNvcnROYW1lOiB1bmRlZmluZWQsXG4gIG9yZGVyOiAnYXNjJywgLy8gYXNjLCBkZXNjXG4gIHNvcnRlcjogdW5kZWZpbmVkLFxuICB2aXNpYmxlOiB0cnVlLFxuICBzd2l0Y2hhYmxlOiB0cnVlLFxuICBjYXJkVmlzaWJsZTogdHJ1ZSxcbiAgc2VhcmNoYWJsZTogdHJ1ZSxcbiAgZm9ybWF0dGVyOiB1bmRlZmluZWQsXG4gIGZvb3RlckZvcm1hdHRlcjogdW5kZWZpbmVkLFxuICBkZXRhaWxGb3JtYXR0ZXI6IHVuZGVmaW5lZCxcbiAgc2VhcmNoRm9ybWF0dGVyOiB0cnVlLFxuICBlc2NhcGU6IGZhbHNlLFxuICBldmVudHM6IHVuZGVmaW5lZFxufVxuXG5jb25zdCBNRVRIT0RTID0gW1xuICAnZ2V0T3B0aW9ucycsXG4gICdyZWZyZXNoT3B0aW9ucycsXG4gICdnZXREYXRhJyxcbiAgJ2dldFNlbGVjdGlvbnMnLCAnZ2V0QWxsU2VsZWN0aW9ucycsXG4gICdsb2FkJywgJ2FwcGVuZCcsICdwcmVwZW5kJyxcbiAgJ3JlbW92ZScsICdyZW1vdmVBbGwnLFxuICAnaW5zZXJ0Um93JywgJ3VwZGF0ZVJvdycsXG4gICdnZXRSb3dCeVVuaXF1ZUlkJywgJ3VwZGF0ZUJ5VW5pcXVlSWQnLCAncmVtb3ZlQnlVbmlxdWVJZCcsXG4gICd1cGRhdGVDZWxsJywgJ3VwZGF0ZUNlbGxCeVVuaXF1ZUlkJyxcbiAgJ3Nob3dSb3cnLCAnaGlkZVJvdycsICdnZXRIaWRkZW5Sb3dzJyxcbiAgJ3Nob3dDb2x1bW4nLCAnaGlkZUNvbHVtbicsXG4gICdnZXRWaXNpYmxlQ29sdW1ucycsICdnZXRIaWRkZW5Db2x1bW5zJyxcbiAgJ3Nob3dBbGxDb2x1bW5zJywgJ2hpZGVBbGxDb2x1bW5zJyxcbiAgJ21lcmdlQ2VsbHMnLFxuICAnY2hlY2tBbGwnLCAndW5jaGVja0FsbCcsICdjaGVja0ludmVydCcsXG4gICdjaGVjaycsICd1bmNoZWNrJyxcbiAgJ2NoZWNrQnknLCAndW5jaGVja0J5JyxcbiAgJ3JlZnJlc2gnLFxuICAnZGVzdHJveScsXG4gICdyZXNldFZpZXcnLCAncmVzZXRXaWR0aCcsXG4gICdzaG93TG9hZGluZycsICdoaWRlTG9hZGluZycsXG4gICd0b2dnbGVQYWdpbmF0aW9uJywgJ3RvZ2dsZUZ1bGxzY3JlZW4nLCAndG9nZ2xlVmlldycsXG4gICdyZXNldFNlYXJjaCcsXG4gICdmaWx0ZXJCeScsXG4gICdzY3JvbGxUbycsICdnZXRTY3JvbGxQb3NpdGlvbicsXG4gICdzZWxlY3RQYWdlJywgJ3ByZXZQYWdlJywgJ25leHRQYWdlJyxcbiAgJ3RvZ2dsZURldGFpbFZpZXcnLFxuICAnZXhwYW5kUm93JywgJ2NvbGxhcHNlUm93JyxcbiAgJ2V4cGFuZEFsbFJvd3MnLCAnY29sbGFwc2VBbGxSb3dzJyxcbiAgJ3VwZGF0ZUNvbHVtblRpdGxlJywgJ3VwZGF0ZUZvcm1hdFRleHQnXG5dXG5cbmNvbnN0IEVWRU5UUyA9IHtcbiAgJ2FsbC5icy50YWJsZSc6ICdvbkFsbCcsXG4gICdjbGljay1yb3cuYnMudGFibGUnOiAnb25DbGlja1JvdycsXG4gICdkYmwtY2xpY2stcm93LmJzLnRhYmxlJzogJ29uRGJsQ2xpY2tSb3cnLFxuICAnY2xpY2stY2VsbC5icy50YWJsZSc6ICdvbkNsaWNrQ2VsbCcsXG4gICdkYmwtY2xpY2stY2VsbC5icy50YWJsZSc6ICdvbkRibENsaWNrQ2VsbCcsXG4gICdzb3J0LmJzLnRhYmxlJzogJ29uU29ydCcsXG4gICdjaGVjay5icy50YWJsZSc6ICdvbkNoZWNrJyxcbiAgJ3VuY2hlY2suYnMudGFibGUnOiAnb25VbmNoZWNrJyxcbiAgJ2NoZWNrLWFsbC5icy50YWJsZSc6ICdvbkNoZWNrQWxsJyxcbiAgJ3VuY2hlY2stYWxsLmJzLnRhYmxlJzogJ29uVW5jaGVja0FsbCcsXG4gICdjaGVjay1zb21lLmJzLnRhYmxlJzogJ29uQ2hlY2tTb21lJyxcbiAgJ3VuY2hlY2stc29tZS5icy50YWJsZSc6ICdvblVuY2hlY2tTb21lJyxcbiAgJ2xvYWQtc3VjY2Vzcy5icy50YWJsZSc6ICdvbkxvYWRTdWNjZXNzJyxcbiAgJ2xvYWQtZXJyb3IuYnMudGFibGUnOiAnb25Mb2FkRXJyb3InLFxuICAnY29sdW1uLXN3aXRjaC5icy50YWJsZSc6ICdvbkNvbHVtblN3aXRjaCcsXG4gICdwYWdlLWNoYW5nZS5icy50YWJsZSc6ICdvblBhZ2VDaGFuZ2UnLFxuICAnc2VhcmNoLmJzLnRhYmxlJzogJ29uU2VhcmNoJyxcbiAgJ3RvZ2dsZS5icy50YWJsZSc6ICdvblRvZ2dsZScsXG4gICdwcmUtYm9keS5icy50YWJsZSc6ICdvblByZUJvZHknLFxuICAncG9zdC1ib2R5LmJzLnRhYmxlJzogJ29uUG9zdEJvZHknLFxuICAncG9zdC1oZWFkZXIuYnMudGFibGUnOiAnb25Qb3N0SGVhZGVyJyxcbiAgJ3Bvc3QtZm9vdGVyLmJzLnRhYmxlJzogJ29uUG9zdEZvb3RlcicsXG4gICdleHBhbmQtcm93LmJzLnRhYmxlJzogJ29uRXhwYW5kUm93JyxcbiAgJ2NvbGxhcHNlLXJvdy5icy50YWJsZSc6ICdvbkNvbGxhcHNlUm93JyxcbiAgJ3JlZnJlc2gtb3B0aW9ucy5icy50YWJsZSc6ICdvblJlZnJlc2hPcHRpb25zJyxcbiAgJ3Jlc2V0LXZpZXcuYnMudGFibGUnOiAnb25SZXNldFZpZXcnLFxuICAncmVmcmVzaC5icy50YWJsZSc6ICdvblJlZnJlc2gnLFxuICAnc2Nyb2xsLWJvZHkuYnMudGFibGUnOiAnb25TY3JvbGxCb2R5J1xufVxuXG5PYmplY3QuYXNzaWduKERFRkFVTFRTLCBFTilcblxuZXhwb3J0IGRlZmF1bHQge1xuICBWRVJTSU9OLFxuXG4gIFRIRU1FOiBgYm9vdHN0cmFwJHtib290c3RyYXBWZXJzaW9ufWAsXG5cbiAgQ09OU1RBTlRTLFxuXG4gIERFRkFVTFRTLFxuXG4gIENPTFVNTl9ERUZBVUxUUyxcblxuICBNRVRIT0RTLFxuXG4gIEVWRU5UUyxcblxuICBMT0NBTEVTOiB7XG4gICAgZW46IEVOLFxuICAgICdlbi1VUyc6IEVOXG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/bootstrap-table/src/constants/index.js\n");

/***/ }),

/***/ "./node_modules/bootstrap-table/src/utils/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/bootstrap-table/src/utils/index.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  // it only does '%s', and return '' when arguments are undefined\n  sprintf (_str, ...args) {\n    let flag = true\n    let i = 0\n\n    const str = _str.replace(/%s/g, () => {\n      const arg = args[i++]\n\n      if (typeof arg === 'undefined') {\n        flag = false\n        return ''\n      }\n      return arg\n    })\n    return flag ? str : ''\n  },\n\n  isEmptyObject (obj = {}) {\n    return Object.entries(obj).length === 0 && obj.constructor === Object\n  },\n\n  isNumeric (n) {\n    return !isNaN(parseFloat(n)) && isFinite(n)\n  },\n\n  getFieldTitle (list, value) {\n    for (const item of list) {\n      if (item.field === value) {\n        return item.title\n      }\n    }\n    return ''\n  },\n\n  setFieldIndex (columns) {\n    let totalCol = 0\n    const flag = []\n\n    for (const column of columns[0]) {\n      totalCol += column.colspan || 1\n    }\n\n    for (let i = 0; i < columns.length; i++) {\n      flag[i] = []\n      for (let j = 0; j < totalCol; j++) {\n        flag[i][j] = false\n      }\n    }\n\n    for (let i = 0; i < columns.length; i++) {\n      for (const r of columns[i]) {\n        const rowspan = r.rowspan || 1\n        const colspan = r.colspan || 1\n        const index = flag[i].indexOf(false)\n\n        r.colspanIndex = index\n\n        if (colspan === 1) {\n          r.fieldIndex = index\n          // when field is undefined, use index instead\n          if (typeof r.field === 'undefined') {\n            r.field = index\n          }\n        } else {\n          r.colspanGroup = r.colspan\n        }\n\n        for (let k = 0; k < rowspan; k++) {\n          flag[i + k][index] = true\n        }\n        for (let k = 0; k < colspan; k++) {\n          flag[i][index + k] = true\n        }\n      }\n    }\n  },\n\n  updateFieldGroup (columns) {\n    const allColumns = columns.flat()\n\n    for (const c of columns) {\n      for (const r of c) {\n        if (r.colspanGroup > 1) {\n          let colspan = 0\n          for (let i = r.colspanIndex; i < r.colspanIndex + r.colspanGroup; i++) {\n            const column = allColumns.find(col => col.fieldIndex === i)\n            if (column.visible) {\n              colspan++\n            }\n          }\n          r.colspan = colspan\n          r.visible = colspan > 0\n        }\n      }\n    }\n  },\n\n  getScrollBarWidth () {\n    if (this.cachedWidth === undefined) {\n      const $inner = $('<div/>').addClass('fixed-table-scroll-inner')\n      const $outer = $('<div/>').addClass('fixed-table-scroll-outer')\n\n      $outer.append($inner)\n      $('body').append($outer)\n\n      const w1 = $inner[0].offsetWidth\n      $outer.css('overflow', 'scroll')\n      let w2 = $inner[0].offsetWidth\n\n      if (w1 === w2) {\n        w2 = $outer[0].clientWidth\n      }\n\n      $outer.remove()\n      this.cachedWidth = w1 - w2\n    }\n    return this.cachedWidth\n  },\n\n  calculateObjectValue (self, name, args, defaultValue) {\n    let func = name\n\n    if (typeof name === 'string') {\n      // support obj.func1.func2\n      const names = name.split('.')\n\n      if (names.length > 1) {\n        func = window\n        for (const f of names) {\n          func = func[f]\n        }\n      } else {\n        func = window[name]\n      }\n    }\n\n    if (func !== null && typeof func === 'object') {\n      return func\n    }\n\n    if (typeof func === 'function') {\n      return func.apply(self, args || [])\n    }\n\n    if (\n      !func &&\n      typeof name === 'string' &&\n      this.sprintf(name, ...args)\n    ) {\n      return this.sprintf(name, ...args)\n    }\n\n    return defaultValue\n  },\n\n  compareObjects (objectA, objectB, compareLength) {\n    const aKeys = Object.keys(objectA)\n    const bKeys = Object.keys(objectB)\n\n    if (compareLength && aKeys.length !== bKeys.length) {\n      return false\n    }\n\n    for (const key of aKeys) {\n      if (bKeys.includes(key) && objectA[key] !== objectB[key]) {\n        return false\n      }\n    }\n\n    return true\n  },\n\n  escapeHTML (text) {\n    if (typeof text === 'string') {\n      return text\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#039;')\n        .replace(/`/g, '&#x60;')\n    }\n    return text\n  },\n\n  getRealDataAttr (dataAttr) {\n    for (const [attr, value] of Object.entries(dataAttr)) {\n      const auxAttr = attr.split(/(?=[A-Z])/).join('-').toLowerCase()\n      if (auxAttr !== attr) {\n        dataAttr[auxAttr] = value\n        delete dataAttr[attr]\n      }\n    }\n    return dataAttr\n  },\n\n  getItemField (item, field, escape) {\n    let value = item\n\n    if (typeof field !== 'string' || item.hasOwnProperty(field)) {\n      return escape ? this.escapeHTML(item[field]) : item[field]\n    }\n\n    const props = field.split('.')\n    for (const p of props) {\n      value = value && value[p]\n    }\n    return escape ? this.escapeHTML(value) : value\n  },\n\n  isIEBrowser () {\n    return navigator.userAgent.includes('MSIE ') ||\n      /Trident.*rv:11\\./.test(navigator.userAgent)\n  },\n\n  findIndex (items, item) {\n    for (const it of items) {\n      if (JSON.stringify(it) === JSON.stringify(item)) {\n        return items.indexOf(it)\n      }\n    }\n    return -1\n  },\n\n  trToData (columns, $els) {\n    const data = []\n    const m = []\n\n    $els.each((y, el) => {\n      const row = {}\n\n      // save tr's id, class and data-* attributes\n      row._id = $(el).attr('id')\n      row._class = $(el).attr('class')\n      row._data = this.getRealDataAttr($(el).data())\n\n      $(el).find('>td,>th').each((_x, el) => {\n        const cspan = +$(el).attr('colspan') || 1\n        const rspan = +$(el).attr('rowspan') || 1\n        let x = _x\n\n        // skip already occupied cells in current row\n        for (; m[y] && m[y][x]; x++) {\n          // ignore\n        }\n\n        // mark matrix elements occupied by current cell with true\n        for (let tx = x; tx < x + cspan; tx++) {\n          for (let ty = y; ty < y + rspan; ty++) {\n            if (!m[ty]) { // fill missing rows\n              m[ty] = []\n            }\n            m[ty][tx] = true\n          }\n        }\n\n        const field = columns[x].field\n\n        row[field] = $(el).html().trim()\n        // save td's id, class and data-* attributes\n        row[`_${field}_id`] = $(el).attr('id')\n        row[`_${field}_class`] = $(el).attr('class')\n        row[`_${field}_rowspan`] = $(el).attr('rowspan')\n        row[`_${field}_colspan`] = $(el).attr('colspan')\n        row[`_${field}_title`] = $(el).attr('title')\n        row[`_${field}_data`] = this.getRealDataAttr($(el).data())\n      })\n      data.push(row)\n    })\n    return data\n  },\n\n  sort (a, b, order, sortStable) {\n    if (a === undefined || a === null) {\n      a = ''\n    }\n    if (b === undefined || b === null) {\n      b = ''\n    }\n\n    if (sortStable && a === b) {\n      a = a._position\n      b = b._position\n    }\n\n    // If both values are numeric, do a numeric comparison\n    if (this.isNumeric(a) && this.isNumeric(b)) {\n      // Convert numerical values form string to float.\n      a = parseFloat(a)\n      b = parseFloat(b)\n      if (a < b) {\n        return order * -1\n      }\n      if (a > b) {\n        return order\n      }\n      return 0\n    }\n\n    if (a === b) {\n      return 0\n    }\n\n    // If value is not a string, convert to string\n    if (typeof a !== 'string') {\n      a = a.toString()\n    }\n\n    if (a.localeCompare(b) === -1) {\n      return order * -1\n    }\n\n    return order\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/bootstrap-table/src/utils/index.js\n");

/***/ }),

/***/ "./node_modules/bootstrap-table/src/virtual-scroll/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/bootstrap-table/src/virtual-scroll/index.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst BLOCK_ROWS = 50\nconst CLUSTER_BLOCKS = 4\n\nclass VirtualScroll {\n\n  constructor (options) {\n    this.rows = options.rows\n    this.scrollEl = options.scrollEl\n    this.contentEl = options.contentEl\n    this.callback = options.callback\n    this.itemHeight = options.itemHeight\n\n    this.cache = {}\n    this.scrollTop = this.scrollEl.scrollTop\n\n    this.initDOM(this.rows)\n\n    this.scrollEl.scrollTop = this.scrollTop\n    this.lastCluster = 0\n\n    const onScroll = () => {\n      if (this.lastCluster !== (this.lastCluster = this.getNum())) {\n        this.initDOM(this.rows)\n        this.callback()\n      }\n    }\n\n    this.scrollEl.addEventListener('scroll', onScroll, false)\n    this.destroy = () => {\n      this.contentEl.innerHtml = ''\n      this.scrollEl.removeEventListener('scroll', onScroll, false)\n    }\n  }\n\n  initDOM (rows) {\n    if (typeof this.clusterHeight === 'undefined') {\n      this.cache.data = this.contentEl.innerHTML = rows[0] + rows[0] + rows[0]\n      this.getRowsHeight(rows)\n    }\n\n    const data = this.initData(rows, this.getNum())\n    const thisRows = data.rows.join('')\n    const dataChanged = this.checkChanges('data', thisRows)\n    const topOffsetChanged = this.checkChanges('top', data.topOffset)\n    const bottomOffsetChanged = this.checkChanges('bottom', data.bottomOffset)\n    const html = []\n\n    if (dataChanged && topOffsetChanged) {\n      if (data.topOffset) {\n        html.push(this.getExtra('top', data.topOffset))\n      }\n      html.push(thisRows)\n      if (data.bottomOffset) {\n        html.push(this.getExtra('bottom', data.bottomOffset))\n      }\n      this.contentEl.innerHTML = html.join('')\n    } else if (bottomOffsetChanged) {\n      this.contentEl.lastChild.style.height = `${data.bottomOffset}px`\n    }\n  }\n\n  getRowsHeight () {\n    if (typeof this.itemHeight === 'undefined') {\n      const nodes = this.contentEl.children\n      const node = nodes[Math.floor(nodes.length / 2)]\n      this.itemHeight = node.offsetHeight\n    }\n    this.blockHeight = this.itemHeight * BLOCK_ROWS\n    this.clusterRows = BLOCK_ROWS * CLUSTER_BLOCKS\n    this.clusterHeight = this.blockHeight * CLUSTER_BLOCKS\n  }\n\n  getNum () {\n    this.scrollTop = this.scrollEl.scrollTop\n    return Math.floor(this.scrollTop / (this.clusterHeight - this.blockHeight)) || 0\n  }\n\n  initData (rows, num) {\n    if (rows.length < BLOCK_ROWS) {\n      return {\n        topOffset: 0,\n        bottomOffset: 0,\n        rowsAbove: 0,\n        rows\n      }\n    }\n    const start = Math.max((this.clusterRows - BLOCK_ROWS) * num, 0)\n    const end = start + this.clusterRows\n    const topOffset = Math.max(start * this.itemHeight, 0)\n    const bottomOffset = Math.max((rows.length - end) * this.itemHeight, 0)\n    const thisRows = []\n    let rowsAbove = start\n    if (topOffset < 1) {\n      rowsAbove++\n    }\n    for (let i = start; i < end; i++) {\n      rows[i] && thisRows.push(rows[i])\n    }\n    return {\n      topOffset,\n      bottomOffset,\n      rowsAbove,\n      rows: thisRows\n    }\n  }\n\n  checkChanges (type, value) {\n    const changed = value !== this.cache[type]\n    this.cache[type] = value\n    return changed\n  }\n\n  getExtra (className, height) {\n    const tag = document.createElement('tr')\n    tag.className = `virtual-scroll-${className}`\n    if (height) {\n      tag.style.height = `${height}px`\n    }\n    return tag.outerHTML\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (VirtualScroll);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwLXRhYmxlL3NyYy92aXJ0dWFsLXNjcm9sbC9pbmRleC5qcz8zZWRiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLGlEQUFpRCxrQkFBa0I7QUFDbkU7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsU0FBUztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esc0NBQXNDLFVBQVU7QUFDaEQ7QUFDQSw0QkFBNEIsT0FBTztBQUNuQztBQUNBO0FBQ0E7QUFDQTs7QUFFZSw0RUFBYSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9ib290c3RyYXAtdGFibGUvc3JjL3ZpcnR1YWwtc2Nyb2xsL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQkxPQ0tfUk9XUyA9IDUwXG5jb25zdCBDTFVTVEVSX0JMT0NLUyA9IDRcblxuY2xhc3MgVmlydHVhbFNjcm9sbCB7XG5cbiAgY29uc3RydWN0b3IgKG9wdGlvbnMpIHtcbiAgICB0aGlzLnJvd3MgPSBvcHRpb25zLnJvd3NcbiAgICB0aGlzLnNjcm9sbEVsID0gb3B0aW9ucy5zY3JvbGxFbFxuICAgIHRoaXMuY29udGVudEVsID0gb3B0aW9ucy5jb250ZW50RWxcbiAgICB0aGlzLmNhbGxiYWNrID0gb3B0aW9ucy5jYWxsYmFja1xuICAgIHRoaXMuaXRlbUhlaWdodCA9IG9wdGlvbnMuaXRlbUhlaWdodFxuXG4gICAgdGhpcy5jYWNoZSA9IHt9XG4gICAgdGhpcy5zY3JvbGxUb3AgPSB0aGlzLnNjcm9sbEVsLnNjcm9sbFRvcFxuXG4gICAgdGhpcy5pbml0RE9NKHRoaXMucm93cylcblxuICAgIHRoaXMuc2Nyb2xsRWwuc2Nyb2xsVG9wID0gdGhpcy5zY3JvbGxUb3BcbiAgICB0aGlzLmxhc3RDbHVzdGVyID0gMFxuXG4gICAgY29uc3Qgb25TY3JvbGwgPSAoKSA9PiB7XG4gICAgICBpZiAodGhpcy5sYXN0Q2x1c3RlciAhPT0gKHRoaXMubGFzdENsdXN0ZXIgPSB0aGlzLmdldE51bSgpKSkge1xuICAgICAgICB0aGlzLmluaXRET00odGhpcy5yb3dzKVxuICAgICAgICB0aGlzLmNhbGxiYWNrKClcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLnNjcm9sbEVsLmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIG9uU2Nyb2xsLCBmYWxzZSlcbiAgICB0aGlzLmRlc3Ryb3kgPSAoKSA9PiB7XG4gICAgICB0aGlzLmNvbnRlbnRFbC5pbm5lckh0bWwgPSAnJ1xuICAgICAgdGhpcy5zY3JvbGxFbC5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBvblNjcm9sbCwgZmFsc2UpXG4gICAgfVxuICB9XG5cbiAgaW5pdERPTSAocm93cykge1xuICAgIGlmICh0eXBlb2YgdGhpcy5jbHVzdGVySGVpZ2h0ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhpcy5jYWNoZS5kYXRhID0gdGhpcy5jb250ZW50RWwuaW5uZXJIVE1MID0gcm93c1swXSArIHJvd3NbMF0gKyByb3dzWzBdXG4gICAgICB0aGlzLmdldFJvd3NIZWlnaHQocm93cylcbiAgICB9XG5cbiAgICBjb25zdCBkYXRhID0gdGhpcy5pbml0RGF0YShyb3dzLCB0aGlzLmdldE51bSgpKVxuICAgIGNvbnN0IHRoaXNSb3dzID0gZGF0YS5yb3dzLmpvaW4oJycpXG4gICAgY29uc3QgZGF0YUNoYW5nZWQgPSB0aGlzLmNoZWNrQ2hhbmdlcygnZGF0YScsIHRoaXNSb3dzKVxuICAgIGNvbnN0IHRvcE9mZnNldENoYW5nZWQgPSB0aGlzLmNoZWNrQ2hhbmdlcygndG9wJywgZGF0YS50b3BPZmZzZXQpXG4gICAgY29uc3QgYm90dG9tT2Zmc2V0Q2hhbmdlZCA9IHRoaXMuY2hlY2tDaGFuZ2VzKCdib3R0b20nLCBkYXRhLmJvdHRvbU9mZnNldClcbiAgICBjb25zdCBodG1sID0gW11cblxuICAgIGlmIChkYXRhQ2hhbmdlZCAmJiB0b3BPZmZzZXRDaGFuZ2VkKSB7XG4gICAgICBpZiAoZGF0YS50b3BPZmZzZXQpIHtcbiAgICAgICAgaHRtbC5wdXNoKHRoaXMuZ2V0RXh0cmEoJ3RvcCcsIGRhdGEudG9wT2Zmc2V0KSlcbiAgICAgIH1cbiAgICAgIGh0bWwucHVzaCh0aGlzUm93cylcbiAgICAgIGlmIChkYXRhLmJvdHRvbU9mZnNldCkge1xuICAgICAgICBodG1sLnB1c2godGhpcy5nZXRFeHRyYSgnYm90dG9tJywgZGF0YS5ib3R0b21PZmZzZXQpKVxuICAgICAgfVxuICAgICAgdGhpcy5jb250ZW50RWwuaW5uZXJIVE1MID0gaHRtbC5qb2luKCcnKVxuICAgIH0gZWxzZSBpZiAoYm90dG9tT2Zmc2V0Q2hhbmdlZCkge1xuICAgICAgdGhpcy5jb250ZW50RWwubGFzdENoaWxkLnN0eWxlLmhlaWdodCA9IGAke2RhdGEuYm90dG9tT2Zmc2V0fXB4YFxuICAgIH1cbiAgfVxuXG4gIGdldFJvd3NIZWlnaHQgKCkge1xuICAgIGlmICh0eXBlb2YgdGhpcy5pdGVtSGVpZ2h0ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uc3Qgbm9kZXMgPSB0aGlzLmNvbnRlbnRFbC5jaGlsZHJlblxuICAgICAgY29uc3Qgbm9kZSA9IG5vZGVzW01hdGguZmxvb3Iobm9kZXMubGVuZ3RoIC8gMildXG4gICAgICB0aGlzLml0ZW1IZWlnaHQgPSBub2RlLm9mZnNldEhlaWdodFxuICAgIH1cbiAgICB0aGlzLmJsb2NrSGVpZ2h0ID0gdGhpcy5pdGVtSGVpZ2h0ICogQkxPQ0tfUk9XU1xuICAgIHRoaXMuY2x1c3RlclJvd3MgPSBCTE9DS19ST1dTICogQ0xVU1RFUl9CTE9DS1NcbiAgICB0aGlzLmNsdXN0ZXJIZWlnaHQgPSB0aGlzLmJsb2NrSGVpZ2h0ICogQ0xVU1RFUl9CTE9DS1NcbiAgfVxuXG4gIGdldE51bSAoKSB7XG4gICAgdGhpcy5zY3JvbGxUb3AgPSB0aGlzLnNjcm9sbEVsLnNjcm9sbFRvcFxuICAgIHJldHVybiBNYXRoLmZsb29yKHRoaXMuc2Nyb2xsVG9wIC8gKHRoaXMuY2x1c3RlckhlaWdodCAtIHRoaXMuYmxvY2tIZWlnaHQpKSB8fCAwXG4gIH1cblxuICBpbml0RGF0YSAocm93cywgbnVtKSB7XG4gICAgaWYgKHJvd3MubGVuZ3RoIDwgQkxPQ0tfUk9XUykge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdG9wT2Zmc2V0OiAwLFxuICAgICAgICBib3R0b21PZmZzZXQ6IDAsXG4gICAgICAgIHJvd3NBYm92ZTogMCxcbiAgICAgICAgcm93c1xuICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBzdGFydCA9IE1hdGgubWF4KCh0aGlzLmNsdXN0ZXJSb3dzIC0gQkxPQ0tfUk9XUykgKiBudW0sIDApXG4gICAgY29uc3QgZW5kID0gc3RhcnQgKyB0aGlzLmNsdXN0ZXJSb3dzXG4gICAgY29uc3QgdG9wT2Zmc2V0ID0gTWF0aC5tYXgoc3RhcnQgKiB0aGlzLml0ZW1IZWlnaHQsIDApXG4gICAgY29uc3QgYm90dG9tT2Zmc2V0ID0gTWF0aC5tYXgoKHJvd3MubGVuZ3RoIC0gZW5kKSAqIHRoaXMuaXRlbUhlaWdodCwgMClcbiAgICBjb25zdCB0aGlzUm93cyA9IFtdXG4gICAgbGV0IHJvd3NBYm92ZSA9IHN0YXJ0XG4gICAgaWYgKHRvcE9mZnNldCA8IDEpIHtcbiAgICAgIHJvd3NBYm92ZSsrXG4gICAgfVxuICAgIGZvciAobGV0IGkgPSBzdGFydDsgaSA8IGVuZDsgaSsrKSB7XG4gICAgICByb3dzW2ldICYmIHRoaXNSb3dzLnB1c2gocm93c1tpXSlcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgIHRvcE9mZnNldCxcbiAgICAgIGJvdHRvbU9mZnNldCxcbiAgICAgIHJvd3NBYm92ZSxcbiAgICAgIHJvd3M6IHRoaXNSb3dzXG4gICAgfVxuICB9XG5cbiAgY2hlY2tDaGFuZ2VzICh0eXBlLCB2YWx1ZSkge1xuICAgIGNvbnN0IGNoYW5nZWQgPSB2YWx1ZSAhPT0gdGhpcy5jYWNoZVt0eXBlXVxuICAgIHRoaXMuY2FjaGVbdHlwZV0gPSB2YWx1ZVxuICAgIHJldHVybiBjaGFuZ2VkXG4gIH1cblxuICBnZXRFeHRyYSAoY2xhc3NOYW1lLCBoZWlnaHQpIHtcbiAgICBjb25zdCB0YWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0cicpXG4gICAgdGFnLmNsYXNzTmFtZSA9IGB2aXJ0dWFsLXNjcm9sbC0ke2NsYXNzTmFtZX1gXG4gICAgaWYgKGhlaWdodCkge1xuICAgICAgdGFnLnN0eWxlLmhlaWdodCA9IGAke2hlaWdodH1weGBcbiAgICB9XG4gICAgcmV0dXJuIHRhZy5vdXRlckhUTUxcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBWaXJ0dWFsU2Nyb2xsXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/bootstrap-table/src/virtual-scroll/index.js\n");

/***/ }),

/***/ "./node_modules/startbootstrap-sb-admin-2/js/sb-admin-2.js":
/*!*****************************************************************!*\
  !*** ./node_modules/startbootstrap-sb-admin-2/js/sb-admin-2.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function($) {\n  \"use strict\"; // Start of use strict\n\n  // Toggle the side navigation\n  $(\"#sidebarToggle, #sidebarToggleTop\").on('click', function(e) {\n    $(\"body\").toggleClass(\"sidebar-toggled\");\n    $(\".sidebar\").toggleClass(\"toggled\");\n    if ($(\".sidebar\").hasClass(\"toggled\")) {\n      $('.sidebar .collapse').collapse('hide');\n    };\n  });\n\n  // Close any open menu accordions when window is resized below 768px\n  $(window).resize(function() {\n    if ($(window).width() < 768) {\n      $('.sidebar .collapse').collapse('hide');\n    };\n  });\n\n  // Prevent the content wrapper from scrolling when the fixed side navigation hovered over\n  $('body.fixed-nav .sidebar').on('mousewheel DOMMouseScroll wheel', function(e) {\n    if ($(window).width() > 768) {\n      var e0 = e.originalEvent,\n        delta = e0.wheelDelta || -e0.detail;\n      this.scrollTop += (delta < 0 ? 1 : -1) * 30;\n      e.preventDefault();\n    }\n  });\n\n  // Scroll to top button appear\n  $(document).on('scroll', function() {\n    var scrollDistance = $(this).scrollTop();\n    if (scrollDistance > 100) {\n      $('.scroll-to-top').fadeIn();\n    } else {\n      $('.scroll-to-top').fadeOut();\n    }\n  });\n\n  // Smooth scrolling using jQuery easing\n  $(document).on('click', 'a.scroll-to-top', function(e) {\n    var $anchor = $(this);\n    $('html, body').stop().animate({\n      scrollTop: ($($anchor.attr('href')).offset().top)\n    }, 1000, 'easeInOutExpo');\n    e.preventDefault();\n  });\n\n})(jQuery); // End of use strict\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3RhcnRib290c3RyYXAtc2ItYWRtaW4tMi9qcy9zYi1hZG1pbi0yLmpzP2MzZTYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxlQUFlOztBQUVmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHOztBQUVILENBQUMsVUFBVSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9zdGFydGJvb3RzdHJhcC1zYi1hZG1pbi0yL2pzL3NiLWFkbWluLTIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oJCkge1xuICBcInVzZSBzdHJpY3RcIjsgLy8gU3RhcnQgb2YgdXNlIHN0cmljdFxuXG4gIC8vIFRvZ2dsZSB0aGUgc2lkZSBuYXZpZ2F0aW9uXG4gICQoXCIjc2lkZWJhclRvZ2dsZSwgI3NpZGViYXJUb2dnbGVUb3BcIikub24oJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xuICAgICQoXCJib2R5XCIpLnRvZ2dsZUNsYXNzKFwic2lkZWJhci10b2dnbGVkXCIpO1xuICAgICQoXCIuc2lkZWJhclwiKS50b2dnbGVDbGFzcyhcInRvZ2dsZWRcIik7XG4gICAgaWYgKCQoXCIuc2lkZWJhclwiKS5oYXNDbGFzcyhcInRvZ2dsZWRcIikpIHtcbiAgICAgICQoJy5zaWRlYmFyIC5jb2xsYXBzZScpLmNvbGxhcHNlKCdoaWRlJyk7XG4gICAgfTtcbiAgfSk7XG5cbiAgLy8gQ2xvc2UgYW55IG9wZW4gbWVudSBhY2NvcmRpb25zIHdoZW4gd2luZG93IGlzIHJlc2l6ZWQgYmVsb3cgNzY4cHhcbiAgJCh3aW5kb3cpLnJlc2l6ZShmdW5jdGlvbigpIHtcbiAgICBpZiAoJCh3aW5kb3cpLndpZHRoKCkgPCA3NjgpIHtcbiAgICAgICQoJy5zaWRlYmFyIC5jb2xsYXBzZScpLmNvbGxhcHNlKCdoaWRlJyk7XG4gICAgfTtcbiAgfSk7XG5cbiAgLy8gUHJldmVudCB0aGUgY29udGVudCB3cmFwcGVyIGZyb20gc2Nyb2xsaW5nIHdoZW4gdGhlIGZpeGVkIHNpZGUgbmF2aWdhdGlvbiBob3ZlcmVkIG92ZXJcbiAgJCgnYm9keS5maXhlZC1uYXYgLnNpZGViYXInKS5vbignbW91c2V3aGVlbCBET01Nb3VzZVNjcm9sbCB3aGVlbCcsIGZ1bmN0aW9uKGUpIHtcbiAgICBpZiAoJCh3aW5kb3cpLndpZHRoKCkgPiA3NjgpIHtcbiAgICAgIHZhciBlMCA9IGUub3JpZ2luYWxFdmVudCxcbiAgICAgICAgZGVsdGEgPSBlMC53aGVlbERlbHRhIHx8IC1lMC5kZXRhaWw7XG4gICAgICB0aGlzLnNjcm9sbFRvcCArPSAoZGVsdGEgPCAwID8gMSA6IC0xKSAqIDMwO1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH1cbiAgfSk7XG5cbiAgLy8gU2Nyb2xsIHRvIHRvcCBidXR0b24gYXBwZWFyXG4gICQoZG9jdW1lbnQpLm9uKCdzY3JvbGwnLCBmdW5jdGlvbigpIHtcbiAgICB2YXIgc2Nyb2xsRGlzdGFuY2UgPSAkKHRoaXMpLnNjcm9sbFRvcCgpO1xuICAgIGlmIChzY3JvbGxEaXN0YW5jZSA+IDEwMCkge1xuICAgICAgJCgnLnNjcm9sbC10by10b3AnKS5mYWRlSW4oKTtcbiAgICB9IGVsc2Uge1xuICAgICAgJCgnLnNjcm9sbC10by10b3AnKS5mYWRlT3V0KCk7XG4gICAgfVxuICB9KTtcblxuICAvLyBTbW9vdGggc2Nyb2xsaW5nIHVzaW5nIGpRdWVyeSBlYXNpbmdcbiAgJChkb2N1bWVudCkub24oJ2NsaWNrJywgJ2Euc2Nyb2xsLXRvLXRvcCcsIGZ1bmN0aW9uKGUpIHtcbiAgICB2YXIgJGFuY2hvciA9ICQodGhpcyk7XG4gICAgJCgnaHRtbCwgYm9keScpLnN0b3AoKS5hbmltYXRlKHtcbiAgICAgIHNjcm9sbFRvcDogKCQoJGFuY2hvci5hdHRyKCdocmVmJykpLm9mZnNldCgpLnRvcClcbiAgICB9LCAxMDAwLCAnZWFzZUluT3V0RXhwbycpO1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgfSk7XG5cbn0pKGpRdWVyeSk7IC8vIEVuZCBvZiB1c2Ugc3RyaWN0XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/startbootstrap-sb-admin-2/js/sb-admin-2.js\n");

/***/ }),

/***/ "./node_modules/startbootstrap-sb-admin-2/scss/sb-admin-2.scss":
/*!*********************************************************************!*\
  !*** ./node_modules/startbootstrap-sb-admin-2/scss/sb-admin-2.scss ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3RhcnRib290c3RyYXAtc2ItYWRtaW4tMi9zY3NzL3NiLWFkbWluLTIuc2Nzcz9lZTk0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3N0YXJ0Ym9vdHN0cmFwLXNiLWFkbWluLTIvc2Nzcy9zYi1hZG1pbi0yLnNjc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/startbootstrap-sb-admin-2/scss/sb-admin-2.scss\n");

/***/ })

}]);